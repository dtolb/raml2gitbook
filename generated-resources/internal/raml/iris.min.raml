#%RAML 0.8
---
title: Bandwidth Dashboard REST API Documentation
# Use null host here to trigger automatic replacement in javascript
baseUri: http://null
version: v1
securedBy: [basic]
securitySchemes:
   - basic:
        type: Basic Authentication
/accounts: 
    description: |
        The account is the root resource for many of the operations in the Bandwidth Dashboard API.  <br>
        The account is represented by an account id, which is the resource that represents a Bandwidth customer, providing a root resource for all of the customer's attributes and services <br>
        The API calls that are used to manage the details of a customer account, and to manage the resources that a Bandwidth customer has access to or control over, are accessed through the /accounts resource. 
    post:
        description: Create an Account
        body:
            application/xml:
                example: 
                    <?xml version="1.0"?>
                    <Account>
                        <GlobalAccountNumber>globalAccount</GlobalAccountNumber>
                        <AssociatedCatapultAccount>u-ertyhgfd12dcvdhnboklk</AssociatedCatapultAccount>
                        <CompanyName>ABC Corp</CompanyName>
                        <AccountType>Business</AccountType>
                        <Tiers>
                            <Tier>0</Tier>
                        </Tiers>
                        <ExternalId>123</ExternalId>
                        <BillingCycle>1</BillingCycle>
                        <Pricing>1</Pricing>
                        <NenaId>A123</NenaId>
                        <PenaltyType/>
                        <LnpEnabled>true</LnpEnabled>     <!-- true or false - optional - default is False -->
                        <ProtectedTnsAllowed>true</ProtectedTnsAllowed>
                        <CustomerProvidedTnsAllowed>true</CustomerProvidedTnsAllowed>
                        <TnsAssignmentAllowed>true</TnsAssignmentAllowed>
                        <MaxTnsForAutomatedPort>10</MaxTnsForAutomatedPort>
                        <Contact>
                            <FirstName>John</FirstName>
                            <LastName>Doe</LastName>
                            <Suffix>Jr</Suffix>
                            <Title/>
                            <Phone>9199919999</Phone>
                            <Fax/>
                            <Mobile/>
                            <OtherPhone/>
                            <Email>johndoe@abc.com</Email>
                            <WebsiteAddress/>
                        </Contact>
                        <Address>
                            <HouseNumber>123</HouseNumber>
                            <HouseSuffix/>
                            <PreDirectional/>
                            <StreetName>Main Street</StreetName>
                            <StreetSuffix/>
                            <PostDirectional/>
                            <AddressLine2/>
                            <City>RALEIGH</City>
                            <StateCode>NC</StateCode>
                            <Zip>27606</Zip>
                            <PlusFour/>
                            <County>WAKE</County>
                            <Country>United States</Country>
                            <AddressType>Billing</AddressType>
                        </Address>
                    </Account>
        responses:
            200:
                body:
                    application/xml:
                        example: None
    get:
        description: Retrieve information about the an account or set of accounts, as guided by optional search parameters.
        queryParameters:
            TN:
                description: a TN - 10 Digits
                type: string
                example: 9199918388
            PON:
                description: Purchase Order Number - associated with the processing of the Port-in by third parties
                type: string
                example: bwc0000155348
            CustomerOrderNumber:
                description: An order-ID assigned by the customer for their own tracking purposes.  Filters for accounts that processed an order with the identified Customer order ID
                example: ATT123456
            host:
                description: An IP address or subnet (CIDR format) associated with the account. Filter for subnet applies by exact match.
                example: 47.16.211.63 or 69.22.181.68/30
            name:
                description: The common name string representation of the account.  This parameter can be the first few characters of the account name.
                type: string
                example: Republic Wireless
            OrderID:
                description: An interal order ID that was used in conjunction with the account to process a transaction. This parameter can be the first few characters of the Order ID.
                example: b1c0ffb4-76..
        responses:
            200:
                description: A successful result that contains the result
                body:
                    application/xml:
                        example: |
                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                            <AccountsResponse>
                                <Accounts>
                                    <Account>
                                        <AccountId>138</AccountId>
                                        <CompanyName>1 Plug Corporation</CompanyName>
                                    </Account>
                                    <Account>
                                        <AccountId>309</AccountId>
                                        <CompanyName>1A Auto Inc</CompanyName>
                                    </Account>
                                </Accounts>
                            </AccountsResponse>
    /{accountId}: 
        description: This API retrieves and updates an account's information as specified by the given account ID. Access to information pertaining to a specific account will require credentials that have been assigned to that account, preserving the security of a customer’s information. <br>Note that DELETE is currently unsupported.
        put:
            description: Updates Account. Note that the body is similar in structure to POST for /accounts
            body:
                application/xml:
                    example:
                        <Account>
                            <GlobalAccountNumber>globalAccount</GlobalAccountNumber>
                            <AssociatedCatapultAccount>u-ertyhgfd12dcvdhnboklk</AssociatedCatapultAccount>
                            <CompanyName>ABC Corp</CompanyName>
                            <AccountType>Business</AccountType>
                            <Tiers>
                                <Tier>0</Tier>
                            </Tiers>
                            <ExternalId>123</ExternalId>
                            <BillingCycle>1</BillingCycle>
                            <Pricing>1</Pricing>
                            <NenaId>A123</NenaId>
                            <ReservationAllowed>[true|false]</ReservationAllowed>
                            <LnpEnabled>[true|false]</LnpEnabled>
                            <ProtectedTnsAllowed>[true|false]</ProtectedTnsAllowed>
                            <CustomerProvidedTnsAllowed>[true|false]</CustomerProvidedTnsAllowed>
                            <TnsAssignmentAllowed>[true|false]</TnsAssignmentAllowed>
                            <MaxTnsForAutomatedPort>10</MaxTnsForAutomatedPort>
                            <AltSpid>X455</AltSpid>   <!-- 5 alphanumeric -->
                            <SPID>1235</SPID>         <!-- 4 alphanumeric or 'mult' -->
                            <PenaltyType/>
                            <Contact>
                                <FirstName>John</FirstName>
                                <LastName>Doe</LastName>
                                <Suffix>Jr</Suffix>
                                <Title/>
                                <Phone>9199919999</Phone>
                                <Fax/>
                                <Mobile/>
                                <OtherPhone/>
                                <Email>johndoe@abc.com</Email>
                                <WebsiteAddress/>
                            </Contact>
                            <Address>
                                <HouseNumber>123</HouseNumber>
                                <HouseSuffix/>
                                <PreDirectional/>
                                <StreetName>Main Street</StreetName>
                                <StreetSuffix/>
                                <PostDirectional/>
                                <AddressLine2/>
                                <City>RALEIGH</City>
                                <StateCode>NC</StateCode>
                                <Zip>27606</Zip>
                                <PlusFour/>
                                <County>WAKE</County>
                                <Country>United States</Country>
                                <AddressType>Billing</AddressType>
                            </Address>
                        </Account>
            responses:
                200:
        get:
            description: This API call retrieves information about the account indicated by the Account ID.
            responses:
                200:
                    body:
                        application/xml:
                            example: |
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <AccountResponse>
                                    <Account>
                                        <AccountId>14</AccountId>
                                        <AssociatedCatapultAccount>u-ertyhgfd12dcvdhnboklk</AssociatedCatapultAccount>
                                        <GlobalAccountNumber>globalAccount</GlobalAccountNumber>
                                        <CompanyName>CWI Hosting</CompanyName>
                                        <AccountType>Business</AccountType>
                                        <NenaId></NenaId>
                                        <Tiers>
                                            <Tier>0</Tier>
                                        </Tiers>
                                        <Address>
                                            <HouseNumber>60</HouseNumber>
                                            <HouseSuffix></HouseSuffix>
                                            <PreDirectional></PreDirectional>
                                            <StreetName>Pine</StreetName>
                                            <StreetSuffix>St</StreetSuffix>
                                            <PostDirectional></PostDirectional>
                                            <AddressLine2></AddressLine2>
                                            <City>Denver</City>
                                            <StateCode>CO</StateCode>
                                            <Zip>80016</Zip>
                                            <PlusFour></PlusFour>
                                            <County></County>
                                            <Country>United States</Country>
                                            <AddressType>Service</AddressType>
                                        </Address>
                                        <Contact>
                                            <FirstName>Sanjay</FirstName>
                                            <LastName>Rao</LastName>
                                            <Phone>9195441234</Phone>
                                            <Email>srao@bandwidth.com</Email>
                                        </Contact>
                                        <ReservationAllowed>true</ReservationAllowed>
                                        <LnpEnabled>true</LnpEnabled>
                                        <AltSpid>X455</AltSpid>
                                        <SPID>9999</SPID>
                                        <PortCarrierType>WIRELINE</PortCarrierType>
                                    </Account>
                                </AccountResponse>
        /addresses: 
            description: |
                This resource is used to manage addresses.
            get:
                description: |
                    GET is used to retrieve all addresses.
                queryParameters:
                        type:
                            description: Search criteria for addresses by their type.
                            enum: [e911]
                            example: e911
                            required: true
                responses:
                    200:
                        description: |
                            OK - the addresses retrieval request will return a list of all addresses having specified type.
                        body:
                            application/xml:
                                example: 
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <AddressesResponse>
                                        <TotalCount>1</TotalCount>
                                        <Links>
                                            <first>Link=&lt;http://admin.localhost:8080/api/accounts/8000259/addresses?type=e911&gt;;rel="first";</first>
                                        </Links>
                                        <Addresses>
                                            <Address>
                                                <HouseNumber>207</HouseNumber>
                                                <HouseSuffix></HouseSuffix>
                                                <PreDirectional></PreDirectional>
                                                <StreetName>Elmastar</StreetName>
                                                <StreetSuffix>AlternateStar</StreetSuffix>
                                                <PostDirectional></PostDirectional>
                                                <AddressLine2></AddressLine2>
                                                <City>Carpinteriaaly</City>
                                                <StateCode>NY</StateCode>
                                                <Zip>93019</Zip>
                                                <PlusFour></PlusFour>
                                                <County></County>
                                                <Country>United States</Country>
                                                <AddressType>E911</AddressType>
                                                <ValidationStatus>VALID</ValidationStatus>
                                            </Address>
                                        </Addresses>
                                    </AddressesResponse>
                    404:
                        description: |
                            Not Found - if the account specified does not exist or is locked or there are no addresses for specified search criteria it will result in a not found.
                        body:
                            application/xml:
                                example: 
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <AddressesResponse>
                                        <ResponseStatus>
                                            <Description>The resource does not exist</Description>
                                        </ResponseStatus>
                                    </AddressesResponse>
        /aeuis: 
            description: |
                This resource is used to manage alternate end user identifiers (AEUIs).
            get:
                description: |
                    GET is used to retrieve all Alternate end user identifiers.
                queryParameters:
                        page:
                            description: An ID of the first element in a page.  This value will indicate the first value, not the count, of the initial entry in the page being requested.<br>
                                It can be an acid of alternate end user identifier. The initial page is tagged with the ID '1'.
                            type: string
                            example: 3, customIdentifier
                            default: 1
                            required: false
                        size:
                            description: The number of items to include in a page.
                            type: integer
                            example: 5000
                            default: 500
                            required: false
                        aeui:
                            description: The Alternate end user identifier associated with callback using E911 order.
                            type: string
                            example: someAcid
                            required: false
                        callback:
                            description: Callback telephone number associated with AEUI using E911 oder.
                            type: string
                            example: 8042105760
                            required: false
                        pidfloenabledonly:
                            description: This parameter allows to retrieve PIDF-LO enabled only AEUIs.
                            type: boolean
                            default: false
                            required: false
                responses:
                    200:
                        description: |
                            OK - the AEUIs retrieval request will return a list of all AEUIs.
                        body:
                            application/xml:
                                example: 
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <AlternateEndUserIdentifiersResponse>
                                        <TotalCount>2</TotalCount>
                                        <Links>
                                            <first>Link=&lt;http://localhost:8080/iris/accounts/14/aeuis?page=1&amp;size=500&gt;;rel="first";</first>
                                        </Links>
                                        <AlternateEndUserIdentifiers>
                                            <AlternateEndUserIdentifier>
                                                <Identifier>DavidAcid</Identifier>
                                                <CallbackNumber>8042105760</CallbackNumber>
                                            </AlternateEndUserIdentifier>
                                            <AlternateEndUserIdentifier>
                                                <Identifier>JohnAcid</Identifier>
                                                <CallbackNumber>8042105618</CallbackNumber>
                                            </AlternateEndUserIdentifier>
                                        </AlternateEndUserIdentifiers>
                                    </AlternateEndUserIdentifiersResponse>
                    404:
                        description: |
                            Not Found - if the account specified does not exist or is locked or there are no AEUIs for specified search criteria it will result in a "NOT FOUND" response.
                        body:
                            application/xml:
                                example: 
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <AlternateEndUserIdentifiersResponse>
                                        <ResponseStatus>
                                            <ErrorCode>12087</ErrorCode>
                                            <Description>Alternate End User Identifiers were not found.</Description>
                                        </ResponseStatus>
                                    </AlternateEndUserIdentifiersResponse>
            /{acid}: 
                description: |
                    This resource is used to retrieve detailed alternate end user identifiers (AEUIs).<br>
                get:
                    description: |
                        GET is used to retrieve a detailed information of Alternate end user identifier by acid.
                    responses:
                        200:
                            description: |
                                OK - will return full information about AEUI for the specified acid.
                            body:
                                application/xml:
                                    example: 
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <AlternateEndUserIdentifierResponse>
                                            <AlternateEndUserIdentifier>
                                                <Identifier>DavidAcid</Identifier>
                                                <CallbackNumber>8042105760</CallbackNumber>
                                                <E911>
                                                    <CallerName>David</CallerName>
                                                    <Address>
                                                        <HouseNumber>900</HouseNumber>
                                                        <HouseSuffix></HouseSuffix>
                                                        <PreDirectional></PreDirectional>
                                                        <StreetName>MAIN CAMPUS</StreetName>
                                                        <StreetSuffix>DR</StreetSuffix>
                                                        <AddressLine2></AddressLine2>
                                                        <City>RALEIGH</City>
                                                        <StateCode>NC</StateCode>
                                                        <Zip>27606</Zip>
                                                        <PlusFour>5214</PlusFour>
                                                        <Country>United States</Country>
                                                        <AddressType>Billing</AddressType>
                                                    </Address>
                                                </E911>
                                            </AlternateEndUserIdentifier>
                                        </AlternateEndUserIdentifierResponse>
                        404:
                            description: |
                                Not Found - if the account specified does not exist or is locked or there are no AEUI that corresponds to specified acid it will result in a "NOT FOUND" response.
                            body:
                                application/xml:
                                    example: 
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <AlternateEndUserIdentifierResponse>
                                            <ResponseStatus>
                                                <Description>The resource does not exist</Description>
                                            </ResponseStatus>
                                        </AlternateEndUserIdentifierResponse>
        /analytics: 
            description: |
                This resource returns account-level analytic data, e.g. some resource usage.
            get:
                responses:
                    404:
                        description: |
                            Not Found - if the API call does not specify the type of data.
                        body:
                            application/xml:
                                example: 
                                    <AnalyticsResult>
                                        <ErrorList>
                                            <Error>
                                                <Code>12751</Code>
                                                <Description>The specific type of analytics data must be declared. Options are [numbersassignmentdata]</Description>
                                            </Error>
                                        </ErrorList>
                                    </AnalyticsResult>
            /numbersassignmentdata: 
                description: |
                    This resource returns pre-processed data on account telephone numbers to track customer number assignment and usage.
                get:
                    description: |
                        Retrieves general information about number assignment and usage.
                    responses:
                        200:
                            body:
                                application/xml:
                                    example: 
                                        <AnalyticsResult>
                                            <TelephoneNumbersAssignmentData>
                                                <TelephoneNumberCount>100</TelephoneNumberCount>
                                                <AssignedNumberCount>50</AssignedNumberCount>
                                                <UnassignedNumberCount>50</UnassignedNumberCount>
                                            </TelephoneNumbersAssignmentData>
                                        </AnalyticsResult>
                        404:
                            description: |
                                Not Found - if the account does not have the capability to declare number assignment.
                            body:
                                application/xml:
                                    example: 
                                        <AnalyticsResult>
                                            <ErrorList>
                                                <Error>
                                                    <Code>12753</Code>
                                                    <Description>This account is not enabled for TN Assignment analytics data</Description>
                                                </Error>
                                            </ErrorList>
                                        </AnalyticsResult>
        /applications: 
            description: |
                The application is a resource that will provide customers with ability to send and receive SMS and MMS to/from outside world using HTTP signalling.  This resource identifies the callback information required to contact the customer for the delivery of a message (or for other communication as required)
                The application is represented by an application id.
                The API calls that are used to manage the details of a customer-defined application are accessed through the /accounts/{accountId}/applications resource.
            post:
                description: Create an Application
                body:
                    application/xml:
                        example:
                            <?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
                            <Application>
                              <ServiceType>Messaging-V2</ServiceType>
                              <AppName>EBVICs</AppName>
                              <CallbackUrl>https://example.com</CallbackUrl>
                              <CallbackCreds>
                                <UserId>15jPWZmXdm</UserId>
                                <Password>xxv3jPsPR2</Password>
                              </CallbackCreds>
                            </Application>
                responses:
                    201:
                        body:
                            application/xml:
                                example:
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <ApplicationProvisioningResponse>
                                      <Application>
                                        <ApplicationId>e5a9e103-097e-4ec4-87a0-50109fb7b4b1</ApplicationId>
                                        <ServiceType>Messaging-V2</ServiceType>
                                        <AppName>EBVICs</AppName>
                                        <CallbackUrl>https://example.com</CallbackUrl>
                                        <CallbackCreds>
                                          <UserId>15jPWZmXdm</UserId>
                                          <Password>xxv3jPsPR2</Password>
                                        </CallbackCreds>
                                      </Application>
                                    </ApplicationProvisioningResponse>
            /{applicationId}:
              get:
                description: Retrieve an Application
                responses:
                    200:
                        body:
                            application/xml:
                                example:
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <ApplicationProvisioningResponse>
                                      <Application>
                                        <ApplicationId>e5a9e103-097e-4ec4-87a0-50109fb7b4b1</ApplicationId>
                                        <ServiceType>Messaging-V2</ServiceType>
                                        <AppName>qMmmTT</AppName>
                                        <CallbackUrl>https://example.com</CallbackUrl>
                                        <CallbackCreds>
                                          <UserId>15jPWZmXdm</UserId>
                                          <Password>xxv3jPsPR2</Password>
                                        </CallbackCreds>
                                      </Application>
                                    </ApplicationProvisioningResponse>
              put:
                description: Update an Application
                body:
                     application/xml:
                         example:
                            <?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
                            <Application>
                              <ApplicationId>e5a9e103-097e-4ec4-87a0-50109fb7b4b1</ApplicationId>
                              <ServiceType>Messaging-V2</ServiceType>
                              <AppName>qMmmTT</AppName>
                              <CallbackUrl>https://example.com</CallbackUrl>
                              <CallbackCreds>
                                <UserId>15jPWZmXdm</UserId>
                                <Password>xxv3jPsPR2</Password>
                              </CallbackCreds>
                            </Application>
                responses:
                    200:
                        body:
                            application/xml:
                                example:
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <ApplicationProvisioningResponse>
                                      <Application>
                                        <ApplicationId>e5a9e103-097e-4ec4-87a0-50109fb7b4b1</ApplicationId>
                                        <ServiceType>Messaging-V2</ServiceType>
                                        <AppName>qMmmTT</AppName>
                                        <CallbackUrl>https://example.com</CallbackUrl>
                                        <CallbackCreds>
                                          <UserId>15jPWZmXdm</UserId>
                                          <Password>xxv3jPsPR2</Password>
                                        </CallbackCreds>
                                      </Application>
                                    </ApplicationProvisioningResponse>
              patch:
                description: Patch update an Application
                body:
                     application/xml:
                         example:
                            <?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
                            <Application>
                              <AppName>XgRIdP</AppName>
                            </Application>
                responses:
                    200:
                        body:
                            application/xml:
                                example:
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <ApplicationProvisioningResponse>
                                      <Application>
                                        <ApplicationId>e5a9e103-097e-4ec4-87a0-50109fb7b4b1</ApplicationId>
                                        <ServiceType>Messaging-V2</ServiceType>
                                        <AppName>XgRIdP</AppName>
                                        <CallbackUrl>https://example.com</CallbackUrl>
                                        <CallbackCreds>
                                          <UserId>15jPWZmXdm</UserId>
                                          <Password>xxv3jPsPR2</Password>
                                        </CallbackCreds>
                                      </Application>
                                    </ApplicationProvisioningResponse>
              delete:
                  description: Delete an Application
                  responses:
                      200:
                          body:
                              application/xml:
                                  example: None
            /{applicationId}/associatedsippeers:
              get:
                description: Retrieve a list of sippeers, associated with application
                responses:
                    200:
                        body:
                            application/xml:
                                example:
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <AssociatedSipPeersResponse>
                                        <AssociatedSipPeers>
                                            <AssociatedSipPeer>
                                                <siteId>482</siteId>
                                                <siteName>site_e867f</siteName>
                                                <peerId>500018</peerId>
                                                <peerName>sippeer-e867f</peerName>
                                            </AssociatedSipPeer>
                                            <AssociatedSipPeer>
                                                <siteId>483</siteId>
                                                <siteName>site_e867d</siteName>
                                                <peerId>500019</peerId>
                                                <peerName>sippeer-e867d</peerName>
                                            </AssociatedSipPeer>
                                        </AssociatedSipPeers>
                                    </AssociatedSipPeersResponse>
                    400:
                        body:
                            application/xml:
                                example:
                                    <AssociatedSipPeersResponse>
                                        <ResponseStatus>
                                            <ErrorCode>12103</ErrorCode>
                                            <Description>
                                                Current 1 Account have no Catapult association
                                            </Description>
                                        </ResponseStatus>
                                    </AssociatedSipPeersResponse>
                    404:
                        body:
                            application/xml:
                                example:
                                    <AssociatedSipPeersResponse>
                                        <ResponseStatus>
                                            <ErrorCode>13629</ErrorCode>
                                                <Description>
                                                    Application with id 'non_existing' not found
                                                </Description>
                                        </ResponseStatus>
                                    </AssociatedSipPeersResponse>
        /availableNpaNxx: 
            description: Retrieves the quantity of available phone numbers in the given area code. The numbers are grouped by alike Npa-Nxx.
            get:
                description: Retrieves a list of available Npa-Nxx telephone numbers.
                queryParameters:
                    areaCode:
                        type: integer
                        description: The allowed number ranges are [2-9] for the first digit and [0-9] for both the second and third digits.
                        example: 919
                    state:
                        description: Returns only the NPA NXX information within the specified state
                        type: string 
                        example: NC
                    quantity:
                        description: Filters out any Npa-Nxx grouped phone numbers whose quantity falls short of the given quantity.
                        type: integer
                        example: 150
                responses:
                    200:
                        description: The quantity of available phone numbers, grouped by NPA-NXX.
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="no"?>
                                    <SearchResultForAvailableNpaNxx>
                                        <AvailableNpaNxxList>
                                            <AvailableNpaNxx>
                                                <City>NASHVILLE</City>
                                                <Npa>252</Npa>
                                                <Nxx>220</Nxx>
                                                <Quantity>1</Quantity>
                                                <State>NC</State>
                                            </AvailableNpaNxx>
                                            <AvailableNpaNxx>
                                                <City>FARMVILLE</City>
                                                <Npa>252</Npa>
                                                <Nxx>228</Nxx>
                                                <Quantity>1</Quantity>
                                                <State>NC</State>
                                            </AvailableNpaNxx>
                                        </AvailableNpaNxxList>
                                    </SearchResultForAvailableNpaNxx>
                    400:
                        description: There are no phone numbers within the specified scope.
                        body:
                            application/xml:
                                example: |
                                    <SearchResultForAvailableNpaNxx>
                                        <Error>
                                            <Code>4000</Code>
                                            <Description>The area code specified 433 is not present as a valid entry in our system</Description>
                                        </Error>
                                    </SearchResultForAvailableNpaNxx>
        /availableNumbers: 
            description: |
                The /availableNumbers API call searches for available phone numbers based on one or more of the following criteria:<br>
                <ul>
                    <li>Area Code</li>
                    <li>NPA-NXX</li>
                    <li>NPA-NXX with Local Area Calling</li>
                    <li>NPA-NXX-X</li>
                    <li>NPA-NXX-X with Local Area Calling</li>
                    <li>RateCenter</li>
                    <li>RateCenter with Local Area Calling</li>
                    <li>State</li>
                    <li>City/State</li>
                    <li>Zip Code</li>
                    <li>LATA</li>
                    <li>Local Vanity</li>
                    <li>TollFree Vanity</li>
                    <li>TollFree WildCard Pattern</li>
                </ul>
                <br>
                Each choice above has required and optional parameters. Some search parameters can be combined with others.
                Allowed search criteria are limited in case of search by Local Calling Area (see restrictions below).<br>
                <table>
                    <tr>
                        <th>Search Criteria</th>
                        <th>Required Parameters</th>
                        <th>Combinable Parameters</th>
                        <th>Optional Parameters</th>
                    </tr>
                    <tr>
                        <td>Area Code</td>
                        <td>areaCode</td>
                        <td>
                            rateCenter (state required)<br>
                            city (state required)<br>
                            state<br>
                            lata<br>
                            zip
                        </td>
                        <td>quantity<br>enableTNDetail<br>protected</td>
                    </tr>
                    <tr>
                        <td>NPA-NXX</td>
                        <td>npaNxx</td>
                        <td>
                            rateCenter (state required)<br>
                            city (state required)<br>
                            state<br>
                            lata<br>
                            zip<br>
                            orderBy
                        </td>
                        <td>quantity<br>enableTNDetail<br>protected</td>
                    </tr>
                    <tr>
                        <td>NPA-NXX with Local Calling Area</td>
                        <td>npaNxx</td>
                        <td></td>
                        <td>quantity<br>LCA<br>enableTNDetail<br>protected</td>
                    </tr>
                    <tr>
                        <td>NPA-NXX-X</td>
                        <td>npaNxxx</td>
                        <td>
                            rateCenter (state required)<br>
                            city (state required)<br>
                            state<br>
                            lata<br>
                            zip<br>
                            orderBy
                        </td>
                        <td>quantity<br>enableTNDetail<br>protected</td>
                    </tr>
                    <tr>
                        <td>NPA-NXX-X with Local Calling Area</td>
                        <td>npaNxxx</td>
                        <td></td>
                        <td>quantity<br>LCA<br>enableTNDetail<br>protected</td>
                    </tr>
                    <tr>
                        <td>RateCenter</td>
                        <td>rateCenter<br>state</td>
                        <td>
                            city<br>
                            areaCode/npaNxx/npaNxxx<br>
                            lata<br>
                            zip<br>
                            orderBy
                        </td>
                        <td>quantity<br>enableTNDetail<br>protected</td>
                    </tr>
                    <tr>
                        <td>RateCenter with Local Calling Area</td>
                        <td>rateCenter<br>state</td>
                        <td></td>
                        <td>quantity<br>LCA<br>enableTNDetail<br>protected</td>
                    </tr>
                    <tr>
                        <td>State</td>
                        <td>state</td>
                        <td>
                            rateCenter<br>
                            city<br>
                            areaCode/npaNxx/npaNxxx<br>
                            lata<br>
                            zip
                        </td>
                        <td>quantity<br>enableTNDetail<br>protected</td>
                    </tr>
                    <tr>
                        <td>City</td>
                        <td>city<br>state</td>
                        <td>
                            rateCenter<br>
                            state<br>
                            areaCode/npaNxx/npaNxxx<br>
                            lata<br>
                            zip<br>
                            orderBy
                        </td>
                        <td>quantity<br>enableTNDetail<br>protected</td>
                    </tr>
                    <tr>
                        <td>Zip Code</td>
                        <td>zip</td>
                        <td>
                            rateCenter (state required)<br>
                            city (state required)<br>
                            state<br>
                            areaCode/npaNxx/npaNxxx<br>
                            lata<br>
                            orderBy
                        </td>
                        <td>quantity<br>enableTNDetail<br>protected</td>
                    </tr>
                    <tr>
                        <td>LATA</td>
                        <td>lata</td>
                        <td>
                            rateCenter (state required)<br>
                            city (state required)<br>
                            state<br>
                            areaCode/npaNxx/npaNxxx<br>
                            zip
                        </td>
                        <td>quantity<br>enableTNDetail<br>protected</td>
                    </tr>
                    <tr>
                        <td>Local Vanity</td>
                        <td>
                            areaCode<br>
                            localVanity
                        </td>
                        <td></td>
                        <td>
                            endsIn<br>
                            quantity<br>
                            protected<br>
                            enableTNdetails
                        </td>
                    </tr>
                    <tr>
                        <td>TollFree Vanity</td>
                        <td>tollFreeVanity</td>
                        <td>orderBy</td>
                        <td>quantity</td>
                    </tr>
                    <tr>
                        <td>TollFree WildCard</td>
                        <td>tollFreeWildCardPattern</td>
                        <td>orderBy</td>
                        <td>quantity</td>
                    </tr>
                </table>
                <br>
                <table>
                    <tr>
                        <th>Parameters</th>
                        <th>Description</th>
                    </tr>
                    <tr>
                        <td>areaCode</td>
                        <td>The allowed number ranges are [2-9] for the first digit and [0-9] for both the second and third digits.</td>
                    </tr>
                    <tr>
                        <td>npaNxx or npaNxxx</td>
                        <td>NPA NXX combination to be searched.<br>Valid npa values:[2-9] for the first digit, and [0-9] for both the second and third digits.<br>Valid Nxx values:[2-9] for the first digit, and [0-9] for both the second and third digits.<br>Valid x values [0-9].</td>
                    </tr>
                    <tr>
                        <td>rateCenter</td>
                        <td>The abbreviation for the Rate Center</td>
                    </tr>
                    <tr>
                        <td>state</td>
                        <td>The two-letter abbreviation of the state the RateCenter is in.</td>
                    </tr>
                    <tr>
                        <td>city</td>
                        <td>The name of the city.</td>
                    </tr>
                    <tr>
                        <td>zip</td>
                        <td>A five-digit (XXXXX) or nine-digit (XXXXX-XXXX) zip-code value.</td>
                    </tr>
                    <tr>
                        <td>lata</td>
                        <td>A maximum five digit (XXXXX) numeric format.</td>
                    </tr>
                    <tr>
                        <td>localVanity</td>
                        <td>Requested vanity number. Valid range is from 4 to 7 alphanumeric characters</td>
                    </tr>
                    <tr>
                        <td>tollFreeVanity</td>
                        <td>The Toll Free requested vanity number. Valid range is from 4 to 7 alphanumeric characters</td>
                    </tr>
                    <tr>
                        <td>tollFreeWildCardPattern</td>
                        <td>The requested Toll Free 3 digit wild card pattern. Examples: 8**, 80*, 87*, etc.</td>
                    </tr>
                    <tr>
                        <td>quantity</td>
                        <td>The desired quantity of requested numbers. Values range from 1-5000. If no quantity is specified, the default of 5000 is returned.</td>
                    </tr>
                    <tr>
                        <td>enableTNDetail</td>
                        <td>If set to true, a list of details associated with the telephone number (rate center abbreviation, rate center host city, state, and LATA) will be displayed along with the telephone number. This value is set to false by default.</td>
                    </tr>
                    <tr>
                        <td>LCA</td>
                        <td>Local Calling Area. If this parameter is specified then Telephone Numbers that are likely in the Local Calling Area of  the stated Rate Center, NPANXX or NPANNXX will be returned, in addition to those that *exactly* match the query will be returned.  Since LCA logic is not always symmetric and not always inclusive of RC and NPANXX search criteria, this result reflects somewhat of an approximation.  The parameter value is true or false. The default is true</td>
                    </tr>
                    <tr>
                        <td>endsIn</td>
                        <td>Intended to use with <i>localVanity</i> only. The parameter value is true or false. If set to true, the search will look for only numbers which end in specified <i>localVanity</i>, otherwise <i>localVanity</i> sequence can be met anywhere in last 7 number digits. The default is false.</td>
                    </tr>
                    <tr>
                        <td>orderBy</td>
                        <td>The field by which the returned numbers will be sorted. Only supported if at least one of the following search criteria is specified: npaNxx or npaNxxx, rateCenter, city, zip, tollFreeVanity, tollFreeWildCardPattern. Allowed values are <i>fullNumber</i>, <i>npaNxxx</i>, <i>npaNxx</i>,  and <i>areaCode></td>
                    </tr>
                    <tr>
                        <td>protected</td>
                        <td>
                        A query parameter, that governs, how the Protected status of numbers impacts the search results<br>
                        The overall behavior of the protected search values are described in the table below:<br>
                        <table>
                            <tr>
                                <th>Query Parameter</th>
                                <th>Description</th>
                            </tr>
                            <tr>
                                <td>NONE</td>
                                <td>The numbers returned in the payload will not contain any numbers that are tagged as Protected</td>
                            </tr>
                            <tr>
                                <td>ONLY</td>
                                <td>The numbers returned in the payload will all be tagged as Protected. No "unProtected" numbers will be returned</td>
                            </tr>
                            <tr>
                                <td>MIXED</td>
                                <td>The protected status of the numbers will be ignored in the search - all types of numbers will be returned</td>
                            </tr>
                        </table>
                        </td>
                    </tr>
                </table>
            get:
                description: Retrieves the phone numbers according to the input parameters
                queryParameters:
                    quantity:
                        type: integer
                        description: The desired quantity of requested numbers. Values range from 1-5000.
                        default: 5000
                        example: 30
                    enableTNDetail:
                        type: boolean
                        description: If set to true, a list of details associated with the telephone number (rate center, abbreviation, city, state, and LATA) will be displayed along with the TN.
                        default: false
                    LCA:
                        type: boolean
                        description: Values are true or false.
                        default: true
                    endsIn:
                        type: boolean
                        description: Intended to use with <i>localVanity</i> only. If set to true, the search will look for only numbers which end in specified <i>localVanity</i>, otherwise <i>localVanity</i> sequence can be met anywhere in last 7 number digits. The default is false.
                        default: false
                    areaCode:
                        type: integer
                        description: The 3-digit area code associated with the TN. Allowed number ranges are [2-9] for the first digit and [0-9] for both the second and third digits.
                        example: 435
                    npaNxx:
                        type: integer
                        description: |
                            The 6 prefix associated with the TN.<br>
                            Allowed number ranges for NPA are [2-9] for the first digit and [0-9] for both the second and third digits.<br>
                            Allowed number ranges for NXX are [2-9] for the first digit and [0-9] for both the second and third digits.<br>
                    npaNxxx:
                        type: integer
                        description: |
                            The 7-digit prefix associated with the TN.<br>
                            Allowed number ranges for NPA are [2-9] for the first digit and [0-9] for both the second and third digits.<br>
                            Allowed number ranges for NXXX are [2-9] for the first digit and [0-9] the rest of the (X) digits.<br>
                    lata:
                        type: integer
                        description: A maximum five digit (XXXXX) numeric format
                        example: 244
                    rateCenter:
                        type: string
                        description: The abbreviation for the rateCenter
                        example: Cary
                    city:
                        type: string
                        description: The name of the city.
                        example: RALEIGH
                    state:
                        type: string
                        description: The two-letter abbreviation of the state the RateCenter is in
                        example: NC
                    tollFreeVanity:
                        type: string
                        description: The Toll Free requested vanity number. Valid range is 7+ digits alphanumeric.
                        example: NEWCARS
                    tollFreeWildCardPattern:
                        type: string
                        description: The Toll Free requested wild card pattern. valid range is 3 digits.
                        example: 8**, 80*, 87*
                    localVanity:
                        type: string
                        description: Requested vanity number. Valid range is from 4 to 7 alphanumeric characters.
                        example: NEWCARS
                    zip:
                        type: integer
                        description: A five-digit (XXXXX) or nine-digit (XXXXX-XXXX) format value.
                        example: 27607
                    orderBy:
                        type: string
                        enum: [fullNumber, npaNxxx, npaNxx,areaCode]
                        description: The field by which the results should be sorted
                responses:
                    200:
                        description: |
                            A list of available numbers is provided.  Additional information is available if the queryParameter enableTNDetail is true.
                            If no numbers are available an empty SearchResult element is returned.
                        body:
                            application/xml:
                                example: |
                                    <SearchResult>
                                        <ResultCount>384</ResultCount>
                                        <TelephoneNumberList>
                                            <TelephoneNumber>4354776112</TelephoneNumber>
                                                        <!---- SNIP ---->
                                            <TelephoneNumber>4357095160</TelephoneNumber>
                                        </TelephoneNumberList>
                                    </SearchResult>
                    400:
                        description: Invalid/missing input parameter
                        body:
                            application/xml:
                                example: |
                                    <SearchResult>
                                        <Error>
                                            <Code>4010</Code>
                                            <Description>One of more required search parameters are null or empty, please refer to the api documentation</Description>
                                        </Error>
                                    </SearchResult>
        /bdrs: 
            description: |
                <strong>Note - this API is being replaced with the /billingreports API - we strongly recommend that you use that endpoint</strong><br>
                This API allows the retrieval of a ZIP file containing BDR records for a specified date range.  These BDR records are delivered as a ZIP compressed comma separated values (CSV) file.<br>
                The general flow of the API calls required to retrieve these records is
                <ol>
                <li>POST a request to the /bdrs resource, describing the date range for which the BDR records are wished.  This will initiate the construction of the zip file.</li>
                <li>Examine the response from the POST.  If the payload is understandable and valid then a 202 accepted HTTP result code will be returned indicating that the response file is being created.</li>
                <li>Retrieve the Location Header from the Response to the POST. This location header will contain the resource ID for the collection of BDRs that will be returned once complete.  Note that the fact that the ID has been issued does not mean that the ZIP file is complete.</li>
                <li>interrogate the resource ID to check the status of the request.  If a 303 See Other response is received then the Location Header will contain the resource path to the file.  A typical browser response will be to download the file.  If a 200 OK is returned then the request is considered valid, but the file is not ready for distribution.</li>
                <li>fetching the file can be done by issuing a GET to the resources path in the Location Header mentioned above.
                </ol>
            post:
                description:
                    Request a collection of BDRs be aggregated and ZIPped ready for distribution.  The payload for the POST declares the date range for the request.
                body:
                    application/xml:
                        example: |
                            <Bdr>
                                <StartDate>2015-04-01</StartDate>
                                <EndDate>2015-04-30</EndDate>
                            </Bdr>
                responses:
                    202:
                        description: |
                            A 202 Accepted means that the request has been received and will be processed.  Processing the request takes time, so this does not indicate that the information is available, it simply indicates that the request has started processing. <br>
                            The response also includes header information in the Location Header that can be used for retrieving the state of the request.<br>
                            An informative payload is also included in success and failure cases.
                        headers:
                            Location:
                                description: contains the ID of the bdrs request
                                example: https://dashboard.bandwidth.com/api/accounts/9900012/bdrs/a12b456c8-abcd-1a3b-a1b2-0a2b4c6d8e0f2
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <BdrCreationResponse>
                                         <Info>Your BDR archive is currently being constructed</Info>
                                    </BdrCreationResponse>
                    404:
                        description: |
                            A 400 response indicates that there was an error in processing the payload, perhaps something like incorrectly formatted or chosen dates. 
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <BdrCreationResponse>
                                        <ResponseStatus>
                                            <ErrorCode>15501</ErrorCode>
                                            <Description>Invalid date range. Start date 2015-06-01 must be before end date 2015-04-30</Description>
                                        </ResponseStatus>
                                    </BdrCreationResponse>
            /{bdrid}: 
                description: |
                    The bdrid resource will query the status of the bdr file that is being generated.  There are essentially two responses...<br>
                    <ul>
                    <li>not yet ready</li>
                    <li>ready, in which case the request is redirected to the URL to actually download the file.</li>
                    </ul>
                get:
                    description:
                        A GET on the BDR ID will return a "still processing" indication if the file creation has not completed, or will redirect to the file to be downloaded.
                    responses:
                        200:
                            description: |
                                A 200 OK means that the request is valid, but that the file is not yet ready. The payload indicates the status.
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <BdrCreationResponse>
                                             <Info>The requested BDR archive is still being constructed, please check back later</Info>
                                        </BdrCreationResponse>
                        303:
                            description: |
                                A 303 response indicates that the file is ready.  The 303 should redirect the request to the URL in the Location header, which will, in most cases, initiate the file download. 
                            headers:
                                Location:
                                    description: contains a URL to the file identified by the BDR ID
                                    example: https://dashboard.bandwidth.com/api/accounts/9900012/bdrs/a12b456c8-abcd-1a3b-a1b2-0a2b4c6d8e0f2/file
                        400:
                            description: |
                                A 400 indicates that the BDR id is malformed. 
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <BdrRetrievalResponse>
                                            <ResponseStatus>
                                                <ErrorCode>1008</ErrorCode>
                                                <Description>'44a90e00-a7b6asdfsdafasdfdasf-6659-9112-e7f5dfa48231' is not a valid UUID</Description>
                                            </ResponseStatus>
                                        </BdrRetrievalResponse>
                        404:
                            description: |
                                A 404 indicates that the BDR id cannot be found. 
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <BdrRetrievalResponse>
                                            <ResponseStatus>
                                                <ErrorCode>15001</ErrorCode>
                                                <Description>BDR archive was not found</Description>
                                            </ResponseStatus>
                                        </BdrRetrievalResponse>
                /file: 
                    description: |
                        The file resource is an explicit reference to the zip file that has been created with the selected BDR records. 
                    get:
                        description:
                            A GET on the /file resource subtending a BDR ID will cause the download of the file.  Executing this resource path within a browser will cause the download of the file.
                        responses:
                            200:
                                description: |
                                    A 200 OK indicates that the request for the file download was accepted and will be processed.
                                headers:
                                    Content-Disposition:
                                        description: a text string description of the file being downloaded
                                        example: "attachment; filename=bdrs_2015-04-01_2015-04-30.zip"
        /billingreports: 
            description: |
                This API allows the retrieval of a zip file containing billing report for a specified date range and type.
                This billing report is delivered as a zip compressed comma separated values (CSV) file.<br>
                The general flow of the API calls required to retrieve these records is
                <ol>
                <li>POST a request to the /billingreports resource, describing the report date range and type for which the billing report is wished. This will initiate the construction of the zip file.</li>
                <li>Examine the response from the POST. If the payload is understandable and valid then a 201 response will be returned, indicating that the response file is currently being constructed.</li>
                <li>Retrieve the Location Header from the response to the POST. This Location response-header field will contain the complete URI-reference to newly created resource. Each report has it's own resource ID.</li>
                <li>Interrogate the resource ID to check the status of the report. If a 200 OK is returned then the resource ID is considered valid and corresponding status will describe the readiness of zip file.</li>
                <li>Fetching the file can be done by issuing a GET request to the resource path in the Location Header mentioned above.</li>
                </ol>
            post:
                description:
                    The payload for the POST declares the date range and type for the desired reports.
                    The valid Types are...
                    <ul>
                    <li>BDR - Billing Detail Records - per call information</li>
                    <li>MDR - Message Detail Records - per messagin information</li>
                    <li>INVOICE - A copy of the invoice file or files for the specified date range</li>
                    <li>STATEMENT&#95;BDR - BDR records that are aligned with the invoice</li>
                    <li>DID&#95;SNAPSHOT - a list of telephone numbers aligned as closely as we can with the billing window</li>
                    </ul>
                body:
                    application/xml:
                        example: |
                            <BillingReport>
                                <Type>BDR</Type>
                                <DateRange>
                                   <StartDate>2013-05-21</StartDate>
                                   <EndDate>2013-05-29</EndDate>
                                </DateRange>
                            </BillingReport>
                responses:
                    201:
                        description: |
                            A 201 response means that the response file is currently being constructed. Constructing the file takes time, so this does not indicate that the information is available.<br>
                            The response also includes header information in the Location Header that can be used for retrieving the state of the report.<br>
                            An informative payload is also included in success and failure cases.
                        headers:
                            Location:
                                description: contains the resource ID of the report
                                example: https://dashboard.bandwidth.com/api/accounts/9900012/billingreports/a12b456c8-abcd-1a3b-a1b2-0a2b4c6d8e0f2
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <BillingReportCreationResponse>
                                        <ReportStatus>RECEIVED</ReportStatus>
                                        <Description>The report archive is currently being constructed.</Description>
                                    </BillingReportCreationResponse>
                    404:
                        description: |
                            A 400 response indicates that there was an error in processing the payload, perhaps something like incorrectly formatted or chosen dates. 
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <BillingReportCreationResponse>
                                        <ResponseStatus>
                                            <ErrorCode>15501</ErrorCode>
                                            <Description>Invalid date range. Start date 2014-05-21 must be before end date 2013-05-29</Description>
                                        </ResponseStatus>
                                    </BillingReportCreationResponse>
            /{reportid}: 
                description: |
                    The resource will query the status of the report that is being generated.
                get:
                    responses:
                        200:
                            description: |
                                A 200 indicates that the request is valid. The payload indicates the report status: <br>
                                <ul>
                                    <li><b>PROCESSING</b> - The requested report archive is still being constructed, please check back later.</li>
                                    <li><b>COMPLETED</b> - The report archive is constructed.</li>
                                </ul>
                                For <b>COMPLETED</b> report, fetching the file can be done by issuing a GET request to the resource path in the Location Header.
                            headers:
                                Location:
                                    description: contains the resource of the report file
                                    example: https://dashboard.bandwidth.com/api/accounts/9900012/billingreports/a12b456c8-abcd-1a3b-a1b2-0a2b4c6d8e0f2/file
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <BillingReportRetrievalResponse>
                                            <ReportStatus>COMPLETED</ReportStatus>
                                             <Description>The report archive is constructed.</Description>
                                        </BillingReportRetrievalResponse>
                        400:
                            description: |
                                A 400 indicates that the report ID is malformed.
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <BillingReportRetrievalResponse>
                                            <ResponseStatus>
                                                <ErrorCode>1008</ErrorCode>
                                                <Description>'9b428b4c-159b-465f-9667-' is not a valid UUID</Description>
                                            </ResponseStatus>
                                        </BillingReportRetrievalResponse>
                        404:
                            description: |
                                A 404 indicates that the requested report cannot be found.
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <BillingReportRetrievalResponse>
                                            <ResponseStatus>
                                                <ErrorCode>15603</ErrorCode>
                                                <Description>The requested report was not found.</Description>
                                            </ResponseStatus>
                                        </BillingReportRetrievalResponse>
                /file: 
                    description: |
                        The file resource is an explicit reference to the zip file that has been created.
                    get:
                        description:
                            A GET on the /file resource subtending a report ID will cause the download of the file.  Executing this resource path within a browser will cause the download of the file.
                        responses:
                            200:
                                description: |
                                    A 200 OK indicates that the request for the file download was accepted and will be processed.
                                headers:
                                    Content-Disposition:
                                       example: "attachment; filename=bdrs_2013-05-21_2013-05-29.zip"
                            400:
                                description: |
                                    A 400 indicates that the report ID is malformed.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <BillingReportArchiveRetrievalResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>1008</ErrorCode>
                                                    <Description>'9b428b4c-159b-465f-9667-' is not a valid UUID</Description>
                                                </ResponseStatus>
                                            </BillingReportArchiveRetrievalResponse>
                            404:
                                description: |
                                    A 404 indicates that the requested report cannot be found.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <BillingReportArchiveRetrievalResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>15603</ErrorCode>
                                                    <Description>The requested report was not found.</Description>
                                                </ResponseStatus>
                                            </BillingReportArchiveRetrievalResponse>
        /billingsettings: 
            description: |
                This resource is used to manage billing settings on account.
            get:
                description:
                    GET is used to retrieve all possible billing settings on account along with active ones.
                responses:
                    200:
                        description: |
                            Ok - Billing settings successfully retrieved
                        body:
                            application/xml:
                                example: 
                                    <BillingSettings>
                                        <BillingSetting>
                                            <Key>
                                                <Id>NADP_TERM</Id>
                                                <Display>Domestic Termination</Display>
                                            </Key>
                                            <Values>
                                                <Value>
                                                    <Id>TERM_SELECT</Id>
                                                    <Display>Select</Display>
                                                    <Active>True</Active>
                                                </Value>
                                                <Value>
                                                    <Id>TERM_PRIORITY</Id>
                                                    <Display>Priority</Display>
                                                    <Active>False</Active>
                                                </Value>
                                                <Value>
                                                    <Id>TERM_FLAT</Id>
                                                    <Display>Flat Rate</Display>
                                                    <Active>False</Active>
                                                </Value>
                                            </Values>
                                        </BillingSetting>
                                    </BillingSettings>
            put:
                description:
                    PUT is used to update all billing settings on account. Ones which were previously stored but not included
                    in current payload will be removed. After PUT complete system will automatically send backoffice API notification
                    about billing settings change on account billing scope and all subsequent scopes (sites, sippeers).
                    Payload should follow the rules below.
                    <table>
                        <tr>
                            <th>Parameter</th>
                            <th>Description</th>
                        </tr>
                        <tr>
                            <td>BillingSettings</td>
                            <td>Contains a list of zero or more BillingSetting nodes</td>
                        </tr>
                        <tr>
                            <td>BillingSetting</td>
                            <td>Has one Key node and one Values node</td>
                        </tr>
                        <tr>
                            <td>Key</td>
                            <td>Has one Id node and optional field Display</td>
                        </tr>
                        <tr>
                            <td>Values</td>
                            <td>Has at least one Value node. List must contain one active Value (Active node containing "True")</td>
                        </tr>
                        <tr>
                            <td>Value</td>
                            <td>Has one Id node and optional field Display</td>
                        </tr>
                        <tr>
                            <td>Display</td>
                            <td>Optional field. Max length is 64 characters</td>
                        </tr>
                        <tr>
                            <td>Id</td>
                            <td>Mandatory field. Max length is 64 characters</td>
                        </tr>
                        <tr>
                            <td>Active</td>
                            <td>Optional field (see Values description though). Acceptable values True or False</td>
                        </tr>
                    </table>
                body:
                    application/xml:
                        example: 
                            <?xml version="1.0"?>
                            <BillingSettings>
                                <BillingSetting>
                                    <Key>
                                        <Id>NADP_TERM</Id>
                                        <Display>Domestic Termination</Display>
                                    </Key>
                                    <Values>
                                        <Value>
                                            <Id>TERM_SELECT</Id>
                                            <Display>Select</Display>
                                            <Active>True</Active>
                                        </Value>
                                        <Value>
                                            <Id>TERM_PRIORITY</Id>
                                            <Display>Priority</Display>
                                            <Active>False</Active>
                                        </Value>
                                        <Value>
                                            <Id>TERM_FLAT</Id>
                                            <Display>Flat Rate</Display>
                                            <Active>False</Active>
                                        </Value>
                                    </Values>
                                </BillingSetting>
                            </BillingSettings>
                responses:
                    200:
                        description: |
                            OK - billing setting were successfully updated.
                        body:
                            application/xml:
                                example: 
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <BillingSettingsResponse>
                                        <BillingSettings>
                                            <BillingSetting>
                                                <Key>
                                                    <Id>NADP_TERM</Id>
                                                </Key>
                                                <Values>
                                                    <Value>
                                                        <Id>TERM_SELECT</Id>
                                                        <Active>true</Active>
                                                    </Value>
                                                </Values>
                                            </BillingSetting>
                                        </BillingSettings>
                                    </BillingSettingsResponse>
                    400:
                        description: |
                            Bad request - in case of violation payload rules
                        body:
                            application/xml:
                                example: 
                                    <BillingSettingsResponse>
                                        <ResponseStatus>
                                            <ErrorCode>1003</ErrorCode>
                                            <Description>At least one Value is required.</Description>
                                        </ResponseStatus>
                                    </BillingSettingsResponse>
        /discnumbers: 
            description: This API call provides information on numbers that have been disconnected from an account.
            get:
                description: Retrieves a list of disconnected numbers associated with the account. There are optional search parameters to limit the discNumbers payload
                queryParameters:
                    page:
                        type: string
                        required: true
                        description: The first disconnected number on the desired page.   "1" is used as a convention for the first disconnected number in the collection
                        example: 59e69657-44d2-4e7e-90f8-777988be4aef
                        default: 1
                    size:
                        description: The number of records that should be returned by the query
                        required: true
                        type: integer
                        example: 30
                        default: 300
                    startdate:
                        description: The starting date of a search. startdate and enddate <strong>must</strong> be used as a pair.
                        type: date
                        example: yy-mm-dd
                    enddate:
                        description: The ending date of a search. startdate and enddate <strong>must</strong> be used as a pair.
                        type: date
                        example: yy-mm-dd
                responses:
                    200:
                        description: The disconnected numbers have been retrieved successfully.
                        body:
                            application/xml:
                                example:
                                    <TNs>
                                        <TotalCount>4</TotalCount>
                                        <Links>
                                            <first>Link=<http://api.qa.inetwork.com/iris/accounts/12346099/discNumbers?size=500&page=1>;rel="first";</first>
                                        </Links>
                                        <TelephoneNumbers>
                                            <Count>2</Count>
                                            <TelephoneNumber>4158714245</TelephoneNumber>
                                            <TelephoneNumber>4352154439</TelephoneNumber>
                                        </TelephoneNumbers>
                                    </TNs>
            /totals: 
                description: Retrieves a total number of disconnects for the account within the specified (optional) date range.
                get:
                    description: Retrieves a total number of disconnects.
                    queryParameters:
                        startdate:
                            description: The starting date of a search. startdate and enddate <strong>must</strong> be used as a pair.
                            type: date
                            example: yy-mm-dd
                        enddate:
                            description: The end date of a search. startdate and enddate <strong>must</strong> be used as a pair.
                            type: date
                            example: yy-mm-dd
                    responses:
                        200:
                            body:
                                application/xml:
                                    example: |
                                        <Quantity>
                                            <Count>4</Count>
                                        </Quantity>
        /disconnects: 
            description: |
                Use this method to disconnect telephone numbers from the account. <br>
                This call creates a disconnects order that can be used to track the disconnection of the numbers.
                <table>
                    <tr>
                        <th>Parameter</th><th>Description</th>
                    </tr>
                    <tr>
                        <td>accountid</td><td>The numerical Account ID that you will be disconnecting the numbers from.</td>
                    </tr>
                    <tr>
                        <td>Name</td><td>The name of the order. Max length restricted to 50 characters</td>
                    </tr>
                    <tr>
                        <td>TelephoneNumberList</td><td>A list of telephone numbers to disconnect.</td>
                    </tr>
                    <tr>
                        <td>DisconnectMode</td>
                        <td>A mode of the disconnect order. Optional parameter.<br/>
                        The valid values are:
                        <ul>
                            <li><b>normal</b> - default mode if DisconnectMode is not specified</li>
                            <li><b>soft-remove</b> - remove the telephone numbers from the system. No SMS, E911 and Core2 external deactivation</li>
                            <li><b>purge</b> - remove the telephone numbers from the system with SMS, Core2, E911 external deactivation</li>
                        </ul>
                        <b>soft-remove</b> and <b>purge</b> modes are only valid if issued by an ADMIN or AGENT
                        </td>
                    </tr>
                    <tr>
                        <td>DisconnectMode</td>
                        <td>The severity of disconnect order. Optional parameter.  Typically normal.<br/>
                        </td>
                    </tr>
                    <tr>
                        <td>Protected</td>
                        <td>Change protected status of telephones during disconnection. Optional parameter. Possible values: <b>TRUE</b>, <b>FALSE</b>, <b>UNCHANGED</b>. Typically <b>UNCHANGED</b>.<br/>
                        </td>
                    </tr>
                </table>
            get:
                description: retrieve a list of disconnect orders that is associated with an account
                queryParameters:
                    page:
                        type: string
                        required: true
                        description: The disconnect order-id of the first record on the page.   "1" is used as a convention for the first disconnect order in the collection
                        example: 59e69657-44d2-4e7e-90f8-777988be4aef
                        default: 1
                    size:
                        description: The number of records that should be returned by the query
                        required: true
                        type: integer
                        example: 30
                        default: 300
                    userid:
                        description: The user ID associated with disconnected phone numbers
                        type: string
                        example: jbm
                    status:
                        description: The status of the order
                        type: string
                        example: complete
                    startdate:
                        description: Retrieves all phone numbers disconnected after this date. The start date also requires the end date to be specified.
                        type: date 
                        example: yy-mm-dd
                    enddate:
                        description: Retrieves all phone numbers disconnected before this date. The end date also requires the start date to be specified.
                        type: date
                        example: yy-mm-dd
                responses:
                    200:
                        description: A list of Disconnect orders
                        body: 
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <ResponseSelectWrapper>
                                        <ListOrderIdUserIdDate>
                                            <TotalCount>7</TotalCount>
                                            <Links>
                                                               <!-- SNIP -->
                                            </Links>
                                            <OrderIdUserIdDate>
                                                <CountOfTNs>1</CountOfTNs>
                                                <userId>smckinnon</userId>
                                                <lastModifiedDate>2014-01-10T17-34-15Z</lastModifiedDate>
                                                <OrderId>6d7da966-e071-4741-b31c-1d8932f4b8da</OrderId>
                                                <OrderType>disconnect</OrderType>
                                                <OrderDate>2014-01-10T17-34-15.797Z</OrderDate>
                                                <OrderStatus>COMPLETE</OrderStatus>
                                                <TelephoneNumberDetails>
                                                                <!-- SNIP -->
                                                </TelephoneNumberDetails>
                                            </OrderIdUserIdDate>
                                            <OrderIdUserIdDate>
                                                <CountOfTNs>1</CountOfTNs>
                                                <userId>jbm</userId>
                                                <lastModifiedDate>2013-12-04T21-59-32Z</lastModifiedDate>
                                                <OrderId>4ffe9262-1965-4479-a1d5-b8584440667d</OrderId>
                                                <OrderType>disconnect</OrderType>
                                                <OrderDate>2013-12-04T21-59-32.243Z</OrderDate>
                                                <OrderStatus>COMPLETE</OrderStatus>
                                                <TelephoneNumberDetails>
                                                                  <!-- SNIP -->
                                                </TelephoneNumberDetails>
                                            </OrderIdUserIdDate>
                                        </ListOrderIdUserIdDate>
                                    </ResponseSelectWrapper>
                    404:
                        description: No disconnect orders are present on the indicated account
                        body: 
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <Links>
                                        <first>   Link description  </first>
                                    </Links>
            post:
                description: Create a Disconnect order, and disconnect the numbers listed in the disconnect order.
                body:
                    application/xml:
                        example: |
                            <?xml version="1.0"?>
                            <DisconnectTelephoneNumberOrder>
                                <name>training run</name>
                                <DisconnectTelephoneNumberOrderType>
                                    <DisconnectMode>normal</DisconnectMode> <!-- one of normal, soft-remove, or purge -->
                                    <TelephoneNumberList>
                                        <TelephoneNumber>4158714245</TelephoneNumber>
                                        <TelephoneNumber>4352154439</TelephoneNumber>
                                        <TelephoneNumber>4352154466</TelephoneNumber>
                                    </TelephoneNumberList>
                                    <Protected>UNCHANGED</Protected>
                                </DisconnectTelephoneNumberOrderType>
                            </DisconnectTelephoneNumberOrder> 
                responses:
                    201:
                        description: |
                            The order has been created as described in the payload <br>
                            The Location header contains the url of the disconnect order that has been created.
                        body: 
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <DisconnectTelephoneNumberOrderResponse>
                                        <orderRequest>
                                            <CustomerOrderId></CustomerOrderId>
                                            <id>ba05e04b-192a-47cb-b182-b1bf6cfef0d7</id>
                                            <OrderCreateDate>2014-07-03T14-12-57.840Z</OrderCreateDate>
                                            <DisconnectTelephoneNumberOrderType>
                                                <TelephoneNumberList>
                                                    <TelephoneNumber>4158714245</TelephoneNumber>
                                                    <TelephoneNumber>4352154439</TelephoneNumber>
                                                    <TelephoneNumber>4352154466</TelephoneNumber>
                                                </TelephoneNumberList>
                                                <DisconnectMode>normal</DisconnectMode>
                                                <Protected>UNCHANGED</Protected>
                                            </DisconnectTelephoneNumberOrderType>
                                        </orderRequest>
                                    </DisconnectTelephoneNumberOrderResponse>
            /{disconnectid}: 
                description: This method retrieves the information associated with the disconnect order specified.
                get:
                    description: Retrieves the information associated with the disconnect order specified.
                    queryParameters:
                        tndetail:
                            description: If set to true, displays the disconnect order's telephone order information in greater detail
                            default: false
                    responses:
                        200:
                            description: The disconnect order's information has been successfully retrieved.
                            body:
                                application/xml:
                                    example:
                                        <DisconnectTelephoneNumberOrderResponse>
                                            <DisconnectedTelephoneNumberList>
                                                <TelephoneNumber>9199998830</TelephoneNumber>
                                            </DisconnectedTelephoneNumberList>
                                            <orderRequest>
                                                <id>4ffe9262-1965-4479-a1d5-b8584440667d</id>
                                                <OrderCreateDate>2013-12-04T21:59:32.243Z</OrderCreateDate>
                                                <DisconnectTelephoneNumberOrderType>
                                                    <TelephoneNumberList>
                                                        <TelephoneNumber>9199998830</TelephoneNumber>
                                                    </TelephoneNumberList>
                                                    <DisconnectMode>normal</DisconnectMode>
                                                    <Protected>UNCHANGED</Protected>
                                                </DisconnectTelephoneNumberOrderType>
                                            </orderRequest>
                                            <OrderStatus>COMPLETE</OrderStatus>
                                        </DisconnectTelephoneNumberOrderResponse>
                /notes: 
                    # note that this file is shared between 5 order types - 
                    #  - orders
                    #  - disconnects
                    #  - portins
                    #  - portouts
                    #  - inporttoaccount
                    #  - lidbs
                    #  - dldas
                    # 
                    description: |
                        The /notes resource manages a note or set of notes associated with an order.  Notes can only be appended to the collection, and are not individually addressable or modifiable once added.
                    post:
                        description: Updates the Notes resource by adding a note.
                        body:
                            application/xml:
                                example:
                                    <?xml version="1.0" encoding="UTF-8"?>
                                    <Note>
                                       <UserId>user id</UserId>
                                       <Description>note text</Description>
                                       <Internal>false</Internal>   <!-- note created by admin is implicitly internal unless this tag with "false" value is specified -->
                                    </Note>
                        responses:
                            201:
                                description: CREATED - the note has been created and added to the collection of notes associated with the order.  A link to the note is included in the Location header of the response.  No body is returned
                            400:
                                description: Bad Request - the note has not been created because the payload is incomplete or in error.  An error payload is provided in the repsonse.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <NoteResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12501</ErrorCode>
                                                    <Description>Username is required</Description>
                                                </ResponseStatus>
                                            </NoteResponse>           
                    get:
                        description: Retrieve the set of notes associated with an order.
                        responses:
                            200:
                                description: OK - there are Notes associated with the order, and they have been returned in the response.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <Notes>
                                                <Note>
                                                    <Id>87037</Id>
                                                    <UserId>jbm</UserId>
                                                    <Description>This is a test note</Description>
                                                    <LastDateModifier>2014-11-16T04:01:10.000Z</LastDateModifier>
                                                    <Internal>false</Internal>    <!-- admin only -->
                                                </Note>
                                                <Note>
                                                    <Id>87039</Id>
                                                    <UserId>smckinnon</UserId>
                                                    <Description>This is a second test note</Description>
                                                    <LastDateModifier>2014-11-16T04:08:46.000Z</LastDateModifier>
                                                    <Internal>false</Internal>    <!-- admin only -->
                                                </Note>
                                            </Notes>                    
                            204:
                                description: No Content - there are no Notes associated with the order.  Since the notes resource is an aggregate rather than addressed resource the generic no content response is used, rather than a 404 as would be used if the resource was addressed with an identifier
        /dldas: 
            description: |
                The DLDAs Resource represents the requests made to the Bandwidth Dashboard API to add or otherwise manage a request to associate the street address with the telephone number.  This API allows the creation and observation of a <b>"Directory Listing and Directory Assistance"</b> work order that causes an update of a address information in a network Database. <br>
                This API call supports <b>GET</b> to retrieve information about outstanding DLDAs orders.
            get:
                description: |
                    Retrieve a list of the DLDA orders that are associated with the account.
                queryParameters:
                    tn:
                        description: A Telephone Number (TN) that is referenced in the order
                        type: string
                        example: 9199918388
                    lastModifiedAfter:
                        description: Checks the order's last modified date against this value. Orders that have a modification date after this date will be included. Format is yyyy-MM-dd
                        type: string
                        example: 2013-10-25
                    modifiedDateFrom:
                        description: For Date-based searches, the starting date of a date range that will be used to find DLDA Orders that were modified within the date range.  It is in the form yyyy-MM-dd.
                        type: string
                        example: 2013-10-22
                    modifiedDateTo:
                        description: For Date-based searches, the ending date of a date range that will be used to find DLDA Orders that were modified within the date range.  It is in the form yyyy-MM-dd.
                        type: string
                        example: 2013-10-25
                responses:
                    200:
                        description: |
                            OK <br> a 200 OK indicates that there are DLDA orders associated with the account.
                            The 200 OK response payload provides a list of all DLDA orders that have been issued against that account.
                        body:
                            application/xml:
                                example: 
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
                                    <ResponseSelectWrapper>
                                        <ListOrderIdUserIdDate>
                                            <TotalCount>3</TotalCount>
                                            <OrderIdUserIdDate>
                                                <accountId>14</accountId>
                                                <CountOfTNs>2</CountOfTNs>
                                                <userId>team_ua</userId>
                                                <lastModifiedDate>2014-07-07T10:06:43.427Z</lastModifiedDate>
                                                <OrderType>dlda</OrderType>
                                                <OrderDate>2014-07-07T10:06:43.427Z</OrderDate>
                                                <orderId>37a6447c-1a0b-4be9-ba89-3f5cb0aea142</orderId>
                                                <OrderStatus>FAILED</OrderStatus>
                                            </OrderIdUserIdDate>
                                            <OrderIdUserIdDate>
                                                <accountId>14</accountId>
                                                <CountOfTNs>2</CountOfTNs>
                                                <userId>team_ua</userId>
                                                <lastModifiedDate>2014-07-07T10:05:56.595Z</lastModifiedDate>
                                                <OrderType>dlda</OrderType>
                                                <OrderDate>2014-07-07T10:05:56.595Z</OrderDate>
                                                <orderId>743b0e64-3350-42e4-baa6-406dac7f4a85</orderId>
                                                <OrderStatus>RECEIVED</OrderStatus>
                                            </OrderIdUserIdDate>
                                            <OrderIdUserIdDate>
                                                <accountId>14</accountId>
                                                <CountOfTNs>2</CountOfTNs>
                                                <userId>team_ua</userId>
                                                <lastModifiedDate>2014-07-07T09:32:17.234Z</lastModifiedDate>
                                                <OrderType>dlda</OrderType>
                                                <OrderDate>2014-07-07T09:32:17.234Z</OrderDate>
                                                <orderId>f71eb4d2-bfef-4384-957f-45cd6321185e</orderId>
                                                <OrderStatus>RECEIVED</OrderStatus>
                                            </OrderIdUserIdDate>
                                        </ListOrderIdUserIdDate>
                                    </ResponseSelectWrapper>
                    404:
                        description: |
                            Not Found <br> If any errors are found in the processing of the query string a 404 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored.
            post:
                description: |
                    Create DLDA order to associate the street address with the telephone number.
                    The key data elements in the submission are -
                     <table style="text-align: left; width: 80%;"
                     border="1" cellpadding="2" cellspacing="2">
                      <tbody>
                        <tr>
                          <td>TelephoneNumbers</td>
                          <td>A list of telephone numbers you need to bind information from payload.</td>
                        </tr>
                        <tr>
                          <td>SubscriberType</td>
                          <td>Can be RESIDENTIAL or BUSINESS.  The element is required.</td>
                        </tr>
                        <tr>
                          <td>ListingType</td>
                          <td>Can be LISTED, NON_LISTED or NON_PUBLISHED. The element is required</td>
                        </tr>
                        <tr>
                          <td>ListingName</td>
                          <td>This field is required. Inner fields: FirstName (this field is required in case RESIDENTIAL SubscriberType is chosen), FirstName2, LastName (this field is required), Designation, TitleOfLineage, TitleOfAddress, TitleOfAddress2, TitleOfLineageName2, TitleOfAddressName2, TitleOfAddress2Name2, and PlaceListingAs are optional<br>Please see the note below on sorting of Business Listings.</td>
                        </tr>
                        <tr>
                          <td>ListAddress</td>
                          <td>Can be true or false. The element is required.</td>
                        </tr>
                        <tr>
                          <td>Address</td>
                          <td>This field is required. Inner fields: HousePrefix, HouseNumber, HouseSuffix, PreDirectional, StreetName, StreetSuffix, PostDirectional, AddressLine2, City, StateCode, Zip, PlusFour and AddressType=DLDA.<br>City, HouseNumber, StreetName, City, State and Zipcode are required fields.</td>
                        </tr>
                      </tbody>
                    </table>
                    <b>Business Listings...</b> <br>Business Listings sort differently than Residential Listings, and must be submitted accordingly.  Since Business Listings sort starting at the beginning of the name, where Residential Listings sort on Last Name, the parts of the business name that will govern the sorting need to be entered in the LastName field.  For example, Joe's Pizza sorts starting with Joe, so the entire business name would be entered in the LastName field, and the Firstname could be left blank.  If there was a portion of the name that was not important from a sorting perspective (perhaps "the best pizza in town"), that portion could be placed in the FirstName field.<br>
                body:
                    application/xml:
                        example: |
                            <DldaOrder>
                                <CustomerOrderId>[String]</CustomerOrderId>
                                <DldaTnGroups>
                                    <DldaTnGroup>
                                        <TelephoneNumbers>
                                            <TelephoneNumber>5202217754</TelephoneNumber>
                                        </TelephoneNumbers>
                                        <SubscriberType>RESIDENTIAL</SubscriberType>
                                        <ListingType>LISTED</ListingType>
                                        <ListingName>
                                            <FirstName>John</FirstName>
                                            <FirstName2/>
                                            <LastName>Smith</LastName>
                                            <Designation/>
                                            <TitleOfLineage/>
                                            <TitleOfAddress/>
                                            <TitleOfAddress2/>
                                            <TitleOfLineageName2/>
                                            <TitleOfAddressName2/>
                                            <TitleOfAddress2Name2/>
                                            <PlaceListingAs/>
                                        </ListingName>
                                        <ListAddress>true</ListAddress>
                                        <Address>
                                            <HousePrefix/>
                                            <HouseNumber>915</HouseNumber>
                                            <HouseSuffix/>
                                            <PreDirectional/>
                                            <StreetName>Elm</StreetName>
                                            <StreetSuffix>Ave</StreetSuffix>
                                            <PostDirectional/>
                                            <AddressLine2/>
                                            <City>Carpinteria</City>
                                            <StateCode>CA</StateCode>
                                            <Zip>93013</Zip>
                                            <PlusFour/>
                                            <County/>
                                            <AddressType>DLDA</AddressType>
                                        </Address>
                                    </DldaTnGroup>
                                </DldaTnGroups>
                            </DldaOrder>
                responses:
                    201:
                        description: |
                            Created <br> A 201 response indicates that an order has been created.
                            The <b>location</b> header points to /accounts/<account-id>/dldas/<order-id> and can be used to retrive the status of the DLDA order.<br>
                            Errors in processing the request will be articulated in the ErrorList component of the response.
                        body:
                            application/xml:
                                example: 
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <DldaOrderResponse>
                                        <DldaOrder>
                                            <CustomerOrderId>[String]</CustomerOrderId>
                                            <OrderCreateDate>2014-07-16T07:59:08.065Z</OrderCreateDate>
                                            <AccountId>14</AccountId>
                                            <CreatedByUser>team_ua</CreatedByUser>
                                            <OrderId>f2ac3343-5bff-424a-b8ca-975f5e7b159e</OrderId>
                                            <LastModifiedDate>2014-07-16T07:59:08.065Z</LastModifiedDate>
                                            <ErrorList/>
                                            <ProcessingStatus>RECEIVED</ProcessingStatus>
                                            <DldaTnGroups>
                                                <DldaTnGroup>
                                                    <TelephoneNumbers>
                                                        <TelephoneNumber>5202217754</TelephoneNumber>
                                                    </TelephoneNumbers>
                                                    <AccountType>RESIDENCE</AccountType>
                                                    <ListingType>LISTED</ListingType>
                                                    <ListingName>
                                                        <FirstName>John</FirstName>
                                                        <FirstName2></FirstName2>
                                                        <LastName>Smith</LastName>
                                                        <Designation></Designation>
                                                        <TitleOfLineage></TitleOfLineage>
                                                        <TitleOfAddress></TitleOfAddress>
                                                        <TitleOfAddress2></TitleOfAddress2>
                                                        <TitleOfLineageName2></TitleOfLineageName2>
                                                        <TitleOfAddressName2></TitleOfAddressName2>
                                                        <TitleOfAddress2Name2></TitleOfAddress2Name2>
                                                        <PlaceListingAs></PlaceListingAs>
                                                    </ListingName>
                                                    <ListAddress>true</ListAddress>
                                                    <Address>
                                                        <HousePrefix></HousePrefix>
                                                        <HouseNumber>915</HouseNumber>
                                                        <HouseSuffix></HouseSuffix>
                                                        <PreDirectional></PreDirectional>
                                                        <StreetName>Elm</StreetName>
                                                        <StreetSuffix>Ave</StreetSuffix>
                                                        <PostDirectional></PostDirectional>
                                                        <AddressLine2></AddressLine2>
                                                        <City>Carpinteria</City>
                                                        <StateCode>CA</StateCode>
                                                        <Zip>93013</Zip>
                                                        <PlusFour></PlusFour>
                                                        <County></County>
                                                        <Country>United States</Country>
                                                        <AddressType>Dlda</AddressType>
                                                    </Address>
                                                </DldaTnGroup>
                                            </DldaTnGroups>
                                        </DldaOrder>
                                    </DldaOrderResponse>
                    400:
                        description: |
                            Bad Request <br> A 400 response Indicates that the order could not be created.
                            Error text and an error code will be provided in the ErrorList element.
                        body:
                            application/xml:
                                example: 
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <DldaOrderResponse>
                                        <ResponseStatus>
                                            <ErrorCode>16104</ErrorCode>
                                            <Description>No numbers for processing</Description>
                                        </ResponseStatus>
                                        <DldaOrder>
                                            <CustomerOrderId>REST Site</CustomerOrderId>
                                            <OrderCreateDate>2014-07-17T10:06:55.204Z</OrderCreateDate>
                                            <AccountId>14</AccountId>
                                            <CreatedByUser>team_ua</CreatedByUser>
                                            <LastModifiedDate>2014-07-17T10:06:55.204Z</LastModifiedDate>
                                            <ErrorList>
                                                <Error>
                                                    <Code>5070</Code>
                                                    <Description>Telephone number is invalid.</Description>
                                                    <TelephoneNumber></TelephoneNumber>
                                                </Error>
                                            </ErrorList>
                                            <ProcessingStatus>FAILED</ProcessingStatus>
                                            <DldaTnGroups>
                                                <DldaTnGroup>
                                                    <TelephoneNumbers>
                                                        <TelephoneNumber></TelephoneNumber>
                                                    </TelephoneNumbers>
                                                    <AccountType>RESIDENCE</AccountType>
                                                    <ListingType>LISTED</ListingType>
                                                    <ListingName>
                                                        <FirstName>John</FirstName>
                                                        <FirstName2></FirstName2>
                                                        <LastName>Smith</LastName>
                                                        <Designation></Designation>
                                                        <TitleOfLineage></TitleOfLineage>
                                                        <TitleOfAddress></TitleOfAddress>
                                                        <TitleOfAddress2></TitleOfAddress2>
                                                        <TitleOfLineageName2></TitleOfLineageName2>
                                                        <TitleOfAddressName2></TitleOfAddressName2>
                                                        <TitleOfAddress2Name2></TitleOfAddress2Name2>
                                                        <PlaceListingAs></PlaceListingAs>
                                                    </ListingName>
                                                    <ListAddress>true</ListAddress>
                                                    <Address>
                                                        <HousePrefix></HousePrefix>
                                                        <HouseNumber>915</HouseNumber>
                                                        <HouseSuffix></HouseSuffix>
                                                        <PreDirectional></PreDirectional>
                                                        <StreetName>Elm</StreetName>
                                                        <StreetSuffix>Ave</StreetSuffix>
                                                        <PostDirectional></PostDirectional>
                                                        <AddressLine2></AddressLine2>
                                                        <City>Carpinteria</City>
                                                        <StateCode>CA</StateCode>
                                                        <Zip>93013</Zip>
                                                        <PlusFour></PlusFour>
                                                        <County></County>
                                                        <Country>United States</Country>
                                                        <AddressType>DLDA</AddressType>
                                                    </Address>
                                                </DldaTnGroup>
                                            </DldaTnGroups>
                                        </DldaOrder>
                                    </DldaOrderResponse>
            /{orderid}: 
                description: |
                    This API returns data about the specific DLDAs Order specified as the resource
                get:
                    description: |
                        Retrieve information about a DLDA Order with specified ID.
                    responses:
                        200:
                            description: |
                                The descriptive payload for the Lidb Orders query provides a broad range of information about the DLDA Order identified in the URL.  Included amongst the information is:
                                <ul>
                                <li>ErrorList - the errors discovered with codes and explanations</li>
                                <li>various dates</li>
                                <li>ProcessingStatus(RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED, CANCELLED) - the overall status of the order</li>
                                <li>DldaTnGroups - list of DldaTnGroup elements that contains list of TNs with Directory Listing and Directory Assistance information, AccountType(RESIDENCE or BUSINESS), ListingType(LISTED, NON_LISTED or NON_PUBLISHED)</li>
                                </ul>
                            body:
                                application/xml:
                                    example: 
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
                                        <DldaOrderResponse>
                                            <DldaOrder>
                                                <CustomerOrderId>5a88d16d-f8a9-45c5-a5db-137d700c6a22</CustomerOrderId>
                                                <OrderCreateDate>2014-07-10T12:38:11.833Z</OrderCreateDate>
                                                <AccountId>14</AccountId>
                                                <CreatedByUser>jbm</CreatedByUser>
                                                <OrderId>ea9e90c2-77a4-4f82-ac47-e1c5bb1311f4</OrderId>
                                                <LastModifiedDate>2014-07-10T12:38:11.833Z</LastModifiedDate>
                                                <ErrorList>
                                                    <Error>
                                                        <Code>16103</Code>
                                                        <Description>DL/DA information cannot be changed because the number
                                                            is already being processed
                                                        </Description>
                                                        <TelephoneNumber>2053778335</TelephoneNumber>
                                                    </Error>
                                                </ErrorList>
                                                <ProcessingStatus>RECEIVED</ProcessingStatus>
                                                <DldaTnGroups>
                                                    <DldaTnGroup>
                                                        <TelephoneNumbers>
                                                            <TelephoneNumber>2053778335</TelephoneNumber>
                                                            <TelephoneNumber>2053865784</TelephoneNumber>
                                                        </TelephoneNumbers>
                                                        <AccountType>BUSINESS</AccountType>
                                                        <ListingType>LISTED</ListingType>
                                                        <ListingName>
                                                            <FirstName>Joe</FirstName>
                                                            <LastName>Smith</LastName>
                                                        </ListingName>
                                                        <ListAddress>true</ListAddress>
                                                        <Address>
                                                            <HouseNumber>12</HouseNumber>
                                                            <StreetName>ELM</StreetName>
                                                            <City>New York</City>
                                                            <StateCode>NY</StateCode>
                                                            <Zip>10007</Zip>
                                                            <Country>United States</Country>
                                                            <AddressType>Dlda</AddressType>
                                                        </Address>
                                                    </DldaTnGroup>
                                                </DldaTnGroups>
                                            </DldaOrder>
                                        </DldaOrderResponse>
                        404:
                            description: NOT FOUND - the order id does not exist in the system
                            body:
                                application/xml:
                                    example: 
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
                                        <DldaOrderResponse>
                                            <ResponseStatus>
                                                <Description>The resource does not exist</Description>
                                            </ResponseStatus>
                                        </DldaOrderResponse>
                put:
                    description: |
                        Update DLDA order to associate the street address with the telephone number.
                        The key data elements in the submission are -
                             <table style="text-align: left; width: 80%;"
                             border="1" cellpadding="2" cellspacing="2">
                              <tbody>
                                <tr>
                                  <td>TelephoneNumbers</td>
                                  <td>A list of telephone numbers you need to bind information from payload.</td>
                                </tr>
                                <tr>
                                  <td>AccountType</td>
                                  <td>Can be RESIDENTIAL or BUSINESS.  The element is required.</td>
                                </tr>
                                <tr>
                                  <td>ListingType</td>
                                  <td>Can be LISTED, NON_LISTED or NON_PUBLISHED. The element is required</td>
                                </tr>
                                <tr>
                                  <td>ListingName</td>
                                  <td>Inner fields: FirstName, FirstName2, LastName, Designation, TitleOfLineage, TitleOfAddress, TitleOfAddress2, TitleOfLineageName2, TitleOfAddressName2, TitleOfAddress2Name2, PlaceListingAs.</td>
                                </tr>
                                <tr>
                                  <td>ListAddress</td>
                                  <td>Can be true or false. The element is required.</td>
                                </tr>
                                <tr>
                                  <td>Address</td>
                                  <td>This field is required. Inner fields: HousePrefix, HouseNumber, HouseSuffix, PreDirectional, StreetName, StreetSuffix, PostDirectional, AddressLine2, City, StateCode, Zip, PlusFour, AddressType</td>
                                </tr>
                              </tbody>
                            </table>
                    body:
                        application/xml:
                            example: |
                                <DldaOrder>
                                    <CustomerOrderId>[String]</CustomerOrderId>
                                    <DldaTnGroups>
                                        <DldaTnGroup>
                                            <TelephoneNumbers>
                                                <TelephoneNumber>5202217754</TelephoneNumber>
                                            </TelephoneNumbers>
                                            <AccountType>RESIDENCE</AccountType>
                                            <ListingType>LISTED</ListingType>
                                            <ListingName>
                                                <FirstName>John</FirstName>
                                                <FirstName2/>
                                                <LastName>Smith</LastName>
                                                <Designation/>
                                                <TitleOfLineage/>
                                                <TitleOfAddress/>
                                                <TitleOfAddress2/>
                                                <TitleOfLineageName2/>
                                                <TitleOfAddressName2/>
                                                <TitleOfAddress2Name2/>
                                                <PlaceListingAs/>
                                            </ListingName>
                                            <ListAddress>true</ListAddress>
                                            <Address>
                                                <HousePrefix/>
                                                <HouseNumber>915</HouseNumber>
                                                <HouseSuffix/>
                                                <PreDirectional/>
                                                <StreetName>Elm</StreetName>
                                                <StreetSuffix>Ave</StreetSuffix>
                                                <PostDirectional/>
                                                <AddressLine2/>
                                                <City>Carpinteria</City>
                                                <StateCode>CA</StateCode>
                                                <Zip>93013</Zip>
                                                <PlusFour/>
                                                <County/>
                                                <AddressType>DLDA</AddressType>
                                            </Address>
                                        </DldaTnGroup>
                                    </DldaTnGroups>
                                </DldaOrder>
                    responses:
                        200:
                            description: |
                                OK <br> A 200 response indicates that an order has been updated.
                            body:
                                application/xml:
                                    example: 
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <DldaOrderResponse>
                                            <DldaOrder>
                                                <CustomerOrderId>[String]</CustomerOrderId>
                                                <OrderCreateDate>2014-07-10T12:38:11.833Z</OrderCreateDate>
                                                <AccountId>14</AccountId>
                                                <CreatedByUser>team_ua</CreatedByUser>
                                                <OrderId>f179237b-c1cb-449d-9590-aaa9d0bf3ca4</OrderId>
                                                <LastModifiedDate>2014-07-17T12:21:02.644Z</LastModifiedDate>
                                                <ErrorList/>
                                                <ProcessingStatus>RECEIVED</ProcessingStatus>
                                                <DldaTnGroups>
                                                    <DldaTnGroup>
                                                        <TelephoneNumbers>
                                                            <TelephoneNumber>2199347436</TelephoneNumber>
                                                        </TelephoneNumbers>
                                                        <AccountType>RESIDENCE</AccountType>
                                                        <ListingType>NON_LISTED</ListingType>
                                                        <ListingName>
                                                            <FirstName>John</FirstName>
                                                            <FirstName2></FirstName2>
                                                            <LastName>Smith</LastName>
                                                            <Designation></Designation>
                                                            <TitleOfLineage></TitleOfLineage>
                                                            <TitleOfAddress></TitleOfAddress>
                                                            <TitleOfAddress2></TitleOfAddress2>
                                                            <TitleOfLineageName2></TitleOfLineageName2>
                                                            <TitleOfAddressName2></TitleOfAddressName2>
                                                            <TitleOfAddress2Name2></TitleOfAddress2Name2>
                                                            <PlaceListingAs></PlaceListingAs>
                                                        </ListingName>
                                                        <ListAddress>true</ListAddress>
                                                        <Address>
                                                            <HousePrefix></HousePrefix>
                                                            <HouseNumber>915</HouseNumber>
                                                            <HouseSuffix></HouseSuffix>
                                                            <PreDirectional></PreDirectional>
                                                            <StreetName>Elm</StreetName>
                                                            <StreetSuffix>Ave</StreetSuffix>
                                                            <PostDirectional></PostDirectional>
                                                            <AddressLine2></AddressLine2>
                                                            <City>Carpinteria</City>
                                                            <StateCode>CA</StateCode>
                                                            <Zip>93013</Zip>
                                                            <PlusFour></PlusFour>
                                                            <County></County>
                                                            <Country>United States</Country>
                                                            <AddressType>Dlda</AddressType>
                                                        </Address>
                                                    </DldaTnGroup>
                                                </DldaTnGroups>
                                            </DldaOrder>
                                        </DldaOrderResponse>
                        400:
                            description: |
                                Bad Request <br> A 400 response Indicates that the order could not be modified. The payload is echoed with the Errors identified.
                            body:
                                application/xml:
                                    example: 
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <DldaOrderResponse>
                                            <ResponseStatus>
                                                <ErrorCode>16105</ErrorCode>
                                                <Description>Order cannot be changed or cancelled because it is already being processed</Description>
                                            </ResponseStatus>
                                        </DldaOrderResponse>
                /history: 
                    description: |
                        The history API returns the various events that have impacted the specified DLDA order. 
                    get:
                        description: |
                            Retrieve the history information associated with a named DLDA order.  This indicates the various states that the order has passed through, as well as the current state of the order as the last entry.
                        responses:    
                            200:
                                description: |
                                    The history payload is a set of history records, each of which contains:
                                        <table style="text-align: left; width: 80%;" border="1" cellpadding="2" cellspacing="2">
                                            <tbody>
                                                <tr>
                                                    <td>OrderDate</td>
                                                    <td>The date that the order history event happened</td>
                                                </tr>
                                                <tr>
                                                    <td>Status</td>
                                                    <td>The new state of the DLDA order - RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED</td>
                                                </tr>
                                                <tr>
                                                    <td>Note</td>
                                                    <td>A Note or additional information included with the state change </td>
                                               </tr>
                                               <tr>
                                                    <td>Author</td>
                                                    <td>The user id that implemented the state change</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                body: 
                                    application/xml:
                                        example: |
                                            <?xml version="1.0"?>
                                            <OrderHistoryWrapper>
                                                <OrderHistory>
                                                    <OrderDate>2014-09-04T16:28:11.320Z</OrderDate>
                                                    <Note>The DL/DA request has been received</Note>
                                                    <Author>jbm</Author>
                                                    <Status>RECEIVED</Status>
                                                </OrderHistory>
                                                <OrderHistory>
                                                    <OrderDate>2014-09-04T16:28:18.742Z</OrderDate>
                                                    <Note>
                                                        The DL/DA request is being processed by our 3rd party supplier
                                                    </Note>
                                                    <Author>jbm</Author>
                                                    <Status>PROCESSING</Status>
                                                </OrderHistory>
                                                <OrderHistory>
                                                    <OrderDate>2014-09-05T19:00:17.968Z</OrderDate>
                                                    <Note>The DL/DA request is complete for all TNs</Note>
                                                    <Author>jbm</Author>
                                                    <Status>COMPLETE</Status>
                                                </OrderHistory>
                                            </OrderHistoryWrapper>
        /e911s: 
            description: |
                The E911s Resource represents the requests made to the Bandwidth Dashboard API to add or otherwise manage a request to associate a postal address with an endpoint (a telephone number, ACID (alternate caller identifier), or some other unique identifier . This API allows the creation and observation of a "E911" work order that causes an update of a address information in a network database.<br><br>
                The E911 order processing model is consistent with the overall model of creating an order or request with the initial POST, and then checking on the status of that order using callbacks and / or GET while that order progresses through the various steps in the process.<br><br>
                The E911 order supports several 911 use cases:<br>
                <ol>
                  <li>Telephone number/address combination - For UC Trunking customers, this method associates a telephone number in the customer’s Bandwidth Dashboard TN inventory to a postal address. Caller name can also be specified in the request. At 911 call time, the address that is associated with the telephone number in the SIP From: header will be seen by the Public Safety Answering Point (PSAP).</li>
                  <li>PIDF-LO (aka Presence Information Data Format-Location Object or Dynamic Location Routing) endpoints and addresses - For customers utilizing Bandwidth’s Dynamic Louting Routing capability, addresses are first added to an "address pool", then endpoints are provisioned using one of the addresses as a default for taxation purposes. Each endpoint is represented by an Alternate End User Identifier consisting of a unique identifier (could be TN, ACID, or other identifier), callback number and caller name (if not being passed in at 911 call time), and preferred language (French or English, with English as the default). At 911 call time, the customer can pass any address in the SIP header of the call and the From: header will contain the identifier of the endpoint. If the address in the call matches an address in the address pool, then the call is routed to the PSAP. Otherwise, the call is routed to an Emergency Call Center.</li>
                  <li>Non-PIDF-LO endpoints - This is similar to telephone number/address combination in that there is a 1:1 mapping between endpoint and address. Each endpoint is represented by an Alternate End User Identifier consisting of a unique identifier and callback number. At 911 call time, the endpoint identifier is passed in the SIP From:<br> header and the address that is associated with that endpoint will be seen by the PSAP.</li>
                </ol>
                The states that the order may reside in are...
                RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED, ADJUSTED\_COMPLETE, and ADJUSTED\_PARTIAL
                where the "ADJUSTED" indicates that the provisioning was successful, but that the street address was subtly changed to reflect a geocodable address. As in other order-types, PARTIAL indicates that there were some errors detected, but that all elements of the order that could be processed were processed. In this case, the order record will need to be examined to determine the items that failed.
            get:
                description: |
                    Retrieve a list of the E911 orders that are associated with the account.
                queryParameters:
                    status:
                        description: The status of the E911 order being searched for.
                        type: string
                        example: PROCESSING
                        enum: [RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED, ADJUSTED_COMPLETE, ADJUSTED_PARTIAL]
                        repeat: true
                    tn:
                        description: A Telephone Number (TN) that is referenced in the order
                        type: string
                        example: 9199918388
                    callBack:
                        description: A callback Telephone Number (TN) used for 911 purposes.
                        type: string
                        example: 9199918388
                    aeui:
                        description: Alternate End-user Identifier used to identify the calling party for 911 purposes.
                        type: string
                        example: Alter12345
                    callingEndpoint:
                        description: A TN, callback TN or AEUI.
                        type: string
                        example: 9199918386, Alter12345
                    customerOrderId:
                        description: The Customer Order ID is an ID assigned by the account owner to provide a reference number for the E911 order.
                        type: string
                        example: ABCCorp12345
                    modifiedDateFrom:
                        description: For Date-based searches, the starting date of a date range that will be used to find E911 Orders that were modified within the date range.  It is in the form yyyy-MM-dd.
                        type: string
                        example: 2013-10-22
                    modifiedDateTo:
                        description: For Date-based searches, the ending date of a date range that will be used to find E911 Orders that were modified within the date range.  It is in the form yyyy-MM-dd.
                        type: string
                        example: 2013-10-25
                    createdDateFrom:
                        description: Checks the order's creation date against this value. Orders that have a creation date after this date will be included. Format is yyyy-MM-dd
                        type: string
                        example: 2013-10-22
                    createdDateTo:
                        description: Checks the order's creation date against this value. Orders that have a creation date before this date will be included. Format is yyyy-MM-dd
                        type: string
                        example: 2013-10-25
                    lastModifiedAfter:
                        description: Checks the order's last modified date against this value. Orders that have a modification date after this date will be included. Format is yyyy-MM-dd
                        type: string
                        example: 2013-10-25
                    lastModifiedBy:
                        description: This is the user-name of the user that last modified the E911 Order.
                        type: string
                        example: smckinnon
                    orderIdFragment:
                        description: This search parameter represents the internal Bandwidth Dashboard ID that has been assigned to the E911 Order.  This parameter is the first few characters of the internal ID - the entire ID does not need to be specified.
                        type: string
                        example: ed1c0bed-e2
                    orderDetails:
                        description: If set to true, a list of order details will be displayed instead the summary information.
                        type: boolean
                        default: false
                responses:
                    200:
                        description: |
                            The descriptive payload for the E911 Orders query provides a broad range of information about the E911  Orders found by the query, including the data associated with the order, the state of the order, and details about the order if it was successful.
                        body:
                            application/xml:
                                example: 
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <E911Orders>
                                        <TotalCount>2</TotalCount>
                                        <E911OrderSummary>
                                            <accountId>1</accountId>
                                            <CountOfTNs>1</CountOfTNs>
                                            <userId>admin</userId>
                                            <lastModifiedDate>2015-08-03T14:41:01.769Z</lastModifiedDate>
                                            <OrderDate>2015-08-03T14:41:00.815Z</OrderDate>
                                            <OrderType>e911</OrderType>
                                            <OrderStatus>COMPLETE</OrderStatus>
                                            <OrderId>6dae2a67-b8f5-4bf2-9bf7-5216277b9be3</OrderId>
                                        </E911OrderSummary>
                                        <E911OrderSummary>
                                            <accountId>1</accountId>
                                            <CountOfTNs>1</CountOfTNs>
                                            <userId>admin</userId>
                                            <lastModifiedDate>2015-08-03T14:40:19.008Z</lastModifiedDate>
                                            <OrderDate>2015-08-03T14:40:17.864Z</OrderDate>
                                            <OrderType>e911</OrderType>
                                            <OrderStatus>ADJUSTED_COMPLETE</OrderStatus>
                                            <OrderId>6a97b54f-459e-4683-a79c-0de52acf7c6b</OrderId>
                                        </E911OrderSummary>
                                    </E911Orders>
                                    <!-- OR if orderDetails = true... -->
                                    <E911Orders>
                                        <TotalCount>2</TotalCount>
                                        <E911Order>
                                            <OrderCreateDate>2015-08-03T14:41:00.815Z</OrderCreateDate>
                                            <AccountId>1</AccountId>
                                            <CreatedByUser>admin</CreatedByUser>
                                            <OrderId>6dae2a67-b8f5-4bf2-9bf7-5216277b9be3</OrderId>
                                            <LastModifiedDate>2015-08-03T14:41:01.769Z</LastModifiedDate>
                                            <Address>
                                                <HouseNumber>800</HouseNumber>
                                                <HouseSuffix></HouseSuffix>
                                                <PreDirectional></PreDirectional>
                                                <StreetName>PENNSYLVANIA AVE</StreetName>
                                                <StreetSuffix>NW</StreetSuffix>
                                                <AddressLine2></AddressLine2>
                                                <City>WASHINGTON</City>
                                                <StateCode>DC</StateCode>
                                                <Zip>20004</Zip>
                                                <PlusFour></PlusFour>
                                                <Country>United States</Country>
                                            </Address>
                                            <CallerName>0931180f-4</CallerName>
                                            <ErrorList/>
                                            <ProcessingStatus>COMPLETE</ProcessingStatus>
                                            <TelephoneNumbers>
                                                <TelephoneNumber>9142971000</TelephoneNumber>
                                            </TelephoneNumbers>
                                        </E911Order>
                                        <E911Order>
                                            <OrderCreateDate>2015-08-03T14:40:17.864Z</OrderCreateDate>
                                            <AccountId>1</AccountId>
                                            <CreatedByUser>admin</CreatedByUser>
                                            <OrderId>6a97b54f-459e-4683-a79c-0de52acf7c6b</OrderId>
                                            <LastModifiedDate>2015-08-03T14:40:19.008Z</LastModifiedDate>
                                            <Address>
                                                <HouseNumber>1600</HouseNumber>
                                                <HouseSuffix></HouseSuffix>
                                                <PreDirectional></PreDirectional>
                                                <StreetName>PENNSYLVANIA AVE</StreetName>
                                                <StreetSuffix>NW</StreetSuffix>
                                                <AddressLine2></AddressLine2>
                                                <City>WASHINGTON</City>
                                                <StateCode>DC</StateCode>
                                                <Zip>20500</Zip>
                                                <PlusFour>0003</PlusFour>
                                                <Country>United States</Country>
                                            </Address>
                                            <CallerName>0931180f-4</CallerName>
                                            <ErrorList/>
                                            <ProcessingStatus>ADJUSTED_COMPLETE</ProcessingStatus>
                                            <TelephoneNumbers>
                                                <TelephoneNumber>9142971000</TelephoneNumber>
                                            </TelephoneNumbers>
                                        </E911Order>
                                    </E911Orders>
                    404:
                        description: Not Found.  If any errors are found in the processing of the query string a 404 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored.
            post:
                description: |
                    Create E911 order to associate the address with the telephone number.
                    The key data elements in the submission are -
                     <table style="text-align: left; width: 80%;"
                     border="1" cellpadding="2" cellspacing="2">
                      <tbody>
                        <tr>
                          <td>TelephoneNumbers</td>
                          <td>A list of telephone numbers you need link to the street address.</td>
                        </tr>
                        <tr>
                          <td>CallerName</td>
                          <td>CallerName that will be linked to TNs. This field is required in the case of a new address assignment.</td>
                        </tr>
                        <tr>
                          <td>Address</td>
                          <td>This field is required in the case of a new address assignment.  Inner fields: HousePrefix, HouseNumber, HouseSuffix, PreDirectional, StreetName, StreetSuffix, PostDirectional, AddressLine2, City, StateCode, Zip, PlusFour.  Streetname, City, and State are required.  House Number is currently required, although this enforcement may be relaxed in the future.</td>
                        </tr>
                        <tr>
                          <td>DeleteTNSpecificE911Address</td>
                          <td>Can be true or false. If value is true then Address and CallerName should not be specified.</td>
                        </tr>
                        <tr>
                          <td>AlternateEndUserIdentifiers</td>
                          <td>A list of AEUIs acts as a replacement for the list of telephone numbers. It replaces the TelephoneNumbers and AdditionalAddress payload element. </td>
                        </tr>
                        <tr>
                          <td>AdditionalAddresses</td>
                          <td>A list of Address sections. This address information for all potential endpoints which will be provisioned to the Bandwidth 911 system. At call time, the customer will submit this address information within the SIP header and, if a match is determined, the call will be routed to the PSAP nearest to that address. Otherwise, the call will be routed to an ECC. These Address sections will be the same in format to the Address section in the top-level of the E911Order payload. It replaces the TelephoneNumbers and AlternateEndUserIdentifiers payload element. </td>
                        </tr>
                        <tr>
                          <td>AddressesToDelete</td>
                          <td>A list of e911 location ids tags which should be unprovisioned/deleted. </td>
                        </tr>
                        <tr>
                          <td>EndpointsToEdit</td>
                          <td>The list of endpoints supposed to be updated during order execution. </td>
                        </tr>
                        <tr>
                          <td>AddressesToEdit</td>
                          <td>The list of addresses supposed to be updated during order execution. </td>
                        </tr>
                      </tbody>
                    </table>
                    <br />Examples of POST requests:
                    <table>
                        <tbody>
                        <tr>
                            <th>Description</th>
                            <th>Example</th>
                        </tr>
                        <tr>
                            <td width="20%">
                                PIDF-LO AEUI endpoint provisioning order with additional Address provisioning with pre-defined location
                                id. <b>AlternateEndUserIdentifiers</b>, <b>AlternateEndUserIdentifier</b>, <b>Address</b>, <b>Identifier</b>
                                are required.
                                <b>PIDFLOEnabled</b> is required and have to be 'true'. Default value of <b>PreferredLanguage</b> is 'en'.
                            </td>
                            <td width="80%">
                            <pre>
                    &ltE911Order&gt;
                        &lt;CustomerOrderId&gt;CustomOrderId1&lt;/CustomerOrderId&gt;
                        &lt;AlternateEndUserIdentifiers&gt;
                            &lt;AlternateEndUserIdentifier&gt;
                                &lt;CallerName&gt;OptionalCallerName&lt;/CallerName&gt;
                                &lt;Address&gt;
                                    &lt;LocationId&gt;Some32CharacterOrLessString&lt;/LocationId&gt;
                                    &lt;HouseNumber&gt;901&lt;/HouseNumber&gt;
                                    &lt;StreetName&gt;MAIN CAMPUS&lt;/StreetName&gt;
                                    &lt;StreetSuffix&gt;DR&lt;/StreetSuffix&gt;
                                    &lt;City&gt;RALEIGH&lt;/City&gt;
                                    &lt;StateCode&gt;NC&lt;/StateCode&gt;
                                    &lt;Zip&gt;27606&lt;/Zip&gt;
                                    &lt;PlusFour&gt;5244&lt;/PlusFour&gt;
                                    &lt;Country&gt;United States&lt;/Country&gt;
                                    &lt;AddressType&gt;E911&lt;/AddressType&gt;
                                &lt;/Address&gt;
                                &lt;CallbackNumber&gt;9706542333&lt;/CallbackNumber&gt;
                                &lt;Identifier&gt;alphanumeric_or.:-_@_6_32_chars&lt;/Identifier&gt;
                                &lt;PIDFLOEnabled&gt;true&lt;/PIDFLOEnabled&gt;
                                &lt;PreferredLanguage&gt;en&lt;/PreferredLanguage&gt;
                            &lt;/AlternateEndUserIdentifier&gt;
                        &lt;/AlternateEndUserIdentifiers&gt;
                    &lt;/E911Order&gt;
                            </pre>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                PIDF-LO AEUI endpoint provisioning with additional Address provisioning without pre-defined location
                                id. <b>AlternateEndUserIdentifiers</b>, <b>AlternateEndUserIdentifier</b>, <b>Address</b>, <b>Identifier</b>
                                are
                                required.
                                <b>PIDFLOEnabled</b> is required and have to be 'true'. Default value of <b>PreferredLanguage</b> is 'en'.
                            </td>
                            <td>
                                <pre>
                    &lt;E911Order&gt;
                        &lt;CustomerOrderId&gt;CustomOrderId1&lt;/CustomerOrderId&gt;
                        &lt;AlternateEndUserIdentifiers&gt;
                          &lt;AlternateEndUserIdentifier&gt;
                            &lt;CallerName&gt;OptionalCallerName&lt;/CallerName&gt;
                            &lt;Address&gt;
                              &lt;HouseNumber&gt;901&lt;/HouseNumber&gt;
                              &lt;StreetName&gt;MAIN CAMPUS&lt;/StreetName&gt;
                              &lt;StreetSuffix&gt;DR&lt;/StreetSuffix&gt;
                              &lt;City&gt;RALEIGH&lt;/City&gt;
                              &lt;StateCode&gt;NC&lt;/StateCode&gt;
                              &lt;Zip&gt;27606&lt;/Zip&gt;
                              &lt;PlusFour&gt;5244&lt;/PlusFour&gt;
                              &lt;Country&gt;United States&lt;/Country&gt;
                              &lt;AddressType&gt;E911&lt;/AddressType&gt;
                            &lt;/Address&gt;
                            &lt;CallbackNumber&gt;9706542333&lt;/CallbackNumber&gt;
                            &lt;Identifier&gt;alphanumeric_or.:-_@_6_32_chars&lt;/Identifier&gt;
                            &lt;PIDFLOEnabled&gt;true&lt;/PIDFLOEnabled&gt;
                            &lt;PreferredLanguage&gt;en&lt;/PreferredLanguage&gt;
                          &lt;/AlternateEndUserIdentifier&gt;
                        &lt;/AlternateEndUserIdentifiers&gt;
                    &lt;/E911Order&gt;
                                </pre>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                PIDF-LO AEUI endpoint provisioning order with provisioned location id. <b>AlternateEndUserIdentifiers</b>, <b>AlternateEndUserIdentifier</b>,
                                <b>LocationId</b>, <b>Identifier</b> are required.
                                <b>PIDFLOEnabled</b> is required and have to be 'true'. Default value of <b>PreferredLanguage</b> is 'en'.
                            </td>
                            <td>
                                <pre>
                    &lt;E911Order&gt;
                        &lt;CustomerOrderId&gt;CustomOrderId1&lt;/CustomerOrderId&gt;
                        &lt;AlternateEndUserIdentifiers&gt;
                          &lt;AlternateEndUserIdentifier&gt;
                            &lt;CallerName&gt;OptionalCallerName&lt;/CallerName&gt;
                            &lt;LocationId&gt;Some32CharacterOrLessString&lt;/LocationId&gt;
                            &lt;CallbackNumber&gt;9706542333&lt;/CallbackNumber&gt;
                            &lt;Identifier&gt;alphanumeric_or.:-_@_6_32_chars&lt;/Identifier&gt;
                            &lt;PIDFLOEnabled&gt;true&lt;/PIDFLOEnabled&gt;
                            &lt;PreferredLanguage&gt;en&lt;/PreferredLanguage&gt;
                          &lt;/AlternateEndUserIdentifier&gt;
                        &lt;/AlternateEndUserIdentifiers&gt;
                    &lt;/E911Order&gt;
                                </pre>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                Mixed PIDF-LO AEUI and Non-PIDF-LO AEUI endpoint provisioning order.
                                <b>AlternateEndUserIdentifiers</b>, <b>AlternateEndUserIdentifier</b>, <b>Address</b>, <b>Identifier</b> are
                                required.
                                For non-PIDF-LO <b>CallbackNumber</b> is required.
                                For PIDF-LO <b>PIDFLOEnabled</b> is required and have to be 'true'. Default value of
                                <b>PreferredLanguage</b> is 'en'.
                            </td>
                            <td>
                                <pre>
                    &lt;E911Order&gt;
                        &lt;CustomerOrderId&gt;CustomOrderId1&lt;/CustomerOrderId&gt;
                        &lt;CallerName&gt;OptionalCallerName&lt;/CallerName&gt;
                        &lt;Address&gt;
                          &lt;LocationId&gt;Some32CharacterOrLessString&lt;/LocationId&gt;
                          &lt;HouseNumber&gt;901&lt;/HouseNumber&gt;
                          &lt;StreetName&gt;MAIN CAMPUS&lt;/StreetName&gt;
                          &lt;StreetSuffix&gt;DR&lt;/StreetSuffix&gt;
                          &lt;City&gt;RALEIGH&lt;/City&gt;
                          &lt;StateCode&gt;NC&lt;/StateCode&gt;
                          &lt;Zip&gt;27606&lt;/Zip&gt;
                          &lt;PlusFour&gt;5244&lt;/PlusFour&gt;
                          &lt;Country&gt;United States&lt;/Country&gt;
                          &lt;AddressType&gt;E911&lt;/AddressType&gt;
                        &lt;/Address&gt;
                        &lt;AlternateEndUserIdentifiers&gt;
                          &lt;AlternateEndUserIdentifier&gt;
                            &lt;CallerName&gt;OptionalCallerName&lt;/CallerName&gt;
                            &lt;LocationId&gt;Some32CharacterOrLessString&lt;/LocationId&gt;
                            &lt;CallbackNumber&gt;9706542333&lt;/CallbackNumber&gt;
                            &lt;Identifier&gt;alphanumeric_or.:-_@_6_32_chars&lt;/Identifier&gt;
                            &lt;PIDFLOEnabled&gt;true&lt;/PIDFLOEnabled&gt;
                            &lt;PreferredLanguage&gt;en&lt;/PreferredLanguage&gt;
                          &lt;/AlternateEndUserIdentifier&gt;
                          &lt;AlternateEndUserIdentifier&gt;
                            &lt;CallbackNumber&gt;9706542334&lt;/CallbackNumber&gt;
                            &lt;Identifier&gt;alphanumeric&lt;/Identifier&gt;
                            &lt;PIDFLOEnabled&gt;false&lt;/PIDFLOEnabled&gt;
                          &lt;/AlternateEndUserIdentifier&gt;
                        &lt;/AlternateEndUserIdentifiers&gt;
                    &lt;/E911Order&gt;
                                </pre>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                PIDF-LO endpoint editing order.
                                <b>EndpointsToEdit</b>, <b>AlternateEndUserIdentifier</b>, <b>Identifier</b> are required.
                            </td>
                            <td>
                                <pre>
                    &lt;E911Order&gt;
                        &lt;CustomerOrderId&gt;CustomOrderId1&lt;/CustomerOrderId&gt;
                        &lt;EndpointsToEdit&gt;
                          &lt;AlternateEndUserIdentifier&gt;
                            &lt;LocationId&gt;Some32CharacterOrLessString&lt;/LocationId&gt;
                            &lt;CallerName&gt;OptionalCallerName&lt;/CallerName&gt;
                            &lt;CallbackNumber&gt;9706542333&lt;/CallbackNumber&gt;
                            &lt;Identifier&gt;alphanumeric_or.:-_@_6_32_chars&lt;/Identifier&gt;
                            &lt;PreferredLanguage&gt;fr&lt;/PreferredLanguage&gt;
                          &lt;/AlternateEndUserIdentifier&gt;
                        &lt;/EndpointsToEdit&gt;
                    &lt;/E911Order&gt;
                                </pre>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                PIDF-LO and Non-PIDF-LO endpoint deletion order.
                                <b>AlternateEndUserIdentifiers</b>, <b>AlternateEndUserIdentifier</b> are required/. <b>DeleteTNSpecificE911Address</b>
                                is required and have to be 'true'.
                                <b>Identifier</b> is required.
                            </td>
                            <td>
                                <pre>
                    &lt;E911Order&gt;
                        &lt;CustomerOrderId&gt;CustomOrderId1&lt;/CustomerOrderId&gt;
                        &lt;AlternateEndUserIdentifiers&gt;
                          &lt;AlternateEndUserIdentifier&gt;
                            &lt;Identifier&gt;alphanumeric_or.:-_@_6_32_chars&lt;/Identifier&gt;
                          &lt;/AlternateEndUserIdentifier&gt;
                        &lt;/AlternateEndUserIdentifiers&gt;
                        &lt;DeleteTNSpecificE911Address&gt;true&lt;/DeleteTNSpecificE911Address&gt;
                    &lt;/E911Order&gt;
                                </pre>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                PIDF-LO address provisioning order.
                                <b>AdditionalAddresses</b>, <b>Address</b> are required.
                            </td>
                            <td>
                                <pre>
                    &lt;E911Order&gt;
                        &lt;CustomerOrderId&gt;CustomOrderId1&lt;/CustomerOrderId&gt;
                        &lt;AdditionalAddresses&gt;
                          &lt;Address&gt;
                            &lt;LocationId&gt;Some32CharacterOrLessString&lt;/LocationId&gt;
                            &lt;HouseNumber&gt;901&lt;/HouseNumber&gt;
                            &lt;StreetName&gt;MAIN CAMPUS&lt;/StreetName&gt;
                            &lt;StreetSuffix&gt;DR&lt;/StreetSuffix&gt;
                            &lt;City&gt;RALEIGH&lt;/City&gt;
                            &lt;StateCode&gt;NC&lt;/StateCode&gt;
                            &lt;Zip&gt;27606&lt;/Zip&gt;
                            &lt;PlusFour&gt;5244&lt;/PlusFour&gt;
                            &lt;Country&gt;United States&lt;/Country&gt;
                            &lt;AddressType&gt;E911&lt;/AddressType&gt;
                          &lt;/Address&gt;
                          &lt;Address&gt;
                            &lt;LocationId&gt;Some32CharacterOrLessString&lt;/LocationId&gt;
                            &lt;HouseNumber&gt;645&lt;/HouseNumber&gt;
                            &lt;PreDirectional&gt;E&lt;/PreDirectional&gt;
                            &lt;StreetName&gt;MANCHESTER&lt;/StreetName&gt;
                                &lt;StreetSuffix&gt;AVE&lt;/StreetSuffix&gt;
                            &lt;City&gt;LOS ANGELES&lt;/City&gt;
                            &lt;StateCode&gt;United States&lt;/StateCode&gt;
                            &lt;Zip&gt;90001&lt;/Zip&gt;
                            &lt;Country&gt;United States&lt;/Country&gt;
                          &lt;/Address&gt;
                        &lt;/AdditionalAddresses&gt;
                    &lt;/E911Order&gt;
                                </pre>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                PIDF-LO address editing order.
                                <b>AddressesToEdit</b>, <b>Address</b>, <b>LocationId</b> are required.
                                Allows to update all address path except <b>PlusFour</b> and <b>Country</b>
                            </td>
                            <td>
                                <pre>
                    &lt;E911Order&gt;
                        &lt;CustomerOrderId&gt;CustomOrderId1&lt;/CustomerOrderId&gt;
                        &lt;AddressesToEdit&gt;
                          &lt;Address&gt;
                            &lt;LocationId&gt;Some32CharacterOrLessString1&lt;/LocationId&gt;
                            &lt;HouseNumber&gt;646&lt;/HouseNumber&gt;
                            &lt;PreDirectional&gt;W&lt;/PreDirectional&gt;
                          &lt;/Address&gt;
                          &lt;Address&gt;
                            &lt;LocationId&gt;Some32CharacterOrLessString2&lt;/LocationId&gt;
                            &lt;Zip&gt;90002&lt;/Zip&gt;
                          &lt;/Address&gt;
                        &lt;/AddressesToEdit&gt;
                    &lt;/E911Order&gt;
                                </pre>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                PIDF-LO address deletion order.
                                <b>AddressesToDelete</b>, <b>E911LocationId</b> are required.
                            </td>
                            <td>
                                <pre>
                    &lt;E911Order&gt;
                        &lt;CustomerOrderId&gt;CustomOrderId1&lt;/CustomerOrderId&gt;
                        &lt;AddressesToDelete&gt;
                          &lt;E911LocationId&gt;Some32CharacterOrLessString1&lt;/E911LocationId&gt;
                          &lt;E911LocationId&gt;Some32CharacterOrLessString2&lt;/E911LocationId&gt;
                        &lt;/AddressesToDelete&gt;
                    &lt;/E911Order&gt;
                                </pre>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                Non-PIDF-LO endpoint provisioning order.
                                <b>AlternateEndUserIdentifiers</b>, <b>AlternateEndUserIdentifier</b>, <b>Address</b>, <b>CallbackNumber</b>
                                <b>Identifier</b> is required.
                            </td>
                            <td>
                                <pre>
                    &lt;E911Order&gt;
                        &lt;CustomerOrderId&gt;CustomOrderId1&lt;/CustomerOrderId&gt;
                        &lt;CallerName&gt;OptionalCallerName&lt;/CallerName&gt;
                        &lt;Address&gt;
                          &lt;LocationId&gt;Some32CharacterOrLessString&lt;/LocationId&gt;
                          &lt;HouseNumber&gt;901&lt;/HouseNumber&gt;
                          &lt;StreetName&gt;MAIN CAMPUS&lt;/StreetName&gt;
                          &lt;StreetSuffix&gt;DR&lt;/StreetSuffix&gt;
                          &lt;City&gt;RALEIGH&lt;/City&gt;
                          &lt;StateCode&gt;NC&lt;/StateCode&gt;
                          &lt;Zip&gt;27606&lt;/Zip&gt;
                          &lt;PlusFour&gt;5244&lt;/PlusFour&gt;
                          &lt;Country&gt;United States&lt;/Country&gt;
                          &lt;AddressType&gt;E911&lt;/AddressType&gt;
                        &lt;/Address&gt;
                        &lt;AlternateEndUserIdentifiers&gt;
                          &lt;AlternateEndUserIdentifier&gt;
                            &lt;CallbackNumber&gt;9706542333&lt;/CallbackNumber&gt;
                            &lt;Identifier&gt;alphanumeric&lt;/Identifier&gt;
                            &lt;PIDFLOEnabled&gt;false&lt;/PIDFLOEnabled&gt;
                          &lt;/AlternateEndUserIdentifier&gt;
                        &lt;/AlternateEndUserIdentifiers&gt;
                    &lt;/E911Order&gt;
                                </pre>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                TN/address combination provisioning order.
                                <b>TelephoneNumbers</b>, <b>TelephoneNumber</b>, <b>Address</b> are required.
                            </td>
                            <td>
                                <pre>
                    &lt;E911Order&gt;
                        &lt;TelephoneNumbers&gt;
                          &lt;TelephoneNumber&gt;9706542332&lt;/TelephoneNumber&gt;
                          &lt;TelephoneNumber&gt;9706542333&lt;/TelephoneNumber&gt;
                        &lt;/TelephoneNumbers&gt;
                        &lt;CallerName&gt;OptionalCallerName&lt;/CallerName&gt;
                        &lt;Address&gt;
                          &lt;HouseNumber&gt;915&lt;/HouseNumber&gt;
                          &lt;HouseSuffix/&gt;
                          &lt;PreDirectional/&gt;
                          &lt;StreetName&gt;Elm&lt;/StreetName&gt;
                          &lt;StreetSuffix&gt;Ave&lt;/StreetSuffix&gt;
                          &lt;PostDirectional/&gt;
                          &lt;AddressLine2/&gt;
                          &lt;City&gt;Carpinteria&lt;/City&gt;
                          &lt;StateCode&gt;CA&lt;/StateCode&gt;
                          &lt;Zip&gt;93013&lt;/Zip&gt;
                          &lt;PlusFour/&gt;
                          &lt;County/&gt;
                          &lt;Country&gt;United States&lt;/Country&gt;
                        &lt;/Address&gt;
                    &lt;/E911Order&gt;
                                </pre>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                TN/address combination deletion.
                                <b>TelephoneNumbers</b>, <b>TelephoneNumber</b> are required. <b>DeleteTNSpecificE911Address</b> is
                                required and have to be 'true'.
                            </td>
                            <td>
                                <pre>
                    &lt;E911Order&gt;
                        &lt;CustomerOrderId&gt;CustomOrderId1&lt;/CustomerOrderId&gt;
                        &lt;TelephoneNumbers&gt;
                          &lt;TelephoneNumber&gt;9706542332&lt;/TelephoneNumber&gt;
                          &lt;TelephoneNumber&gt;9706542333&lt;/TelephoneNumber&gt;
                        &lt;/TelephoneNumbers&gt;
                        &lt;DeleteTNSpecificE911Address&gt;true&lt;/DeleteTNSpecificE911Address&gt;
                    &lt;/E911Order&gt;
                                </pre>
                            </td>
                        </tr>
                        </tbody>
                    </table>
                    <br /><b>Error Codes.</b>
                    <br />For all possible error codes that can be returned in an E911 order, refer to section 6.4 of the Error Code Reference.
                responses:
                    201:
                        description: |
                            Created <br> A 201 response indicates that an order has been created.
                        body:
                            application/xml:
                                example: 
                                    <?xml version="1.0"?>
                                    <E911OrderResponse>
                                        <E911Order>
                                            <CustomerOrderId>CustomOrderId1</CustomerOrderId>
                                            <orderId>1d863522-c9bf-430c-8e79-cc63cad04a1d</orderId>
                                            <ProcessingStatus>RECEIVED</ProcessingStatus>
                                            <TelephoneNumbers>
                                                <TelephoneNumber>9706542332</TelephoneNumber>
                                                <TelephoneNumber>9706542333</TelephoneNumber>
                                            </TelephoneNumbers>
                                            <CallerName>CustomCallerName</CallerName>
                                            <Address>
                                                <HouseNumber>915</HouseNumber>
                                                <HouseSuffix/>
                                                <PreDirectional/>
                                                <StreetName>Elm</StreetName>
                                                <StreetSuffix>Ave</StreetSuffix>
                                                <PostDirectional/>
                                                <AddressLine2/>
                                                <City>Carpinteria</City>
                                                <StateCode>CA</StateCode>
                                                <Zip>93013</Zip>
                                                <PlusFour/>
                                                <County/>
                                                <Country/>
                                            </Address>
                                        </E911Order>
                                    </E911OrderResponse>
                    400:
                        description: |
                            Bad Request <br> A 400 response Indicates that the order could not be created.
                            Error text and an error code will be provided in the ErrorList element.
                        body:
                            application/xml:
                                example: 
                                            <?xml version="1.0"?>
                                    <E911OrderResponse>
                                        <ErrorList>
                                            <Error>
                                                <TelephoneNumber>9706542332</TelephoneNumber>
                                                <Code>12345</Code>
                                                <Description>e911 information cannot be changed because the number is provisioned to another account</Description>
                                            </Error>
                                        </ErrorList>
                                        <E911Order>
                                            <CustomerOrderId>CustomOrderId1</CustomerOrderId>
                                            <ProcessingStatus>RECEIVED</ProcessingStatus>
                                            <TelephoneNumbers>
                                                <TelephoneNumber>9706542332</TelephoneNumber>
                                                <TelephoneNumber>9706542333</TelephoneNumber>
                                            </TelephoneNumbers>
                                            <CallerName>CustomCallerName</CallerName>
                                            <Address>
                                                <HouseNumber>915</HouseNumber>
                                                <HouseSuffix/>
                                                <PreDirectional/>
                                                <StreetName>Elm</StreetName>
                                                <StreetSuffix>Ave</StreetSuffix>
                                                <PostDirectional/>
                                                <AddressLine2/>
                                                <City>Carpinteria</City>
                                                <StateCode>CA</StateCode>
                                                <Zip>93013</Zip>
                                                <PlusFour/>
                                                <County/>
                                                <Country/>
                                            </Address>
                                        </E911Order>
                                    </E911OrderResponse>
            /{orderid}: 
                description: |
                    This API returns data about the specific E911s Order specified as the resource
                get:
                    description: |
                        Retrieve information about a E911 Order with specified ID.
                    responses:
                        200:
                            description: |
                                The descriptive payload for the E911 Orders query provides a broad range of information about the E911 Order identified in the URL.  Included amongst the information is:
                                <ul>
                                <li>ErrorList - the errors discovered with codes and explanations</li>
                                <li>ProcessingStatus(RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED) - the overall status of the order</li>
                                </ul>
                            body:
                                application/xml:
                                    example: 
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <E911Order>
                                            <OrderCreateDate>2015-06-16T14:03:10.199Z</OrderCreateDate>
                                            <AccountId>111</AccountId>
                                            <CreatedByUser>admin</CreatedByUser>
                                            <OrderId>8578086b-f73d-4a0f-bba6-d20399c7de31</OrderId>
                                            <LastModifiedDate>2015-06-16T14:03:10.789Z</LastModifiedDate>
                                            <Address>
                                                <HouseNumber>901</HouseNumber>
                                                <StreetName>Main Campus Drive</StreetName>
                                                <City>Raleigh</City>
                                                <StateCode>NC</StateCode>
                                                <Zip>27606</Zip>
                                                <Country>United States</Country>
                                            </Address>
                                            <CallerName>testName111111</CallerName>
                                            <CustomerOrderId>test</CustomerOrderId>
                                            <ProcessingStatus>PARTIAL</ProcessingStatus>
                                            <TelephoneNumbers>
                                                <TelephoneNumber>3172000218</TelephoneNumber>
                                                <TelephoneNumber>3172000000</TelephoneNumber>
                                            </TelephoneNumbers>
                                            <ErrorList>
                                                <Error>
                                                    <Code>8003</Code>
                                                    <Description>Telephone numbers does not belong to this account.</Description>
                                                    <TelephoneNumbers>
                                                        <TelephoneNumber>3172000000</TelephoneNumber>
                                                    </TelephoneNumbers>
                                                </Error>
                                                <Error>
                                                    <Code>8009</Code>
                                                    <Description>Telephone numbers not in 'Inservice'</Description>
                                                    <TelephoneNumbers>
                                                        <TelephoneNumber>3172000000</TelephoneNumber>
                                                    </TelephoneNumbers>
                                                </Error>
                                            </ErrorList>
                                                <!-- or, instead of TelephoneNumbers, a list of Alternative identifiers can be returned -->
                                                <AlternateEndUserIdentifiers>
                                                    <AlternateEndUserIdentifier>
                                                        <PIDFLOEnabled>true</PIDFLOEnabled>
                                                        <Identifier>alphanumeric_or.:-_@_6_32_chars</Identifier>
                                                        <CallbackNumber>9706542332</CallbackNumber>
                                                        <CallerName>Eli</CallerName>
                                                        <PreferredLanguage>en</PreferredLanguage>
                                                        <LocationId>Some32CharacterOrLessString</LocationId>
                                                        <Address>
                                                            <LocationId>Some32CharacterOrLessString</LocationId>
                                                            <HouseNumber>915</HouseNumber>
                                                            <HouseSuffix/>
                                                            <PreDirectional/>
                                                            <StreetName>Elm</StreetName>
                                                            <StreetSuffix>Ave</StreetSuffix>
                                                            <PostDirectional/>
                                                            <AddressLine2/>
                                                            <City>Carpinteria</City>
                                                            <StateCode>CA</StateCode>
                                                            <Zip>93013</Zip>
                                                            <PlusFour/>
                                                            <County/>
                                                            <Country>United States</Country>
                                                        </Address>
                                                    </AlternateEndUserIdentifier>
                                                    <AlternateEndUserIdentifier>
                                                        <PIDFLOEnabled>true</PIDFLOEnabled>
                                                        <Identifier>alphanumeric_or.:-_@_6_32_chars</Identifier>
                                                        <CallbackNumber>9706542333</CallbackNumber>
                                                        <CallerName>Ethan</CallerName>
                                                        <PreferredLanguage>en</PreferredLanguage>
                                                    </AlternateEndUserIdentifier>
                                                </AlternateEndUserIdentifiers>
                                                <!-- or, instead of the TelephoneNumbers and Alternative identifiers, a list of Additional Addresses can be returned -->
                                                <AdditionalAddresses>
                                                    <Address>
                                                        <LocationId>Some32CharacterOrLessString</LocationId>
                                                        <HouseNumber>915</HouseNumber>
                                                        <HouseSuffix/>
                                                        <PreDirectional/>
                                                        <StreetName>Elm</StreetName>
                                                        <StreetSuffix>Ave</StreetSuffix>
                                                        <PostDirectional/>
                                                        <AddressLine2/>
                                                        <City>Carpinteria</City>
                                                        <StateCode>CA</StateCode>
                                                        <Zip>93013</Zip>
                                                        <PlusFour/>
                                                        <County/>
                                                        <Country>United States</Country>
                                                    </Address>
                                                </AdditionalAddresses>
                                        </E911Order>
                        404:
                            description: NOT FOUND - the order id does not exist in the system
                            body:
                                application/xml:
                                    example: 
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <E911OrderReportResponse>
                                            <ResponseStatus>
                                                <Description>The resource does not exist</Description>
                                            </ResponseStatus>
                                        </E911OrderReportResponse>
                /history: 
                    description: |
                        The history API returns the various events that have impacted the specified E911 order.
                    get:
                        description: |
                            Retrieve the history information associated with an order
                        responses:    
                            200:
                                description: |
                                    The history payload is a set of history records, each of which contains:
                                        <table style="text-align: left; width: 80%;" border="1" cellpadding="2" cellspacing="2">
                                            <tbody>
                                                <tr>
                                                    <td>OrderModifiedDate</td>
                                                    <td>The date that the order history event happened</td>
                                                </tr>
                                                <tr>
                                                    <td>Status</td>
                                                    <td>The new state of the E911 order - RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED </td>
                                                </tr>
                                                <tr>
                                                    <td>Note</td>
                                                    <td>A Note or additional information included with the state change </td>
                                               </tr>
                                               <tr>
                                                    <td>Author</td>
                                                    <td>The user id that implemented the state change</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                body: 
                                    application/xml:
                                        example: 
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <OrderHistoryWrapper>
                                                <OrderHistory>
                                                    <OrderDate>2015-06-16T14:03:10.225Z</OrderDate>
                                                    <Author>admin</Author>
                                                    <Status>RECEIVED</Status>
                                                </OrderHistory>
                                                <OrderHistory>
                                                    <OrderDate>2015-06-16T14:03:10.330Z</OrderDate>
                                                    <Author>admin</Author>
                                                    <Status>PROCESSING</Status>
                                                </OrderHistory>
                                                <OrderHistory>
                                                    <OrderDate>2015-06-16T14:03:10.789Z</OrderDate>
                                                    <Author>admin</Author>
                                                    <Status>PARTIAL</Status>
                                                </OrderHistory>
                                            </OrderHistoryWrapper>
                /adminparameters: 
                    # this file is shared between 6 order types - 
                    #  - orders
                    #  - portins
                    #  - portouts
                    #  - LSR orders
                    #  - E911 orders
                    #  - TN Option orders
                    # 
                    description: |
                        The /adminparameters resource contains two pieces of information...
                        <ul>
                          <li>The "activity state" of the order - a classification of what the state the order is in from the perspective of the Bandwidth staff member.</li>
                          <ul>
                            <li>Quiet - the order is automaticly progressing through the work flow and nothing needs to be done.  This is the default state</li>
                            <li>Changed - something has changed in the order, and should be examined by a staff member</li>
                            <li>Seen - the order has been examined by the staff member, and if required, action is being taken</li>
                            <li>Responded - a response has been provided to the customer</li>
                          </ul>
                          <li>The name or handle of the Bandwidth staff member that is caring for the order</li>
                        </ul>
                        This resource is used by Bandwidth in managing multiple types of orders. <br><br> There is only one instance of the adminparameters resource associated with an order.  The resource is assigned when it is needed, so an order that is flowing through the workflow without errors will likely not have an instance of adminparameters.
                    put:
                        description: Updates the admin parameters associated with an order.  Removing an element will result in resetting the element to the default value.
                        body:
                            application/xml:
                                example:
                                    <?xml version="1.0"?>
                                    <AdminParameters>
                                        <!-- Optional - Default value is Quiet-->
                                        <ActivityState>Changed</ActivityState>
                                        <!-- Optional -->
                                        <BandwidthPrime>James T Kirk</BandwidthPrime>
                                    </AdminParameters>
                        responses:
                            201:
                                description: CREATED - the admin parameters resource has been created and populated as directed.
                            200:
                                description: OK - The previously created resource has been updated as directed.
                            404:
                                description: Bad Request - some error is present in the payload, and the the Admin Parameters have not been changed.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AdminParametersResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>15517</ErrorCode>
                                                    <Description>Invalid 'activityState'. Valid values are changed, seen, responded, quiet</Description>
                                                </ResponseStatus>
                                            </AdminParametersResponse>        
                    get:
                        description: Retrieve the admin parameters associated with an order.
                        responses:
                            200:
                                description: OK - there are admin parameters associated with the order, and they have been returned in the response.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AdminParametersResponse>
                                                <AdminParameters>
                                                    <ActivityState>responded</ActivityState>
                                                    <BandwidthPrime>James T Kirk</BandwidthPrime>
                                                </AdminParameters>
                                            </AdminParametersResponse>                    
                            404:
                                description: NOT FOUND - No admin parameters have been associated with this order id (or the orderid cannot be found in the system).  For a valid orderid this is interpreted as a "Quiet" <ActivityState>.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AdminParametersResponse>
                                                <ResponseStatus>
                                                    <Description>The resource does not exist</Description>
                                                </ResponseStatus>
                                            </AdminParametersResponse>     
                    delete:
                        description: Remove the admin parameters associated with an order
                        responses:
                            200:
                                description: OK - the admin parameters have been removed from the order
                            400:
                                description: BAD REQUEST - typically this means that the order-id is incorrect.
                                body:
                                    application/xml:
                                        example:
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AdminParametersResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>5035</ErrorCode>
                                                    <Description>port_in order f58f47a5-f9f5-4dd2-8687-a615b2fe86cd9 not found.</Description>
                                                </ResponseStatus>
                                            </AdminParametersResponse>
        /externalTns: 
            description: |
                The externalTns order resource represents the requests made to the Bandwidth Dashboard API to add or remove customer owned or managed telephone numbers into or from the Bandwidth Dashboard.  This API request will create an order record specific to the request that can be used to understand and track the outcome of the request once complete 
                <br><br>
                The information below captures the REST endpoint URL and Payloads that are used to install or remove customer provided external telephone numbers from the Bandwidth Dashboard.
                <br><br>
                This API has been developed based on similar existing functionality available in the Bandwidth Dashboard, but has been refined to focus purely on the task of managing numbers that have been provided to Bandwidth by our customers, allowing the Dashboard business logic to be specific and focused with respect to managing these telephone numbers.
                <br><br>
                The API follows the Bandwidth Dashboard order model, where an order-id is created to track the interaction and refer back to it as needed.  This record will also be persisted to enable examination of past events.  
                <br><br>
                This single API controls both the installation and removal of telephone numbers.  The action is controlled by the use of an element in the payload, allowing a simple model for managing both addition and removal of telephone numbers.  Additionally, if the status of an existing telephone number needs to be reset within the Bandwidth Dashboard, possibly as the result of an ownership change (port) of the telephone number, the API can be called to re-add the number to the Bandwidth Dashboard, which will perform a reset on that number without removing it from service first.
                <br><br>
                The externalTns order tracks the orders related to customer-provided numbers into the customer's account. 
                <br><br>
                This Import/Delete request reflects a customer-executed import or removal of numbers that they own and/or control.  The telephone numbers in question cannot be Bandwidth CLEC numbers, and are not subject to the normal telephone number life-cycle.<br><br>
            get:
                description: |
                    Retrieve a list of the externalTns orders that are associated with the account.
                queryParameters:
                    status:
                        description: The status of the TN Option order being searched for.
                        type: string
                        example: PARTIAL
                        enum: [RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED]
                        repeat: true
                    tn:
                        description: A Telephone Number (TN) that is referenced in the order
                        type: string
                        example: 9199918388
                    customerOrderId:
                        description: The Customer Order ID is an ID assigned by the account owner to provide a reference number for the TN Option order.
                        type: string
                        example: ABCCorp12345
                    createdDateFrom:
                        description: Checks the order's creation date against this value. Orders that have a creation date after this date will be included. Format is yyyy-MM-dd
                        type: string
                        example: 2013-10-22
                    createdDateTo:
                        description: Checks the order's creation date against this value. Orders that have a creation date before this date will be included. Format is yyyy-MM-dd
                        type: string
                        example: 2013-10-25
                    orderIdFragment:
                        description: This search parameter represents the internal Bandwidth Dashboard ID that has been assigned to the TN Option Order.  This parameter is the first few characters of the internal ID - the entire ID does not need to be specified.
                        type: string
                        example: ed1c0bed-e2
                    action:
                        description: whether or not the results should be restricted to IMPORT or REMOVE orders."
                        type: string
                        example: REMOVE
                        enum: [IMPORT, REMOVE]
                        repeat: false
                responses:
                    200:
                        description: |
                            The descriptive payload for the externalTns Orders query provides information about the externalTns Orders found by the query, including the data associated with the order, the state of the order, and a list of the successfully uploaded Telephone Numbers, and decriptions of any encountered errors. 
                        body:
                            application/xml:
                                example: 
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <ExternalTnsOrders>
                                        <TotalCount>2</TotalCount>
                                        <ExternalTnsOrderSummary>
                                            <!-- Account ID preserved for uniformity with global list -->
                                            <accountId>1</accountId>
                                            <CompletedQuantity>3</CompletedQuantity>
                                            <userId>jbm</userId>
                                            <OrderDate>2016-01-15T11:36:52.727Z</OrderDate>
                                            <OrderType>ExternalTnsOrder</OrderType>
                                            <OrderStatus>COMPLETE</OrderStatus>
                                            <OrderId>65e03a35-6b97-48a5-8126-f47bad02df2a</OrderId>
                                        </ExternalTnsOrderSummary>
                                        <ExternalTnsOrderSummary>
                                            <accountId>9900012</accountId>
                                            <CompletedQuantity>5</CompletedQuantity>
                                            <userId>jbm</userId>
                                            <OrderDate>2016-01-15T11:36:26.633Z</OrderDate>
                                            <OrderType>ExternalTnsOrder</OrderType>
                                            <OrderStatus>PARTIAL</OrderStatus>
                                            <OrderId>d8f5abc0-1a4c-4c36-b387-93fb5b430784</OrderId>
                                        </ExternalTnsOrderSummary>
                                    </ExternalTnsOrders>
                    404:
                        description: No externalTns orders can be found that match the query parameters.
            post:
                description: |
                    Create a externalTns order to add or remove telephone numbers provided by the customer from the Bandwidth network.
                    Note: the attempt to import a telephone number that is already present in the account will *not* create an error, but will reset all of the  attributes of that telephone number in the Dashboard system as if the telephone number was being imported for the first time
                    The key data elements in the submission are -
                     <table style="text-align: left; width: 80%;"
                     border="1" cellpadding="2" cellspacing="2">
                      <tbody>
                        <tr>
                          <td>CustomerOrderID</td>
                          <td>An order ID created by the customer for their tracking purposes</td>
                        </tr>
                        <tr>
                          <td>SiteId</td>
                          <td>(Required) The ID of the Site that the Telephone Numbers are to be provisioned to.</td>
                        </tr>
                        <tr>
                          <td>SipPeerId</td>
                          <td>(Optional) The ID of the SIP Peer that the Telephone Numbers are to be provisioned to.</td>
                        </tr>
                        <tr>
                          <td>Action</td>
                          <td>(Required) Indentify the action on external TNs. Allowed values... IMPORT or REMOVE.</td>
                        </tr>
                      </tbody>
                    </table>
                body:
                    application/xml:
                        example: |
                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                            <ExternalTnsOrder>
                                <CustomerOrderID>ICPA123ABC</CustomerOrderID>
                                <SiteId>743</SiteId>
                                <SipPeerId>303716</SipPeerId>
                                <Action>[ IMPORT | REMOVE ]</Action>
                                <TelephoneNumbers>
                                    <TelephoneNumber>9199918388</TelephoneNumber>
                                    <TelephoneNumber>4158714245</TelephoneNumber>
                                    <TelephoneNumber>4352154439</TelephoneNumber>
                                    <TelephoneNumber>4352154466</TelephoneNumber>
                                </TelephoneNumbers>
                            </ExternalTnsOrder>
                responses:
                    201:
                        description: |
                            Created <br> A 201 response indicates that an order has been created.
                        body:
                            application/xml:
                                example: 
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <ExternalTnsOrderResponse>
                                        <OrderCreateDate>2016-01-15T11:36:52.727Z</OrderCreateDate>
                                        <AccountId>1</AccountId>
                                        <CreatedByUser>jbm</CreatedByUser>
                                        <OrderId>65e03a35-6b97-48a5-8126-f47bad02df2a</OrderId>
                                        <ProcessingStatus>RECEIVED</ProcessingStatus>
                                        <Order>
                                            <CustomerOrderID>ICPA123ABC</CustomerOrderID>
                                            <SiteId>743</SiteId>
                                            <SipPeerId>303716</SipPeerId>
                                            <Action>[ IMPORT | REMOVE ]</Action>
                                            <TelephoneNumbers>
                                                <TelephoneNumber>9199918388</TelephoneNumber>
                                                <TelephoneNumber>4158714245</TelephoneNumber>
                                                <TelephoneNumber>4352154439</TelephoneNumber>
                                                <TelephoneNumber>4352154466</TelephoneNumber>
                                            </TelephoneNumbers>
                                        </Order>
                                    </ExternalTnsOrderResponse>
                    400:
                        description: |
                            Bad Request <br> A 400 response Indicates that the order could not be created.
                            Error text and an error code will be provided in the ErrorList element.
                        body:
                            application/xml:
                                example: 
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <ExternalTnsOrderResponse>
                                        <ResponseStatus>
                                            <ErrorCode>5081</ErrorCode>
                                            <Description>Action is absent or invalid. Possible values  IMPORT, REMOVE</Description>
                                        </ResponseStatus>
                                    </ExternalTnsOrderResponse>
            /{orderid}: 
                description: |
                    This API returns data about the specific externalTns order specified as the resource
                get:
                    description: |
                        Retrieve information about a externalTns order with specified ID.
                    responses:
                        200:
                            description: |
                                The descriptive payload for the externalTns query provides a broad range of information about the externalTns order identified in the URL.  Included amongst the information is...
                                <ul>
                                <li>ErrorList - the errors discovered with codes and explanations</li>
                                <li>ProcessingStatus(RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED) - the overall status of the order</li>
                                </ul>
                            body:
                                application/xml:
                                    example: 
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <ExternalTnsOrder>
                                            <OrderCreateDate>2016-01-15T11:36:52.727Z</OrderCreateDate>
                                            <AccountId>1</AccountId>
                                            <CreatedByUser>jbm</CreatedByUser>
                                            <OrderId>65e03a35-6b97-48a5-8126-f47bad02df2a</OrderId>
                                            <ProcessingStatus>PARTIAL</ProcessingStatus>
                                            <Order>
                                                <CustomerOrderID>ICPA123ABC</CustomerOrderID>
                                                <SiteId>743</SiteId>
                                                <SipPeerId>303716</SipPeerId>
                                                <Action>[ IMPORT | REMOVE ]</Action>
                                                <TelephoneNumbers>
                                                    <TelephoneNumber>9199918388</TelephoneNumber>
                                                    <TelephoneNumber>4158714245</TelephoneNumber>
                                                    <TelephoneNumber>4352154439</TelephoneNumber>
                                                    <TelephoneNumber>4352154466</TelephoneNumber>
                                                </TelephoneNumbers>
                                            </Order>
                                            <Errors>
                                                <Error>
                                                    <Code>[int]</Code>
                                                    <Description>[string]</Description>
                                                    <TelephoneNumbers>
                                                        <TelephoneNumber>9199918388</TelephoneNumber>
                                                    </TelephoneNumbers>
                                                </Error>
                                            </Errors>
                                        </ExternalTnsOrder>
                        404:
                            description: NOT FOUND - the order id does not exist in the system
                            body:
                                application/xml:
                                    example: 
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <ExternalTnsOrderResponse>
                                            <ResponseStatus>
                                                <Description>The resource does not exist</Description>
                                            </ResponseStatus>
                                        </ExternalTnsOrderResponse>
                /history: 
                    description: |
                        The history API returns the various events that have impacted the specified External Tns order.
                    get:
                        description: |
                            Retrieve the history information associated with an order
                        responses:    
                            200:
                                description: |
                                    The history payload is a set of history records, each of which contains:
                                        <table style="text-align: left; width: 80%;" border="1" cellpadding="2" cellspacing="2">
                                            <tbody>
                                                <tr>
                                                    <td>OrderModifiedDate</td>
                                                    <td>The date that the order history event happened</td>
                                                </tr>
                                                <tr>
                                                    <td>Status</td>
                                                    <td>The new state of the E911 order - RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED </td>
                                                </tr>
                                                <tr>
                                                    <td>Note</td>
                                                    <td>A Note or additional information included with the state change </td>
                                               </tr>
                                               <tr>
                                                    <td>Author</td>
                                                    <td>The user id that implemented the state change</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                body: 
                                    application/xml:
                                        example: 
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <OrderHistoryWrapper>
                                                <OrderHistory>
                                                    <OrderDate>2015-06-16T14:03:10.225Z</OrderDate>
                                                    <Author>admin</Author>
                                                    <Status>RECEIVED</Status>
                                                </OrderHistory>
                                                <OrderHistory>
                                                    <OrderDate>2015-06-16T14:03:10.330Z</OrderDate>
                                                    <Author>admin</Author>
                                                    <Status>PROCESSING</Status>
                                                </OrderHistory>
                                                <OrderHistory>
                                                    <OrderDate>2015-06-16T14:03:10.789Z</OrderDate>
                                                    <Author>admin</Author>
                                                    <Status>PARTIAL</Status>
                                                </OrderHistory>
                                            </OrderHistoryWrapper>
        /geocodeRequest : 
            description: |
                This resource is used to geocode address.
            post:
                description:
                    POST is used to validate address as geocode-able one. Request payload is the address to geocode.
                    If decomposed elements are provided for AddressLine 1 then AddressLine1 is ignored. At least HouseNumber and StreetName
                    are required to use them as replacement of AddressLine1. If at least HouseNumber or StreetName is absent then
                    AddressLine1 is used. AddressLine1 information is required in either way. City and StateCode fields are required.
                body:
                    application/xml:
                        example: 
                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                            <RequestAddress>
                                <AddressLine1>904 E Ansun Str</AddressLine1>
                                <HousePrefix/>
                                <HouseNumber>904</HouseNumber>
                                <HouseSuffix>E</HouseSuffix>
                                <PreDirectional/>
                                <StreetName>Ansun</StreetName>
                                <StreetSuffix>Str</StreetSuffix>
                                <PostDirectional/>
                                <AddressLine2/>
                                <City>Marshalltown</City>
                                <StateCode>IA</StateCode>
                                <Zip>50158</Zip>
                                <PlusFour/>
                                <County/>
                                <Country/>
                            </RequestAddress>
                responses:
                    200:
                        description: |
                            OK - service validates address perfectly.
                        body:
                            application/xml:
                                example: 
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <GeocodeRequestResponse>
                                        <GeocodedAddress>
                                            <AddressLine1>904 E ANSON ST</AddressLine1>
                                            <HouseNumber>904</HouseNumber>
                                            <PreDirectional>E</PreDirectional>
                                            <StreetName>ANSON</StreetName>
                                            <StreetSuffix>ST</StreetSuffix>
                                            <City>MARSHALLTOWN</City>
                                            <StateCode>IA</StateCode>
                                            <Zip>50158</Zip>
                                            <PlusFour>3522</PlusFour>
                                            <Country>US</Country>
                                        </GeocodedAddress>
                                        <RequestAddress>
                                            <HouseNumber>904</HouseNumber>
                                            <HouseSuffix>E</HouseSuffix>
                                            <StreetName>Anson</StreetName>
                                            <StreetSuffix>St</StreetSuffix>
                                            <City>Marshalltown</City>
                                            <StateCode>IA</StateCode>
                                            <Zip>50158</Zip>
                                            <Country>US</Country>
                                            <AddressLine1>904 E Anson St</AddressLine1>
                                        </RequestAddress>
                                    </GeocodeRequestResponse>
                    400:
                        description: |
                            Bad request - service cannot geocode address or validation rules were violated.
                        body:
                            application/xml:
                                example: 
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <GeocodeRequestResponse>
                                        <ResponseStatus>
                                            <ErrorCode>12110</ErrorCode>
                                            <Description>This address could not be validated / geocoded</Description>
                                        </ResponseStatus>
                                    </GeocodeRequestResponse>
                    409:
                        description: |
                            Conflict - address is close to one that can be geocoded.
                        body:
                            application/xml:
                                example: 
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <GeocodeRequestResponse>
                                        <ErrorMessage>
                                            Some adjustments are required to allow the address to pass geocoding%3A
                                            Specified value - Street Name %3A "ANSUN" Valid value - "ANSON"
                                            Specified value - Street Suffix %3A "STR" Valid value - "ST"
                                        </ErrorMessage>
                                        <GeocodedAddress>
                                            <AddressLine1>904 E ANSON ST</AddressLine1>
                                            <HouseNumber>904</HouseNumber>
                                            <PreDirectional>E</PreDirectional>
                                            <StreetName>ANSON</StreetName>
                                            <StreetSuffix>ST</StreetSuffix>
                                            <City>MARSHALLTOWN</City>
                                            <StateCode>IA</StateCode>
                                            <Zip>50158</Zip>
                                            <PlusFour>3522</PlusFour>
                                            <Country>US</Country>
                                        </GeocodedAddress>
                                        <RequestAddress>
                                            <HouseNumber>904</HouseNumber>
                                            <HouseSuffix>E</HouseSuffix>
                                            <StreetName>Ansun</StreetName>
                                            <StreetSuffix>Str</StreetSuffix>
                                            <City>Marshalltown</City>
                                            <StateCode>IA</StateCode>
                                            <Zip>50158</Zip>
                                            <Country>US</Country>
                                            <AddressLine1>904 E Ansun Str</AddressLine1>
                                        </RequestAddress>
                                    </GeocodeRequestResponse>
                    500:
                        description: |
                            System error - internal error which cannot be fixed by changing payload etc.
                        body:
                            application/xml:
                                example: 
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <GeocodeRequestResponse>
                                        <ResponseStatus>
                                            <ErrorCode>12111</ErrorCode>
                                            <Description>Error during E911 Geocoding API response handling</Description>
                                        </ResponseStatus>
                                    </GeocodeRequestResponse>
                    503:
                        description: |
                            Service unavailable - for some reason service is temporary unavailable.
                        body:
                            application/xml:
                                example: 
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <GeocodeRequestResponse>
                                        <ResponseStatus>
                                            <ErrorCode>12109</ErrorCode>
                                            <Description>E911 Geocoding Service is temporary unavailable</Description>
                                        </ResponseStatus>
                                    </GeocodeRequestResponse>
        /hosts: 
            get:
                description: Retrieve information about the hosts of account, as guided by optional search parameters.
                queryParameters:
                    host:
                        description: An IP address or subnet (CIDR format) associated with the account. Filter for subnet applies by exact match.
                        type: string
                        example: 47.16.211.63 or 69.22.181.68/30
                    type:
                        description: |
                            A status value to filter the hosts returned in the payload.  Values that can be accepted include:
                            <ul>
                                <li>SMS</li>
                                <li>TERMINATION</li>
                                <li>ORIGINATION</li>
                            </ul>
                        type: string
                        enum: [SMS,TERMINATION,ORIGINATION]
                        example: TERMINATION
                responses:
                    200:
                        description: A successful result that contains the response data
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <SiteHostsResponse>
                                        <SiteHosts>
                                            <SiteHost>
                                                <SiteId>5</SiteId>
                                                <SipPeerHosts>
                                                    <SipPeerHost>
                                                        <SipPeerId>500146</SipPeerId>
                                                        <SmsHosts/>
                                                        <VoiceHosts>
                                                            <Host>
                                                                <HostName>47.16.211.63</HostName>
                                                            </Host>
                                                        </VoiceHosts>
                                                        <TerminationHosts/>
                                                    </SipPeerHost>
                                                </SipPeerHosts>
                                            </SiteHost>
                                        </SiteHosts>
                                    </SiteHostsResponse>
        /importToAccount: 
            description: |
                TNs that have been ported directly with a trading partner may be imported to an account. For importing numbers, use the POST API.
                This API requires special permissions and a special contractual relationship with Bandwidth.  In general it will <b>not</b> be available for most accounts.
                Note - this url is case sensitive
            get:
                description: |
                    A GET will return a list of the Import to Account orders that have previously performed on the account.  The query must always specify pagination parameters (size, page).  The results can also be optionally limited with start date and end date .
                queryParameters:
                    page:
                        type: string
                        required: true
                        description: The starting value for pagination of the payload/.  Expect in the initial page case this is the ID of the first record.
                        example: 1
                    size:
                        description: The number of records to return in a "page"
                        type: string
                        example: 300
                    startdate:
                        description: The starting date of a date range in the form yy-mm-yy
                        type: string
                        example: 13-12-01
                    enddate:
                        description: The ending date of a date range in the form yy-mm-yy
                        type: string
                        example: 13-12-31
                responses:   
                    200:
                        description: |
                            The response provides a list of all of the orders in the date range that have been issued against the account.
                            Included in the response for each order id (as applicable) are
                            <ul>
                            <li> the number of TNs in the order
                            <li> the user that issued the order
                            <li> the dates that the order was created and last lastModifiedDate
                            <li> the order-ID
                            <li> the status of the order
                            <ul>
                        body: 
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <ResponseSelectWrapper>
                                        <ListOrderIdUserIdDate>
                                            <TotalCount>3</TotalCount>
                                            <Links>
                                                <first>Link=&lt;http://api.qa.inetwork.com/iris/accounts/12346099/importToAccount?page=1&amp;size=5&gt;;rel="first";</first>
                                            </Links>
                                            <OrderIdUserIdDate>
                                                <CountOfTNs>0</CountOfTNs>
                                                <userId>jbm</userId>
                                                <lastModifiedDate>2013-12-06T15:26:29Z</lastModifiedDate>
                                                <OrderDate>2013-12-06T15:26:29.443Z</OrderDate>
                                                <orderId>82a09163-9a76-49bd-9e73-cbc3aaac1c20</orderId>
                                                <OrderStatus>FAILED</OrderStatus>
                                            </OrderIdUserIdDate>
                                            <OrderIdUserIdDate>
                                                <CountOfTNs>2</CountOfTNs>
                                                <userId>jbm</userId>
                                                <lastModifiedDate>2014-04-01T21:54:19Z</lastModifiedDate>
                                                <OrderDate>2014-04-01T21:54:18.796Z</OrderDate>
                                                <orderId>c5986599-3a7c-4eed-a5c4-9121c17d54ab</orderId>
                                                <OrderStatus>COMPLETE</OrderStatus>
                                                <TelephoneNumberDetails>
                                                    <States>
                                                        <StateWithCount>
                                                            <State>CA</State>
                                                            <Count>1</Count>
                                                        </StateWithCount>
                                                        <StateWithCount>
                                                    <!-- ... SNIP ... -->
                                                        </TierWithCount>
                                                    </Tiers>
                                                    <Vendors>
                                                        <VendorWithCount>
                                                            <VendorId>49</VendorId>
                                                            <VendorName>Bandwidth CLEC</VendorName>
                                                            <Count>3</Count>
                                                        </VendorWithCount>
                                                    </Vendors>
                                                </TelephoneNumberDetails>
                                            </OrderIdUserIdDate>
                                        </ListOrderIdUserIdDate>
                                    </ResponseSelectWrapper>
                    404:
                        description: a 404 is returned it no appropriate order resource was found.
            post:
                description: | 
                    Import a large number of previously ported or otherwise acquired numbers into the account
                    The various parameters in the importToAccount payload are...
                            <table style="text-align: left; width: 80%;"
                             border="1" cellpadding="2" cellspacing="2">
                              <thead>
                                <tr>
                                  <th>Parameter</th><th>Description</th>
                                </tr>
                              </thead>
                              <tbody>
                                <tr>
                                  <td>accountid</td>
                                  <td>The numerical Account ID assigned to the Account.</td>
                                </tr>
                                <tr>
                                  <td>SiteId</td>
                                  <td>The ID of the Site that the set of TNs is to be associated with. </td>
                                </tr>
                                <tr>
                                  <td>PeerId</td>
                                  <td>The ID of the SIP Peer that the set of TNs is to be associated with. (optional) </td>
                                </tr>
                                <tr>
                                  <td>BatchId</td>
                                  <td>A user-chosen id for the batch of phone numbers.  This Batch ID can span multiple number submissions.  Up to 10 alphanumeric characters.  If  the submission is not intended to be grouped into a batch of submissions then the Batch ID must be globally unique.  <b>It is recommended that the batch ids be globally unique, and that imports not be grouped together in batches by use of a common batch id.</b></td>
                                </tr>
                                <tr>
                                  <td>BatchSize</td>
                                  <td>The number of TNs in the batch, aggregated across all of the orders in the batch. This total spans API Calls, so if 3 calls are necessary to import 15000 numbers, this value would be 15000.  It is recommended to use a batch size equal to the number of telephone numbers in the API call, and use a different batch name for each API call - essentially limiting a batch to a single API call.</td>
                                </tr>
                                <tr>
                                  <td>VendorName</td>
                                  <td>The vendor that owns the number that is being ported in.  If the number is manually ported to a partner’s network then this would reflect that partner</td>
                                </tr>
                                <tr>
                                    <td>BillingType</td>
                                    <td>Type of billing rules to be applied. Possible values... NOCHARGE, PORTIN, NEWNUMBER, PROJECTPORT.</td>
                                </tr>
                                <tr>
                                  <td>TelehoneNumberList</td>
                                  <td>List of TNs to import - limited to 5000 Telephone Numbers.</td>
                                </tr>
                                <tr>
                                  <td>TnAttributes</td>
                                  <td>List of phone number attributes to be assigned. Optional parameter. Possible values: "Protected".</td>
                                </tr>
                                <tr>
                                 <td>InitialStatus</td>
                                 <td>TN status that be assigned to imported telephone numbers. Required existence of "Protected" TnAttribute. Possible values: "Available". </td>
                                </tr>
                              </tbody>
                            </table>
                body:
                    application/xml:
                        example: |
                            <?xml version="1.0"?>
                            <ImportToAccountNumberOrder>
                                <ImportToAccountNumberOrderType>
                                    <TelephoneNumberList>
                                        <TelephoneNumber>4158714244</TelephoneNumber>
                                        <TelephoneNumber>6105330709</TelephoneNumber>
                                    </TelephoneNumberList>
                                    <BillingType>NOCHARGE</BillingType>
                                    <InitialStatus>Available</InitialStatus>
                                    <TnAttributes>
                                        <TnAttribute>Protected</TnAttribute>
                                    </TnAttributes>
                                    <VendorName>Level 3</VendorName>
                                    <BatchId>TestId1234</BatchId>
                                    <BatchSize>2</BatchSize>
                                </ImportToAccountNumberOrderType>
                                <SiteId>1</SiteId>
                                <PeerId>12345</PeerId>
                            </ImportToAccountNumberOrder>
                responses:
                    201:
                        description: |
                            The POST returns a payload that directly reflects the submission, along with a location header value that points the user to the order resource that is created by the POST request.
                            The Location header value is in the form: GET ../accounts/{accountId}/importToAccount/{orderId}
                        body: 
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <ImportToAccountNumberOrderResponse>
                                        <orderRequest>
                                            <id>c5986599-3a7c-4eed-a5c4-9121c17d54ab</id>
                                            <OrderCreateDate>2014-04-01T21:54:18.796Z</OrderCreateDate>
                                            <ImportToAccountNumberOrderType>
                                                <BatchId>SJM00001</BatchId>
                                                <BatchSize>2</BatchSize>
                                                <BillingType>NOCHARGE</BillingType>
                                                <InitialStatus>Available</InitialStatus>
                                                <TnAttributes>
                                                    <TnAttribute>Protected</TnAttribute>
                                                </TnAttributes>
                                                <TelephoneNumberList>
                                                    <TelephoneNumber>4158714245</TelephoneNumber>
                                                    <TelephoneNumber>6105330710</TelephoneNumber>
                                                </TelephoneNumberList>
                                                <VendorName>Level 3</VendorName>
                                            </ImportToAccountNumberOrderType>
                                            <SiteId>743</SiteId>
                                            <PeerId>12345</PeerId>
                                        </orderRequest>
                                    </ImportToAccountNumberOrderResponse>
            #
            /{orderid}: 
                description: |
                    Supplying an order id to the import to account API call will return a description of that order if the order-id is valid, and return a 404 otherwise.
                get:
                    description: |
                         A GET will return an order that have previously performed on the account.
                    responses:   
                        200:
                            description: The identified order has been retrieved.
                            body: 
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <ImportToAccountNumberOrderResponse>
                                            <ErrorList/>
                                            <ImportedTelephoneNumberList>
                                                <TelephoneNumber>9199918393</TelephoneNumber>
                                                <TelephoneNumber>9199918394</TelephoneNumber>
                                            </ImportedTelephoneNumberList>
                                            <orderRequest>
                                                <OrderCreateDate>2014-04-18T16:38:05.001Z</OrderCreateDate>
                                                <PeerId>303716</PeerId>
                                                <ImportToAccountNumberOrderType>
                                                    <BatchId>TestId1234</BatchId>
                                                    <BatchSize>2</BatchSize>
                                                    <OverridePortFees>false</OverridePortFees>
                                                    <PortedIn>false</PortedIn>
                                                    <InitialStatus>Available</InitialStatus>
                                                    <TnAttributes>
                                                        <TnAttribute>Protected</TnAttribute>
                                                    </TnAttributes>
                                                    <TelephoneNumberList>
                                                        <TelephoneNumber>9199918393</TelephoneNumber>
                                                        <TelephoneNumber>9199918394</TelephoneNumber>
                                                    </TelephoneNumberList>
                                                    <VendorName>Bandwidth CLEC</VendorName>
                                                </ImportToAccountNumberOrderType>
                                                <SiteId>743</SiteId>
                                            </orderRequest>
                                            <OrderStatus>COMPLETE</OrderStatus>
                                            <ImportedTelephoneNumberDetailList>
                                                <TelephoneNumberDetail>
                                                    <FullNumber>9199918393</FullNumber>
                                                </TelephoneNumberDetail>
                                                <TelephoneNumberDetail>
                                                    <FullNumber>9199918394</FullNumber>
                                                </TelephoneNumberDetail>
                                            </ImportedTelephoneNumberDetailList>
                                        </ImportToAccountNumberOrderResponse>
                        404:
                            description: No import to account order resource was found - the order-id in the URL is likely in error.
                /notes: 
                    # note that this file is shared between 5 order types - 
                    #  - orders
                    #  - disconnects
                    #  - portins
                    #  - portouts
                    #  - inporttoaccount
                    #  - lidbs
                    #  - dldas
                    # 
                    description: |
                        The /notes resource manages a note or set of notes associated with an order.  Notes can only be appended to the collection, and are not individually addressable or modifiable once added.
                    post:
                        description: Updates the Notes resource by adding a note.
                        body:
                            application/xml:
                                example:
                                    <?xml version="1.0" encoding="UTF-8"?>
                                    <Note>
                                       <UserId>user id</UserId>
                                       <Description>note text</Description>
                                       <Internal>false</Internal>   <!-- note created by admin is implicitly internal unless this tag with "false" value is specified -->
                                    </Note>
                        responses:
                            201:
                                description: CREATED - the note has been created and added to the collection of notes associated with the order.  A link to the note is included in the Location header of the response.  No body is returned
                            400:
                                description: Bad Request - the note has not been created because the payload is incomplete or in error.  An error payload is provided in the repsonse.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <NoteResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12501</ErrorCode>
                                                    <Description>Username is required</Description>
                                                </ResponseStatus>
                                            </NoteResponse>           
                    get:
                        description: Retrieve the set of notes associated with an order.
                        responses:
                            200:
                                description: OK - there are Notes associated with the order, and they have been returned in the response.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <Notes>
                                                <Note>
                                                    <Id>87037</Id>
                                                    <UserId>jbm</UserId>
                                                    <Description>This is a test note</Description>
                                                    <LastDateModifier>2014-11-16T04:01:10.000Z</LastDateModifier>
                                                    <Internal>false</Internal>    <!-- admin only -->
                                                </Note>
                                                <Note>
                                                    <Id>87039</Id>
                                                    <UserId>smckinnon</UserId>
                                                    <Description>This is a second test note</Description>
                                                    <LastDateModifier>2014-11-16T04:08:46.000Z</LastDateModifier>
                                                    <Internal>false</Internal>    <!-- admin only -->
                                                </Note>
                                            </Notes>                    
                            204:
                                description: No Content - there are no Notes associated with the order.  Since the notes resource is an aggregate rather than addressed resource the generic no content response is used, rather than a 404 as would be used if the resource was addressed with an identifier
            /batches: 
                description: |
                    The batches resource enumerates all of the batches that have been used for importing numbers into an account.
                    If there is the need to import a large number of Telephone Numbers into an account, the import is submitted as a <b>batch</b>, which is a collection of submissions that are held together by a batch id.  This batch of orders can subsequently be retrieved by retrieving all of the orders that share a batch id.
                get: 
                    description: |
                        GET on the batches resource will respond with a list of batches that have been processed in importing numbers into the account. 
                    responses: 
                        200: 
                            description: A 200 OK response indicates that there are batch resources associated with the account.
                            body: 
                                application/xml: 
                                    example: |
                                        <Batches>
                                            <Batch>
                                                <BatchId>phnpwrblk4</BatchId>
                                                <OrderCreateDate>2014-05-02T15-27-25.090Z</OrderCreateDate>
                                                <OrderId>4928ab9d-6bf6-4035-ac01-38a061d0f5d9</OrderId>
                                                <OrderStatus>IMPORT_COMPLETE</OrderStatus>
                                                <SubmittedTnCount>5000</SubmittedTnCount>
                                                <SuccessfulTnCount>5000</SuccessfulTnCount>
                                                <BatchSize>5000</BatchSize>
                                            </Batch>
                                            <Batch>
                                                <BatchId>1111111111</BatchId>
                                                <OrderCreateDate>2013-10-10T15-25-16.952Z</OrderCreateDate>
                                                <OrderId>8ce7c80b-d1ce-46f1-a3a1-56a08373b576</OrderId>
                                                <OrderStatus>VALIDATION_FAILED</OrderStatus>
                                                <SubmittedTnCount>4670</SubmittedTnCount>
                                                <SuccessfulTnCount>0</SuccessfulTnCount>
                                                <BatchSize>4670</BatchSize>
                                            </Batch>
                                            <Batch>
                                                <BatchId>8177974679</BatchId>
                                                <OrderCreateDate>2014-04-10T16-54-04.001Z</OrderCreateDate>
                                                <OrderId>26afaae3-2a8b-4405-96aa-1c38fe1fb74b</OrderId>
                                                <OrderStatus>IMPORT_COMPLETE</OrderStatus>
                                                <SubmittedTnCount>2358</SubmittedTnCount>
                                                <SuccessfulTnCount>2358</SuccessfulTnCount>
                                                <BatchSize>2358</BatchSize>
                                            </Batch>
                                            . . . SNIP . . .
                                            <Batch>
                                                <BatchId>1111111111</BatchId>
                                                <OrderCreateDate>2013-10-10T15-19-40.402Z</OrderCreateDate>
                                                <OrderId>8a15ccf2-5e61-4f7a-8aa8-8f9e11c86bad</OrderId>
                                                <OrderStatus>IMPORT_COMPLETE</OrderStatus>
                                                <SubmittedTnCount>5000</SubmittedTnCount>
                                                <SuccessfulTnCount>5000</SuccessfulTnCount>
                                                <BatchSize>5000</BatchSize>
                                            </Batch>
                                            <Batch>
                                                <BatchId>qualspk222</BatchId>
                                                <OrderCreateDate>2013-12-02T20-42-57.704Z</OrderCreateDate>
                                                <OrderId>b5d14b5d-a51b-4d92-b4ec-67dbc1d88ad8</OrderId>
                                                <OrderStatus>IMPORT_COMPLETE</OrderStatus>
                                                <SubmittedTnCount>222</SubmittedTnCount>
                                                <SuccessfulTnCount>222</SuccessfulTnCount>
                                                <BatchSize>222</BatchSize>
                                            </Batch>
                                        </Batches>
                        204: 
                            description: A 204 No Content response indicates that no batches have been established, which means that Import to Account has not been used to load numbers to this account.  There is no body associated with this response
                /{batchid}: 
                    description: |
                        A batchid identifies a specific batch of one or more orders that constitute a complete import of a (potentially large number of) Telephone Numbers.  Retrieving the information associated with a specific batch id describes the orders that were included in that batch, and the status and id of those orders.  The individual order details can be retrieved using ...
                        /.../importToAccount/{OrderId}
                    get:
                        description: |
                            GET on an individual batch id will return the information associated with the specified batch id. 
                        responses:
                            200:
                                description: A 200 OK response indicates that there are batch resources associated with the batchid in the URL.
                                body: 
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <Batches>
                                                <Batch>
                                                    <BatchId>1111111111</BatchId>
                                                    <OrderCreateDate>2013-10-10T15:25:16.952Z</OrderCreateDate>
                                                    <OrderId>8ce7c80b-d1ce-46f1-a3a1-56a08373b576</OrderId>
                                                    <OrderStatus>VALIDATION_FAILED</OrderStatus>
                                                    <SubmittedTnCount>4670</SubmittedTnCount>
                                                    <SuccessfulTnCount>0</SuccessfulTnCount>
                                                    <BatchSize>4670</BatchSize>
                                                </Batch>
                                                <Batch>
                                                    <BatchId>1111111111</BatchId>
                                                    <OrderCreateDate>2013-10-10T15:19:40.402Z</OrderCreateDate>
                                                    <OrderId>8a15ccf2-5e61-4f7a-8aa8-8f9e11c86bad</OrderId>
                                                    <OrderStatus>IMPORT_COMPLETE</OrderStatus>
                                                    <SubmittedTnCount>5000</SubmittedTnCount>
                                                    <SuccessfulTnCount>5000</SuccessfulTnCount>
                                                    <BatchSize>5000</BatchSize>
                                                </Batch>
                                            </Batches>
                            204:
                                description: A 204 No Content response indicates that no batch with the indicated batch id exists.
        /inserviceNumbers: 
            description: |
                This API call will find the in-service numbers on the indicated account. <br>
                The inservicenumbers query will return all of the in-service numbers on the account, filtered with a wide range of 
                search query parameters.  Note that many search combinations will not return a meaningful result because the search 
                parameters are mutually exclusive.  Since mutually exclusive search criteria result from data that can't  satisfy all of
                the criteria, these are not flagged as errors, and instead simply return an empty result.
            get:
                description: |
                    Retrieves a list of in-service phone numbers associated with the account ID. There are multiple search parameters for searching for in-service numbers:
                    <ul>
                        <li>size and page for pagination</li>
                        <li>area code</li>
                        <li>Npa-Nxx</li>
                        <li>LATA</li>
                        <li>state</li>
                        <li>rate center</li>
                    </ul>
                queryParameters:
                    page:
                        description: the page to fetch in a paginated collection
                        type: integer
                        default: 1
                    size:
                        description: the number of TNs to retrieve
                        type: integer
                        default: 300
                    areacode:
                        description: An Area Code search filter - all returned TNs will be in the entered Area Code
                        type: integer
                        example: 919
                        minimum: 200
                        maximum: 999
                    npanxx:
                        description: An NPA NXX search filter - all returned TNs will be in the entered NPA NXX dial plan
                        type: integer
                        example: 919859
                        minimum: 200000
                        maximum: 999999
                    lata:
                        description: A Rate Center search filter - all returned TNs will be in the entered Rate Center.  Typically this is a 3 or 5 digit value
                        type: integer
                        example: 435
                        minimum: 001
                        maximum: 99999
                    state:
                        description: A State search filter - all returned TNs will be in the entered State.  This is a 2-character State or Province abbreviation
                        type: string
                        example: TX
                    ratecenter:
                        description: A Rate Center search filter - all returned TNs will be in the entered Rate Center.  This Rate Center must be combined with a State in the query.  If State is not included in the query then the queryu will fail.
                        type: string
                        example: PLANO
                    startdate:
                        description: The starting date of a date range that will filter numbers based on activation or other change date
                        type: date
                        example: yy-mm-dd
                    enddate:
                        description: The ending date of a date range
                        type: date
                        example: yy-mm-dd
                responses: 
                    200:
                        description: A successful result that contains the response data
                        body: 
                            application/xml:
                                example: |
                                    <?xml version="1.0"?>
                                    <TNs>
                                        <TotalCount>59</TotalCount>
                                        <Links>
                                            <first> ( a link goes here ) </first>
                                        </Links>
                                        <TelephoneNumbers>
                                            <Count>59</Count>
                                            <TelephoneNumber>8043024183</TelephoneNumber>
                                            <TelephoneNumber>8042121778</TelephoneNumber>
                                            <TelephoneNumber>8042146066</TelephoneNumber>
                                            <TelephoneNumber>8043814903</TelephoneNumber>
                                            <TelephoneNumber>8043814905</TelephoneNumber>
                                            <TelephoneNumber>8043814864</TelephoneNumber>
                                            <TelephoneNumber>8043326094</TelephoneNumber>
                                            <TelephoneNumber>8042121771</TelephoneNumber>
                                            <TelephoneNumber>8043024182</TelephoneNumber>
                                            <!-- SNIP -->        
                                            <TelephoneNumber>8043814900</TelephoneNumber>
                                            <TelephoneNumber>8047672642</TelephoneNumber>
                                            <TelephoneNumber>8043024368</TelephoneNumber>
                                            <TelephoneNumber>8042147950</TelephoneNumber>
                                            <TelephoneNumber>8043169931</TelephoneNumber>
                                            <TelephoneNumber>8043325302</TelephoneNumber>
                                        </TelephoneNumbers>
                                    </TNs>
                    204:
                        description: No Content - there are no numbers found using the search parameters
                    404:
                        description: Not Found - The search parameters are invalid and prevent finding any content
            /totals: 
                description: A GET on this resource returns the total number of in-service numbers for the given account.
                get:
                    description: Returns the total number of in-service numbers for the given account.
                    responses:
                        200:
                            description: The request has been successfully retrieved and displayed in the payload.
                            body:
                                application/xml:
                                    example: |
                                        <Quantity>
                                            <Count>62</Count>
                                        </Quantity>
            /{tn}: 
                description: This resource acts as a verifier for in-service telephone numbers. 
                get:
                    description: A GET on the number desired will return a 200 OK if the number is in service on the account, or a 404 not found.
                    responses:
                        200:
                            description: The telephone number is currently in service. NOTE that there is no payload; a 200 status simply means that the phone is indeed an inservice number.
                        404:
                            description: The telephone number is not currently in service.
        /lidbs: 
            description: |
                The LIDBs Resource represents the requests made to the Bandwidth Dashboard API to add or otherwise manage a request to add Calling Line Information with a telephone number.  This API allows the creation and observation of a <b>"Line Information Data Base (LIDB)"</b> work order that causes an update of a person's calling name identification in a network Database.  The entry of this information in the network database in turn causes the display of their name on the phone of the people that they call. <br>
                This API call supports <b>GET</b> to retrieve information about outstanding LIDBs orders, and <b>POST</b> to create those orders.
            get:
                description: |
                    Retrieve a list of the LIDB orders that are associated with the account.
                queryParameters:
                    tn:
                        description: A Telephone Number (TN) that is referenced in the order
                        type: string
                        example: 9199918388
                    lastModifiedAfter:
                        description: Checks the order's last modified date against this value. Orders that have a modification date after this date will be included. Format is yyyy-MM-dd
                        type: string
                        example: 2013-10-25
                responses:
                    200:
                        description: |
                            OK <br> a 200 OK indicates that there are LIDB orders associated with the account.
                            The 200 OK response payload provides a list of all LIDB orders that have been issued against that account.
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0"?>
                                     <ResponseSelectWrapper>
                                        <ListOrderIdUserIdDate>
                                            <TotalCount>2122</TotalCount>
                                            <OrderIdUserIdDate>
                                                <accountId>9999999</accountId>
                                                <CountOfTNs>0</CountOfTNs>
                                                <lastModifiedDate>2014-02-25T16:02:43.195Z</lastModifiedDate>
                                                <OrderType>lidb</OrderType>
                                                <OrderDate>2014-02-25T16:02:43.195Z</OrderDate>
                                                <orderId>abe36738-6929-4c6f-926c-88e534e2d46f</orderId>
                                                <OrderStatus>FAILED</OrderStatus>
                                                <TelephoneNumberDetails/>
                                                <userId>team_ua</userId>
                                            </OrderIdUserIdDate>
                                            <!-- ...SNIP... -->
                                            <OrderIdUserIdDate>
                                                <accountId>9999999</accountId>
                                                <CountOfTNs>0</CountOfTNs>
                                                <lastModifiedDate>2014-02-25T16:02:39.021Z</lastModifiedDate>
                                                <OrderType>lidb</OrderType>
                                                <OrderDate>2014-02-25T16:02:39.021Z</OrderDate>
                                                <orderId>ba5b6297-139b-4430-aab0-9ff02c4362f4</orderId>
                                                <OrderStatus>FAILED</OrderStatus>
                                                <userId>team_ua</userId>
                                            </OrderIdUserIdDate>
                                        </ListOrderIdUserIdDate>
                                    </ResponseSelectWrapper>
                    404:
                        description: |
                            NOT FOUND
                            If any errors are found in the processing of the query string a 404 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored.
            post:
                description: |
                    Create a LIDB order to associate Calling Name Information with a TN or list of CountOfTNs
                    The key data elements in the submission are -
                        <table style="text-align: left; width: 80%;"
                         border="1" cellpadding="2" cellspacing="2">
                          <tbody>
                            <tr>
                              <td>TelephoneNumbers</td>
                              <td>A list of telephone numbers that will all assume the SubscriberInformation that is listed in the payload.  In an enterprise context it is not uncommon for all of the served telephone numbers to use the same string for the Subscriber Information.</td>
                            </tr>
                            <tr>
                              <td>SubscriberInformation</td>
                              <td>This is the field that is displayed to the user receiving the phone call from the Telephone numbers in the TelephoneNumberList</td>
                            </tr>
                            <tr>
                              <td>UseType</td>
                              <td>Can be RESIDENTIAL or BUSINESS.  The element is required.</td>
                            </tr>
                            <tr>
                              <td>Visibility</td>
                              <td>Can be PRIVATE or PUBLIC.   If it is tagged as PRIVATE then the data will be provided, but the display will not be provided on a standard phone call.  The element is required</td>
                            </tr>
                            <tr>
                              <td>CustomerOrderId</td>
                              <td>The Customer Order ID is an ID assigned by the account owner to provide a reference number for the Order.  The element is optional.</td>
                            </tr>
                          </tbody>
                        </table>
                body:
                    application/xml:
                        example: |
                            <LidbOrder>
                                <CustomerOrderId>[String]</CustomerOrderId>
                                <LidbTnGroups>
                                    <LidbTnGroup>
                                        <TelephoneNumbers>
                                            <TelephoneNumber>8045030097</TelephoneNumber>
                                            <TelephoneNumber>8045030098</TelephoneNumber>
                                        </TelephoneNumbers>
                                        <SubscriberInformation>Joes Garage</SubscriberInformation>
                                        <UseType>RESIDENTIAL</UseType>
                                        <Visibility>PUBLIC</Visibility>
                                    </LidbTnGroup>
                                    <LidbTnGroup>
                                        <TelephoneNumbers>
                                            <TelephoneNumber>8888595935</TelephoneNumber>
                                        </TelephoneNumbers>
                                        <SubscriberInformation>Joes Storage</SubscriberInformation>
                                        <UseType>RESIDENTIAL</UseType>
                                        <Visibility>PRIVATE</Visibility>
                                    </LidbTnGroup>
                                </LidbTnGroups>
                            </LidbOrder>
                responses:
                    201:
                        description: |
                            The 201 response indicates that an order has been created to monitor and manage the request to establish a LIDB CNAME record registered with the network.
                            The <b>location</b> header in the response contains a URL that refers to the created order, including an echo of the order as requested.
                            Errors in processing the request will be articulated in the ErrorList component of the response.
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <LidbOrderResponse>
                                        <LidbOrder>
                                            <orderId>1d863522-c9bf-430c-8e79-cc63cad04a1d</orderId>
                                            <CustomerOrderId>[String]</CustomerOrderId>
                                            <ProcessingStatus>RECEIVED</ProcessingStatus>
                                            <ErrorList>
                                              <Error>
                                                <TelephoneNumber>8888595935</TelephoneNumber>
                                                <Code>11020</Code>
                                                <Description>Cannot add LIDB to a telephone number that already has LIDB or is in process</Description>
                                              </Error>
                                            </ErrorList>
                                            <LidbTnGroups>
                                              <LidbTnGroup>
                                                <TelephoneNumbers>
                                                  <TelephoneNumber>8045030097</TelephoneNumber>
                                                  <TelephoneNumber>8045030098</TelephoneNumber>
                                                </TelephoneNumbers>
                                                <SubscriberInformation>Joes Garage</SubscriberInformation>
                                                <UseType>RESIDENTIAL</UseType>
                                                <Visibility>PUBLIC</Visibility>
                                              </LidbTnGroup>
                                              <LidbTnGroup>
                                                <TelephoneNumbers>
                                                  <TelephoneNumber>8888595935</TelephoneNumber>
                                                </TelephoneNumbers>
                                                <SubscriberInformation>Joes Storage</SubscriberInformation>
                                                <UseType>RESIDENTIAL</UseType>
                                                <Visibility>PRIVATE</Visibility>
                                              </LidbTnGroup>
                                            </LidbTnGroups>
                                        </LidbOrder>
                                    </LidbOrderResponse>
                    400:
                        description: |
                            Bad Request
                            A 400 Bad Request indicates that the processing of the request payload has detected a syntactic error that prevents further processing.  No order is created under these conditions, and the request must be corrected and re-submitted before an order can be created.
                            Error text and an error code will be provided in the ErrorList element.
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <LidbOrderResponse>
                                        <Status>
                                            <Code>400</Code>
                                            <Description>Validation Failed. Please check your input parameters.</Description>
                                        </Status>
                                        <ErrorList>
                                            <Error>
                                                <Code>11007</Code>
                                                <Description>No visibility supplied. Visibility must be one of the following - PUBLIC, PRIVATE</Description>
                                            </Error>
                                        </ErrorList>
                                        <LidbOrder>
                                            <LidbTnGroups>
                                              <LidbTnGroup>
                                                <TelephoneNumbers>
                                                  <TelephoneNumber>9199998830</TelephoneNumber>
                                                </TelephoneNumbers>
                                                <SubscriberInformation>Joes Garage</SubscriberInformation>
                                                <UseType>RESIDENTIAL</UseType>
                                              </LidbTnGroup>
                                            </LidbTnGroups>
                                        </LidbOrder>
                                    </LidbOrderResponse>
            /{lidbid}: 
                description: |
                    This API returns data about the specific LIDBs Order specified as the resource
                get:
                    description: |
                        Retrieve information about a specific Lidb Order identified as the resource.
                    responses:
                        200:
                            description: |
                                The descriptive payload for the Lidb Orders query provides a broad range of information about the Lidb Order identified in the URL.  Included amongst the information is:
                                <ul>
                                <li>ErrorList - the errors discovered with codes and explanations</li>
                                <li>various dates</li>
                                <li>ProcessingStatus(RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED) - the overall status of the order</li>
                                <li>LidbTnGroups - list of LidbTnGroup elements that contains list of TNs with SubscriberInformation, UseType(RESIDENTIAL or BUSINESS) and Visibility (PUBLIC or PRIVATE)</li>
                                </ul>
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <LidbOrder>
                                            <CustomerOrderId>testCustomerOrderId</CustomerOrderId>
                                            <orderId>255bda29-fc57-44e8-a6c2-59b45388c6d0</orderId>
                                            <OrderCreateDate>2014-05-28T14:46:21.724Z</OrderCreateDate>
                                            <ProcessingStatus>RECEIVED</ProcessingStatus>
                                            <CreatedByUser>jbm</CreatedByUser>
                                            <LastModifiedDate>2014-02-20T19:33:17.600Z</LastModifiedDate>
                                            <OrderCompleteDate>2014-02-20T19:33:17.600Z</OrderCompleteDate>
                                            <ErrorList/>
                                            <LidbTnGroups>
                                                <LidbTnGroup>
                                                    <TelephoneNumbers>
                                                        <TelephoneNumber>4082213311</TelephoneNumber>
                                                    </TelephoneNumbers>
                                                    <FullNumber>8042105618</FullNumber>
                                                    <SubscriberInformation>Fred</SubscriberInformation>
                                                    <UseType>BUSINESS</UseType>
                                                    <Visibility>PRIVATE</Visibility>
                                                </LidbTnGroup>
                                                <LidbTnGroup>
                                                    <TelephoneNumbers>
                                                        <TelephoneNumber>4082212850</TelephoneNumber>
                                                        <TelephoneNumber>4082213310</TelephoneNumber>
                                                    </TelephoneNumbers>
                                                    <FullNumber>8042105760</FullNumber>
                                                    <SubscriberInformation>Fred</SubscriberInformation>
                                                    <UseType>RESIDENTIAL</UseType>
                                                    <Visibility>PUBLIC</Visibility>
                                                </LidbTnGroup>
                                            </LidbTnGroups>
                                        </LidbOrder>
                        404:
                            description: NOT FOUND - the order id does not exist in the system
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <LidbOrderReportResponse>
                                            <ResponseStatus>
                                                <Description>The resource does not exist</Description>
                                            </ResponseStatus>
                                        </LidbOrderReportResponse>
                /history: 
                    description: |
                        The history API returns the various events that have impacted the specified LIDB order. 
                    get:
                        description: |
                            Retrieve the history information associated with an order
                        responses:    
                            200:
                                description: |
                                    The history payload is a set of history records, each of which contains:
                                        <table style="text-align: left; width: 80%;" border="1" cellpadding="2" cellspacing="2">
                                            <tbody>
                                                <tr>
                                                    <td>OrderModifiedDate</td>
                                                    <td>The date that the order history event happened</td>
                                                </tr>
                                                <tr>
                                                    <td>Status</td>
                                                    <td>The new state of the LIDB order - RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED </td>
                                                </tr>
                                                <tr>
                                                    <td>Note</td>
                                                    <td>A Note or additional information included with the state change </td>
                                               </tr>
                                               <tr>
                                                    <td>Author</td>
                                                    <td>The user id that implemented the state change</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                body: 
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <OrderHistoryWrapper>
                                                <OrderHistory>
                                                    <OrderDate>2014-05-20T14:21:43.937Z</OrderDate>
                                                    <Note>The Calling Name database update request has been received</Note>
                                                    <Author>jbm</Author>
                                                    <Status>RECEIVED</Status>
                                                </OrderHistory>
                                                <OrderHistory>
                                                    <OrderDate>2014-05-20T14:24:43.428Z</OrderDate>
                                                    <Note>
                                                        The Calling Name database update request is being processed by our 3rd party supplier
                                                    </Note>
                                                    <Author>jbm</Author>
                                                    <Status>PROCESSING</Status>
                                                </OrderHistory>
                                            </OrderHistoryWrapper>
        /lineOptionOrders: 
            description: | 
                <strong>The LineOptionsOrder endpoint will be deprecated Dec. 31 2016.  It has been replaced with the tnOptions order which provides the same functionality, with an improved level of tracking and management.</strong>
            post:
                description: |
                    This link is used for configuring multiple telephone numbers with specific attributes:<br/>
                    CNAM, NumberFormat, RPIDFormat, RewriteUser, CallForward, Protected and Sms.<br/>
                    There are some possible attribute values:
                    <ul>
                    <li> TelephoneNumber - [ 10digit ] </li>
                    <li> CallingNameDisplay - [ on | off | <i>unchanged</i> | <i>systemdefault</i> ] </li>
                    <li> NumberFormat - [ 10digit | 11digit | e164 | <i>unchanged</i> | <i>systemdefault</i> ] </li>
                    <li> RPIDFormat - [ 10digit | 11digit | e164 | <i>unchanged</i> | <i>systemdefault</i> ] </li>
                    <li> RewriteUser - [ string | <i>unchanged</i> | <i>systemdefault</i>] </li>
                    <li> CallForward - [ 10digit | <i>unchanged</i> | <i>systemdefault</i>] </li>
                    <li> Protected - [ true | false | <i>unchanged</i> | <i>systemdefault</i>] </li>
                    <li> Sms - [ on | off | <i>unchanged</i>] </li>
                    </ul>
                    Where:
                    <ul>
                    <li type="square"> <i>systemdefault</i> - implies that the element profile value should be removed so that the TN changes back to the default system behavior;</li>
                    <li type="square"> <i>unchanged</i> - the value should remain unchanged - implies a read before write model.</li>
                    <li type="square"><u>Leaving the element out of the payload is equivalent to <i>unchanged</i>.</u></li>
                    </ul>
                body:
                    application/xml:
                        example: | 
                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <LineOptionOrder>
                                    <TnLineOptions>
                                        <TelephoneNumber>5209072451</TelephoneNumber>
                                        <CallingNameDisplay>on</CallingNameDisplay>
                                        <NumberFormat>unchanged</NumberFormat>   
                                        <RPIDFormat>systemdefault</RPIDFormat>  
                                        <RewriteUser>Antonio</RewriteUser>   
                                        <CallForward>2033018394</CallForward>
                                        <Protected>true</Protected>
                                        <Sms>on</Sms>
                                    </TnLineOptions>
                                    <TnLineOptions>
                                        <!-- ...SNIP... -->
                                    </TnLineOptions>
                                        <!-- ...SNIP... -->
                                </LineOptionOrder>
                responses:
                    200:
                        description: |
                            There can be only CompletedNumbers in the returned body of response. It means that all telephone numbers have been successfully provisioned.
                            Also Errors can be present if telephone numbers didn't pass a validation.
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <LineOptionOrderResponse>
                                            <LineOptions>
                                                <AccountId>14</AccountId>
                                                <CompletedNumbers>
                                                    <TelephoneNumber>5209072451</TelephoneNumber>
                                                </CompletedNumbers>
                                                <Errors>
                                                    <Error>
                                                        <TelephoneNumber>2033018394</TelephoneNumber>
                                                        <ErrorCode>5005</ErrorCode>
                                                        <Description>Telephone Number Unavailable</Description>
                                                    </Error>
                                                </Errors>
                                            </LineOptions>
                                        </LineOptionOrderResponse>
                    400:
                        description: |
                            Possible errors in response: 
                            <li> 
                            <li> 50xx "Telephone number is invalid."  </li>
                            <li> 50xx "Telephone number is not available on the system."    </li>
                            <li> 50xx "Duplicate telephone number."    </li>
                            <li> 50xx "Telephone number is required."       </li>
                            <li> 50xx "Telephone number is not available."    </li>
                            <li> 50xx "There is an issue with telephone number. Please contact Customer Service."    </li>
                            <li> 50xx "There are no valid telephone numbers."     </li>
                            <li> 50xx "Account has no 'CNAM'/ 'CallForward' product feature."      </li>
                            <li> 50xx "CallingNameDisplay '--' is invalid. Valid values are: on, off, unchanged, systemdefault." </li>
                            <li> 50xx "Call Forwarding number '--' is not a valid 10-digit telephone number."     </li>
                            <li> 50xx "Number Format '--' is invalid."     </li>
                            <li> 50xx "Rewrite User '--' is invalid."     </li>
                            <li> 50xx "RPID Format '--' is invalid."      </li>
                            <li> 13xxx "Protected attribute '--' is invalid. Valid values are: true,  false,unchanged, systemdefault." </li>
                            <li> 13xxx "Toll free numbers are not candidates for Protected status." </li>
                            <li> 13xxx "Non-Tier-0 numbers are not candidates for Protected status." </li>
                            </ul>
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <LineOptionOrderResponse>
                                            <ResponseStatus>
                                                <Description>Validation Failed. Please check your input parameters.</Description>
                                            </ResponseStatus>
                                            <LineOptions>
                                                <AccountId>14</AccountId>
                                                <Errors>
                                                    <Error>
                                                        <TelephoneNumber>5209072451</TelephoneNumber>
                                                        <ErrorCode>5072</ErrorCode>
                                                        <Description>Duplicate telephone number</Description>
                                                    </Error>
                                                    <Error>
                                                        <TelephoneNumber>2033018394</TelephoneNumber>
                                                        <ErrorCode>5005</ErrorCode>
                                                        <Description>Telephone Number Unavailable</Description>
                                                    </Error>
                                                </Errors>
                                            </LineOptions>
                                        </LineOptionOrderResponse>
                    401: 
                        description: |
                            If customer doesn't have a permissions for this link (required role: ROLE_API_CNAMLIDB), this error can appear                    
        /lnpchecker: 
            description: | 
                The lnpchecker resource performs a portability analysis for a set ot TNs, returning information about the coverage and losing carrier characteristics of the TNs allowing a better assessment of which port requests to submit.
            post:
                description: |
                    Request portability information on a set of TNs 
                queryParameters:
                    fullCheck:
                        type: string
                        enum: [true, false, onnetportability, offnetportability]
                        example: onnetportability
                        repeat: false
                        default: "false"
                        required: false
                        description: | 
                            <table>
                                <tr>
                                    <th>parameter value</th>
                                    <th>description</th>
                                </tr>
                                <tr>
                                    <td>true</td>
                                    <td>additional information will be provided on the losing carriers associated with the listed numbers</td>
                                </tr>
                                <tr>
                                    <td>false</td>
                                    <td>return only rate center information</td>
                                </tr>
                                <tr>
                                    <td>onnetportability</td>
                                    <td>identical in meaning to <i>&quot;true&quot;</i> value</td>
                                </tr>
                                <tr>
                                    <td>offnetportability</td>
                                    <td>in addition to on-net information return off-net port information in <i>&lt;PartnerSupportedRateCenters&gt;</i> element with Partner/Vendor that the port will be supported on. 
                                    Contains a list of the TNs that are supported in partner rate centers, and for which we will manually execute a port if requested
                                    </td>
                                </tr>
                            </table>
                body:
                    application/xml:
                        example: |
                            <NumberPortabilityRequest>
                               <TnList>   <!-- the list of the TNs to check for Portability -->
                                  <Tn>4109255199</Tn>
                                  <Tn>4109235436</Tn>
                                  <Tn>4104685864</Tn>
                                  <Tn>4103431313</Tn>
                                  <Tn>4103154313</Tn>
                                  <Tn>4103431561</Tn>
                               </TnList>
                            </NumberPortabilityRequest>
                responses:
                    200:
                        description: A successful check has been performed.
                        body: 
                            application/xml:
                                example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <NumberPortabilityResponse>
                                            <PortType>AUTOMATED</PortType>
                                            <SupportedRateCenters />
                                            <UnsupportedRateCenters>
                                                <RateCenterGroup>
                                                    <RateCenter>BALTIMORE</RateCenter>
                                                    <City>BALTIMORE</City>
                                                    <State>MD</State>
                                                    <LATA>238</LATA>
                                                    <TnList>
                                                        <Tn>4109255199</Tn>
                                                        <Tn>4104685864</Tn>
                                                    </TnList>
                                                </RateCenterGroup>
                                                <RateCenterGroup>
                                                    <RateCenter>SPARKSGLNC</RateCenter>
                                                    <City>SPARKS GLENCOE</City>
                                                    <State>MD</State>
                                                    <LATA>238</LATA>
                                                    <TnList>
                                                        <Tn>4103431313</Tn>
                                                        <Tn>4103431561</Tn>
                                                    </TnList>
                                                </RateCenterGroup>
                                            </UnsupportedRateCenters>
                                            <PartnerSupportedRateCenters>                <!-- Only available for fullCheck=offnetportability -->
                                                <RateCenterGroup>
                                                    <Vendor>Vendor 1</Vendor>
                                                    <RateCenter>FT COLLINS</RateCenter>
                                                    <City>FORT COLLINS</City>
                                                    <State>CO</State>
                                                    <LATA>656</LATA>
                                                    <Tiers>
                                                        <Tier>1</Tier>
                                                    </Tiers>
                                                    <TnList>
                                                        <Tn>4109235436</Tn>
                                                    </TnList>
                                                </RateCenterGroup>
                                            </PartnerSupportedRateCenters>
                                            <SupportedLosingCarriers>
                                                <LosingCarrierTnList>
                                                    <LosingCarrierSPID>9998</LosingCarrierSPID>
                                                    <LosingCarrierName>Test Losing Carrier L3</LosingCarrierName>
                                                    <LosingCarrierIsWireless>false</LosingCarrierIsWireless>
                                                    <LosingCarrierAccountNumberRequired>false</LosingCarrierAccountNumberRequired>
                                                    <LosingCarrierMinimumPortingInterval>5</LosingCarrierMinimumPortingInterval>
                                                    <TnList>
                                                        <Tn>4109255199</Tn>
                                                        <Tn>4104685864</Tn>
                                                        <Tn>4103431313</Tn>
                                                        <Tn>4103431561</Tn>
                                                    </TnList>
                                                </LosingCarrierTnList>
                                            </SupportedLosingCarriers>
                                            <UnsupportedLosingCarriers />
                                        </NumberPortabilityResponse>
                    400:
                        description: | 
                            Bad Response - there were errors in evaluating the body of the request
                            Potential errors include: <ul>
                            <li> Un-supported losing carrier.
                            <li> Unable to provide coverage.
                            <li> Telephone number is already being processed on another order.
                            <li> Rate Center Not Present in Bandwidth Dashboard.
                            <li> Account not enabled for LNP 
                            </ul> 
                        body: 
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <NumberPortabilityResponse>
                                        <Errors>
                                            <Code>7201</Code>
                                            <Description>61746052083 is not a valid NANPA telephone number.</Description>
                                        </Errors>
                                        <Errors>
                                            <Code>7201</Code>
                                            <Description>61746052082 is not a valid NANPA telephone number.</Description>
                                        </Errors>
                                    </NumberPortabilityResponse>
            #  The resource tree that follows the root can be placed here.
            # values in curly braces will appear as fillable parameters in the URL
            # remember to fix these / delete these until the files are really there.
        /lsrorders: 
            description: | 
                <p>The <b>lsrorders</b> resource is used to create, modify, and monitor API requests to remove telephone numbers from the Bandwidth network.  This API call is intended for use by carriers that want to automate the "Port-out" process with Bandwidth, rather than manually request the removal or "port-out" of each telephone number via a GUI or a Ticket.</p>
                <p>This API call uses an asynchronous model that is common in the Bandwidth Dashboard API, where an "order" is created that is then subsequently used to track the progress of the request to completion.  This in somewhat analogous to the "laundry ticket" model, where the initial transaction is the submission of the laundry and the receipt of a ticket, and all other steps in the overall transaction use the identifier on the ticket to monitor and manage the transaction.</p>
                <p>In this case a POST is made to the /lsrorders resource that describes the request to port out the number.  If the POST has no syntactic errors, such as a telephone number with less than 10 digits, an ID will be returned that is used to monitor and manage the port-out request.  The POST returns both a descriptive payload that reflects the request and includes the identifier, as well as a Location header that contains a valid GET API call that can be used to retrieve the current state of the LSR / Port-out request.  In general the flow of events is much like...</p>
                <pre>
                        Carrier   -----&gt;    POST        -----&gt;      Bandwidth - the initial request
                                 &lt;-----     200 OK     &lt;-----                 - the response with a payload 
                                                                                and a Location header
                <br>
                        -- some subsequent event happens... an error, or the completion of the request --
                <br>
                        Carrier &lt;----- Notification Callback &lt;----- Bandwidth - if configured, Bandwidth 
                                                                                notifies the carrier of all
                                                                                events that impact the order
                                                                              - see the /subscriptions and 
                                                                                /callbacks API descriptions
                        Carrier   -----&gt;    GET(id)     -----&gt;      Bandwidth - the carrier requests the 
                                                                                complete status of the order
                                                                                using the ID
                                 &lt;-----     200 OK     &lt;-----                 - the response with a descriptive
                                                                                payload
                <br>
                The above notifications continue until the LSR is complete or cancelled.
                </pre>
                <p>There is a complete list of elements in payload of the POSTed request below in the documentation of the POST, but in summary the LSR request includes
                <ul>
                <li> a list of telephone numbers
                <li> information about the subscriber
                <li> tracking information such as a PON and a Customer Order ID
                <li> winning carrier information such as the SPID
                <li> date information
                </ul></p>
                <p>This API supports GET for retrieving order detail and status informantion, POST for creating a new LSR Order, and PUT for changing the details of an LSR in flight.</p>
                <h4> Errors </h4>
                There are a number of errors that can happen at various stages of the process. These are listed here for convenience, and can be found in the error reference documentation <a href="https://test.dashboard.bandwidth.com/apidocs/iris-error-page.html">here.</a>
                <table>
                <tr><th>Error code</th><th>Error message</th><th>Appearance</th></tr>
                <tr><td>    5008    </td><td>    All telephone numbers specified are invalid    </td><td>    POST    </td></tr>
                <tr><td>    7104    </td><td>    Subscriber information is required    </td><td>    POST/PUT    </td></tr>
                <tr><td>    7105    </td><td>    The subscriber name is required    </td><td>    POST/PUT    </td></tr>
                <tr><td>    7107    </td><td>    The service address is required    </td><td>    POST/PUT    </td></tr>
                <tr><td>    7108    </td><td>    The service address house number is required    </td><td>    POST/PUT    </td></tr>
                <tr><td>    7109    </td><td>    The service address street name is required    </td><td>    POST/PUT    </td></tr>
                <tr><td>    7110    </td><td>    The service address city is required    </td><td>    POST/PUT    </td></tr>
                <tr><td>    7111    </td><td>    The service address state code is required    </td><td>    POST/PUT    </td></tr>
                <tr><td>    7112    </td><td>    The service address zip code is required    </td><td>    POST/PUT    </td></tr>
                <tr><td>    7120    </td><td>    The PON is required    </td><td>    POST    </td></tr>
                <tr><td>    7203    </td><td>    The billing telephone number (BTN) is invalid    </td><td>    POST/PUT    </td></tr>
                <tr><td>    7208    </td><td>    The requested FOC date cannot be in the past    </td><td>    POST/PUT    </td></tr>
                <tr><td>    7214    </td><td>    ZIP code is invalid    </td><td>    POST/PUT    </td></tr>
                <tr><td>    7318    </td><td>    Customer order ID is invalid. Only alphanumeric values, dashes and spaces are allowed. Max length is 40 characters.    </td><td>    POST/PUT    </td></tr>
                <tr><td>    7324    </td><td>    The business name is too long. The business name should not be longer than 25 characters.    </td><td>    POST/PUT    </td></tr>
                <tr><td>    7354    </td><td>    Middle initial is too long. Middle initial should not be longer than 1 character.    </td><td>    POST/PUT    </td></tr>
                <tr><td>    7355    </td><td>    First name is too long. First name should not be longer than 25 characters.    </td><td>    POST/PUT    </td></tr>
                <tr><td>    7356    </td><td>    Last name is too long. Last name should not be longer than 25 characters.    </td><td>    POST/PUT    </td></tr>
                <tr><td>    7395    </td><td>    Unsupported state code %s.    </td><td>    POST/PUT    </td></tr>
                <tr><td>    7510    </td><td>    Required Account Code missing    </td><td>    PROCESSING    </td></tr>
                <tr><td>    7511    </td><td>    Invalid Account Code    </td><td>    PROCESSING    </td></tr>
                <tr><td>    7512    </td><td>    Required PIN missing    </td><td>    PROCESSING    </td></tr>
                <tr><td>    7513    </td><td>    PIN Invalid    </td><td>    PROCESSING    </td></tr>
                <tr><td>    7514    </td><td>    Required ZIP Code missing    </td><td>    PROCESSING    </td></tr>
                <tr><td>    7515    </td><td>    Invalid ZIP Code    </td><td>    PROCESSING    </td></tr>
                <tr><td>    7516    </td><td>    Telephone Number not recognized or invalid for this account    </td><td>    PROCESSING    </td></tr>
                <tr><td>    7517    </td><td>    Too many Telephone numbers in this request    </td><td>    PROCESSING    </td></tr>
                <tr><td>    7518    </td><td>    Telephone Number Not Active    </td><td>    PROCESSING    </td></tr>
                <tr><td>    7519    </td><td>    Customer info does not match    </td><td>    PROCESSING    </td></tr>
                <tr><td>    7598    </td><td>    Invalid Request    </td><td>    PROCESSING    </td></tr>
                <tr><td>    7599    </td><td>    Fatal Error in Processing    </td><td>    PROCESSING    </td></tr>
                <tr><td>    7999    </td><td>    An internal error has occurred. Please contact support if this issue is not resolved in 1 business day    </td><td>    PROCESSING    </td></tr>
                <tr><td>    13522    </td><td>    The count of telephone numbers in order exceeds the maximum size of %d    </td><td>    POST    </td></tr>
                <tr><td>    17000    </td><td>    Lsr submission order payload required.      </td><td>    POST/PUT    </td></tr>
                <tr><td>    17002    </td><td>    Order contains invalid tns %s.    </td><td>    POST    </td></tr>
                <tr><td>    17003    </td><td>    Order contains empty tn list or its not present.     </td><td>    POST    </td></tr>
                <tr><td>    17004    </td><td>    Incorrect pon specified. It must be up to 25 character long and could not contain special characters other than -_#    </td><td>    POST    </td></tr>
                <tr><td>    17005    </td><td>    Toll-free telephone numbers can not be present in the LSR order.    </td><td>    POST    </td></tr>
                <tr><td>    17006    </td><td>    Account number is incorrect. It should be alphanumeric and no more than 32 characters long.    </td><td>    POST/PUT    </td></tr>
                <tr><td>    17007    </td><td>    Pin number is incorrect. It should be alphanumeric and no more than 10 characters long.    </td><td>    POST/PUT    </td></tr>
                <tr><td>    17008    </td><td>    An internal error has occurred. Please contact support if this issue is not resolved in 1 business day    </td><td>    PROCESSING    </td></tr>
                <tr><td>    17009    </td><td>    Lsr order contain duplicate telephone numbers %s    </td><td>    POST    </td></tr>
                <tr><td>    17010    </td><td>    Business name is required for business SubscriberType.    </td><td>    POST/PUT    </td></tr>
                <tr><td>    17011    </td><td>    Last name should be empty for business SubscriberType.    </td><td>    POST/PUT    </td></tr>
                <tr><td>    17012    </td><td>    Last name is required for residential SubscriberType.    </td><td>    POST/PUT    </td></tr>
                <tr><td>    17013    </td><td>    Requested date format incorrect. Date should be in yyyy-mm-dd format. (example 2015-03-24).    </td><td>    POST/PUT    </td></tr>
                <tr><td>    17017    </td><td>    Lsr order failed account SPID not configured.    </td><td>    PUT/PROCESSING    </td></tr>
                <tr><td>    17018    </td><td>    Lsr order will be cancelled. All other submitted changes are ignored.    </td><td>    PUT/PROCESSING    </td></tr>
                <tr><td>    17019    </td><td>    Requested FOC date cannot be on holiday or weekend.    </td><td>    POST/PUT    </td></tr>
                <tr><td>    17020    </td><td>    Account SPID [%s] does not match with SPID specified in the Lsr order [%s].    </td><td>    POST/PUT    </td></tr>
                <tr><td>    17021    </td><td>    Incorrect SPID [%s] specified in the order. It should be alphanumeric and no more than 4 characters long.    </td><td>    POST/PUT    </td></tr>
                <tr><td>    17022    </td><td>    Account %d requires a SPID to be provided with each order.    </td><td>    POST/PUT    </td></tr>
                <tr><td>    17023    </td><td>    The authorizing person contact is required for lsr orders.    </td><td>    POST/PUT    </td></tr>
                <tr><td>    17024    </td><td>    The authorizing person contact is too long. It should be not longer than %s characters.    </td><td>    POST/PUT    </td></tr>
                <tr><td>    17025    </td><td>    %s field%s cannot be modified.    </td><td>    PUT    </td></tr>
                <tr><td>    17025    </td><td>    OrderStatus cannot be changed to %s. Only cancelled value allowed.    </td><td>    PUT    </td></tr>
                <tr><td>    17027    </td><td>    Account %d has no configured SPID.  Please contact support for further assistance.    </td><td>    POST/PUT    </td></tr>
                <tr><td>    17028    </td><td>    Minimum FOC date for a port of greater than %1$d telephone numbers is %2$d days    </td><td>    POST/PUT    </td></tr>
                <tr><td>    17029    </td><td>    Can't modify LSR order, because it contains ported numbers.    </td><td>    PROCESSING    </td></tr>
                <tr><td>    17030    </td><td>    LSR order completion failed, some numbers are not activated: %s.    </td><td>    PROCESSING    </td></tr>
                <tr><td>    17031    </td><td>    Order was failed, because some telephone numbers have empty SPID [%s]    </td><td>    PROCESSING    </td></tr>
                <tr><td>  17032 </td><td> The Specified PON is already present in our system. Please provide an alternative. </td><td> POST  </td></tr>
                <tr><td>  17033 </td><td> The PON specified in the LSR order overlaps with existing order. Please resubmit the order with another PON. </td><td> POST  </td></tr>
                <tr><td>  17034 </td><td> OverrideValidation flag can be supped only in EXCEPTION status. </td><td> PUT  </td></tr>
                <tr><td>  17035 </td><td> Supp is not allowed for this LSR. Please contact support if this issue is not resolved in 1 business day. </td><td> PUT  </td></tr>
                </table>
                <p/>
                POST - errors occur during LSR creation.<br>
                PUT  - errors occur during LSR supp/cancel.<br>
                PROCESSING -  errors occur while LSR processing. These errors are persistent and can be retrieved using GET requests (ex. by LSR ID).
                <p/> * Error messages can differ from described depending on context of occurrence.
            get:
                description: | 
                    Retrieves a list of lsrorders.  Various query parameters can be used to filter the list of LSR Orders as documented below.
                queryParameters:
                    status:
                        description: The status of the Lsr order being searched for.
                        type: string
                        example: EXCEPTION
                        enum: [PENDING, FOC, EXCEPTION, CANCELED, COMPLETE, FAILED]
                        repeat: true
                    tn:
                        description: A Telephone Number (TN) that is referenced in the order.
                        type: string
                        example: 9199918388
                    pon:
                        description: The PON that is referenced in the Lsr order.
                        type: string
                        example: Available
                    customerOrderId:
                        description: The Customer Order ID is an ID assigned by the account owner to provide a reference number for the Port.
                        type: string
                        example: ABCCorp12345
                    orderIdFragment:
                        description: This search parameter represents the internal Bandwidth Dashboard ID that has been assigned to the Lsr Order.  This parameter is the first few characters of the internal ID - the entire ID does not need to be specified.
                        type: string
                        example: ed1c0bed-e2
                    createdDateFrom:
                        description: Checks the order's creation date against this value. Orders that have a creation date after this date will be included. Format is yyyy-MM-dd
                        type: date
                        example: |
                          2015-10-22
                    createdDateTo:
                        description: Checks the order's creation date against this value. Orders that have a creation date before this date will be included. Format is yyyy-MM-dd
                        type: date
                        example: |
                          2015-10-25
                responses:
                    200:
                        description: the lsrorders have been successfully retrieved and displayed in the payload.
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <LsrOrders>
                                        <TotalCount>5</TotalCount>
                                        <LsrOrderSummary>
                                            <accountId>9999999</accountId>
                                            <CountOfTNs>2</CountOfTNs>
                                            <CustomerOrderId>FineCustomerid</CustomerOrderId>
                                            <userId>team_ua</userId>
                                            <lastModifiedDate>2015-03-02T09:10:16.193Z</lastModifiedDate>
                                            <OrderType>lsr</OrderType>
                                            <OrderDate>2015-03-25T11:44:42.941Z</OrderDate>
                                            <OrderStatus>PENDING</OrderStatus>
                                            <ActualFocDate>2015-03-25</ActualFocDate>
                                            <BillingTelephoneNumber>2526795000</BillingTelephoneNumber>
                                            <CreatedByUser>lsrOnlyUser</CreatedByUser>
                                            <OrderId>7d644c88-ef23-4307-96ab-20253666d0c7</OrderId>
                                            <Pon>ATT-011515-324234</Pon>
                                            <PonVersion>0</PonVersion>
                                            <RequestedFocDate>2015-11-15</RequestedFocDate>
                                        </LsrOrderSummary>
                                        <!-- SNIP -->
                                        <LsrOrderSummary>
                                            <accountId>9999999</accountId>
                                            <CountOfTNs>2</CountOfTNs>
                                            <CustomerOrderId>MyId5</CustomerOrderId>
                                            <lastModifiedDate>2015-03-03T14:07:19.926Z</lastModifiedDate>
                                            <OrderType>lsr</OrderType>
                                            <OrderDate>2015-03-25T11:44:42.941Z</OrderDate>
                                            <OrderStatus>FAILED</OrderStatus>
                                            <Errors>
                                                <Error>
                                                    <Code>17008</Code>
                                                    <Description>
                                                        FOC date cannot fall on a holiday
                                                    </Description>
                                                </Error>
                                            </Errors>
                                            <ActualFocDate>2015-03-25</ActualFocDate>
                                            <BillingTelephoneNumber>2526795000</BillingTelephoneNumber>
                                            <CreatedByUser>lsrOnlyUser</CreatedByUser>
                                            <OrderId>00cf7e08-cab0-4515-9a77-2d0a7da09415</OrderId>
                                            <Pon>testpon1002</Pon>
                                            <PonVersion>0</PonVersion>
                                            <RequestedFocDate>2015-11-15</RequestedFocDate>
                                        </LsrOrderSummary>
                                    </LsrOrders>
                    404:
                        description: Not Found.  If any errors are found in the processing of the query string a 404 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored.
            post:
                description: |
                    A POST creates a lsrorder request to initiate a port-out action.<br>
                    The payload fields are described below...<br>
                    <table style="text-align: left; width: 80%;"
                         border="1" cellpadding="2" cellspacing="2">
                          <tbody>
                            <tr>
                              <td>Pon</td>
                              <td>The Pon is customer specified order indentifier field. Allowed alphanumeric and "#","-","_". Up to 25 characters long. (required).</td>
                            </tr>
                            <tr>
                              <td>CustomerOrderId</td>
                              <td>The CustomerOrderId is customer specified order indentifier field. Allowed alphanumeric, spaces and dashes. Up to 40 characters long. (optional).</td>
                            </tr>
                            <tr>
                              <td>SPID</td>
                              <td>Identifier used in porting process. If account is no multi-SPID option - default with account value, otherwise value is required. Up to 4 characters long. (required)</td>
                            </tr>
                            <tr>
                              <td>BillingTelephoneNumber</td>
                              <td>Non-tollfree 10 digit phone number (optional).</td>
                            </tr>
                            <tr>
                              <td>RequestedFocDate</td>
                              <td>optional (next day if not specified).</td>
                            </tr>
                            <tr>
                              <td>SubscriberType</td>
                              <td>Subscriber type. BUSINESS | RESEDENTIAL (optional) (RESEDENTIAL if not specified).</td>
                            </tr>
                            <tr>
                              <td>BusinessName</td>
                              <td>Subscriber business name for BUSINESS SubscriberType. Up to 25 characters long. (required BusinessName or LastName).</td>
                            </tr>
                            <tr>
                              <td>LastName</td>
                              <td>Subscriber last name for RESEDENTIAL SubscriberType. Up to 25 characters long. (required BusinessName or LastName).</td>
                            </tr>
                            <tr>
                              <td>FirstName</td>
                              <td>Subscriber first name for RESEDENTIAL SubscriberType. Up to 25 characters long. (optional).</td>
                            </tr>
                            <tr>
                              <td>MiddleInitial</td>
                              <td>Subscriber middle initial for RESEDENTIAL SubscriberType. 1 character (optional).</td>
                            </tr>                
                            <tr>
                              <td>AccountNumber</td>
                              <td>AccountNumber.  Alphanumeric, up to 32 characters. (optional).</td>
                            </tr>                
                            <tr>
                              <td>PinNumber</td>
                              <td>PinNumber. Alphanumeric, up to 10 characters. (optional).</td>
                            </tr>
                            <tr>
                              <td>AuthorizingPerson</td>
                              <td>AuthorizingPerson. Alphanumeric, up to 100 characters (required).</td>
                            </tr>
                            <tr>
                              <td>HousePrefix</td>
                              <td>HousePrefix. Alphanumeric, up to 6 characters.</td>
                            </tr>
                            <tr>
                              <td>HouseNumber</td>
                              <td>HouseNumber. Alphanumeric, up to 45 characters  (required).</td>
                            </tr>
                            <tr>
                              <td>HouseSuffix</td>
                              <td>HouseSuffix. Alphanumeric, up to 45 characters.</td>
                            </tr>
                            <tr>
                              <td>PreDirectional</td>
                              <td>PreDirectional. Alphanumeric, up to 2 characters.</td>
                            </tr>
                            <tr>
                              <td>StreetName</td>
                              <td>StreetName. Alphanumeric, up to 200 characters  (required).</td>
                            </tr>
                            <tr>
                              <td>StreetSuffix</td>
                              <td>StreetSuffix. Alphanumeric, up to 45 characters.</td>
                            </tr>
                            <tr>
                              <td>PostDirectional</td>
                              <td>PostDirectional. Alphanumeric, up to 2 characters.</td>
                            </tr>
                            <tr>
                              <td>AddressLine2</td>
                              <td>AddressLine2. Alphanumeric, up to 200 characters.</td>
                            </tr>
                            <tr>
                              <td>County</td>
                              <td>County. Alphanumeric, up to 45 characters.</td>
                            </tr>
                            <tr>
                              <td>City</td>
                              <td>City. Alphanumeric, up to 100 characters  (required).</td>
                            </tr>
                            <tr>
                              <td>StateCode</td>
                              <td>StateCode. Alphanumeric, 2 characters  (required).</td>
                            </tr>
                            <tr>
                              <td>Zip</td>
                              <td>Zip code. Allowed formats: 5 numbers, 5+4 or Canadian  (required).</td>
                            </tr>
                            <tr>
                              <td>ListOfTelephoneNumbers</td>
                              <td>List of tns to be processed  (required).</td>
                            </tr>  
                          </tbody>
                        </table>
                body:
                    application/xml:
                        example: |
                              <LsrOrder>
                                <!-- By customer. Alphanumeric and "#","-","_". Up to 25 character long. (required) -->
                                <Pon>ATT-011515-324234</Pon>
                                <!-- By customer. Alphanumeric and " ","-". Up to 40 character long. (optional) -->
                                <CustomerOrderId>FineCustomerid</CustomerOrderId> 
                                <!-- By customer. Alphanumeric. Up to 4 character long. (required if account value "mult") -->
                                <SPID>123C</SPID> 
                                <!-- Non-toll-free btn (optional) -->
                                <BillingTelephoneNumber>9192381468</BillingTelephoneNumber>
                                <!-- Requested date (not past, optional, default next day) -->  
                                <RequestedFocDate>2015-11-15</RequestedFocDate>
                                <AuthorizingPerson>Jim Hopkins</AuthorizingPerson>
                                <Subscriber>
                                    <!--Type of the subscriber. BUSINESS | RESEDENTIAL (optional) (RESEDENTIAL if not specified)-->
                                    <SubscriberType>BUSINESS</SubscriberType> 
                                    <!-- Up to 25 character long (required) -->  
                                    <BusinessName>BusinessName</BusinessName>     
                                    <ServiceAddress>
                                        <!-- HouseNumber up to 45 characters (required) -->
                                        <HouseNumber>11</HouseNumber>
                                        <!-- StreetName up to 200 characters (required) -->
                                        <StreetName>Park</StreetName>
                                        <!-- StreetSuffix  up to 45 characters (optional) -->
                                        <StreetSuffix>Ave</StreetSuffix>
                                        <!-- City  up to 100 characters (required) -->
                                        <City>New York</City>
                                        <!-- StateCode 2 characters (required) -->
                                        <StateCode>NY</StateCode>
                                        <!-- ZipCode 5 num or 5+4 num (required) -->
                                        <Zip>90025</Zip>
                                    </ServiceAddress>
                                    <!-- Alphanumeric up to 32 character long (optional) -->
                                    <AccountNumber>123463</AccountNumber>
                                    <!-- Alphanumeric up to 10 character long (optional) --> 
                                    <PinNumber>1231</PinNumber> 
                                </Subscriber>
                                <!-- Toll-free number not allowed -->
                                <ListOfTelephoneNumbers>  
                                    <TelephoneNumber>9192381468</TelephoneNumber> 
                                    <TelephoneNumber>9192381467</TelephoneNumber>
                                </ListOfTelephoneNumbers>
                              </LsrOrder>
                responses:
                    201:
                        description: The 201 response indicates that lsrorder request has been successfully created.
                        body:
                            application/xml:
                                example: |
                                    <LsrOrderResponse>
                                        <LsrOrder>
                                            <OrderId>afce454a-4e89-4753-9f58-a442ebc7b142</OrderId>
                                            <CustomerOrderId>FineCustomerid</CustomerOrderId>
                                            <LastModifiedBy>team_ua</LastModifiedBy>
                                            <OrderCreateDate>2015-02-06T12:57:45.607Z</OrderCreateDate>
                                            <PeerId>0</PeerId>
                                            <AccountId>9999999</AccountId>
                                            <SPID>123C</SPID>
                                            <LastModifiedDate>2015-02-09T13:07:57.286Z</LastModifiedDate>
                                            <SiteId>0</SiteId>
                                            <CreatedByUser>team_ua</CreatedByUser>
                                            <OrderStatus>PENDING</OrderStatus>
                                            <BillingTelephoneNumber>9192381468</BillingTelephoneNumber>
                                            <Pon>ATT-011515-324234</Pon>
                                            <PonVersion>8</PonVersion>
                                            <RequestedFocDate>2015-02-25 00:00:00</RequestedFocDate>
                                            <AuthorizingPerson>Jim Hopkins</AuthorizingPerson>
                                            <OverrideValidation>false</OverrideValidation>
                                            <Subscriber>
                                                <SubscriberType>BUSINESS</SubscriberType>
                                                <BusinessName>BusinessName</BusinessName>
                                                <AccountNumber>123463</AccountNumber>
                                                <PinNumber>1231</PinNumber>
                                                <ServiceAddress>
                                                    <HouseNumber>11</HouseNumber>
                                                    <StreetName>Park</StreetName>
                                                    <StreetSuffix>Ave</StreetSuffix>
                                                    <City>New York</City>
                                                    <StateCode>NY</StateCode>
                                                    <Zip>90025</Zip>
                                                    <Country>United States</Country>
                                                </ServiceAddress>
                                            </Subscriber>
                                            <ListOfTelephoneNumbers>
                                                <TelephoneNumber>9192381468</TelephoneNumber>
                                                <TelephoneNumber>9192381467</TelephoneNumber>
                                                <TelephoneNumber>9192381469</TelephoneNumber>
                                            </ListOfTelephoneNumbers>
                                        </LsrOrder>
                                    </LsrOrderResponse>
                    400:
                        description: Bad request shows that lsrorder request does not pass validation. Fror more info see LsrOrderErrors section in response.
                        body:
                            application/xml:
                                example: |
                                      <LsrOrderResponse>
                                        <ResponseStatus>
                                            <ErrorCode>400</ErrorCode>
                                            <Description>Lsr order doesn't pass validation. Please check your input parameters.</Description>
                                        </ResponseStatus>
                                        <LsrOrderErrors>
                                            <LsrOrderError>
                                                <Code>7324</Code>
                                                <Description>The business name is too long. The business name should not be longer than 25 characters.</Description>
                                            </LsrOrderError>
                                            <LsrOrderError>
                                                <Code>7318</Code>
                                                <Description>Customer order ID is invalid. Only alphanumeric values, dashes and spaces are allowed. Max length is 40 characters.</Description>
                                            </LsrOrderError>
                                            <LsrOrderError>
                                                <Code>7203</Code>
                                                <Description>The billing telephone number (BTN) is invalid</Description>
                                            </LsrOrderError>
                                            <LsrOrderError>
                                                <Code>16005</Code>
                                                <Description>Toll-free telephone numbers can be present in the lsr order.</Description>
                                            </LsrOrderError>
                                            <LsrOrderError>
                                                <Code>16009</Code>
                                                <Description>Lsr order contain duplicate telephone numbers: [9192381468, 9192381468]</Description>
                                            </LsrOrderError>
                                            <LsrOrderError>
                                                <Code>16002</Code>
                                                <Description>Order contains invalid tns: [8882381468].</Description>
                                            </LsrOrderError>
                                        </LsrOrderErrors>
                                        <LsrOrder>
                                            <CustomerOrderId>WrongCustomerOrderIdLogerThan40AndContains$%SpecSimbols</CustomerOrderId>
                                            <LastModifiedBy>team_ua</LastModifiedBy>
                                            <OrderCreateDate>2015-02-06T12:57:45.607Z</OrderCreateDate>
                                            <AccountId>0</AccountId>
                                            <CreatedByUser>team_ua</CreatedByUser>
                                            <OrderStatus>FAILED</OrderStatus>
                                            <BillingTelephoneNumber>919238466</BillingTelephoneNumber>
                                            <Pon>ATT-011515-324234%$</Pon>
                                            <AuthorizingPerson>Jim Hopkins</AuthorizingPerson>
                                            <Subscriber>
                                                <SubscriberType>BUSINESS</SubscriberType>
                                                <BusinessName>LongerThan25CharacterBusinessName</BusinessName>
                                                <AccountNumber>123463</AccountNumber>
                                                <PinNumber>1231</PinNumber>
                                                <ServiceAddress>
                                                    <HouseNumber>11</HouseNumber>
                                                    <StreetName>Park</StreetName>
                                                    <StreetSuffix>Ave</StreetSuffix>
                                                    <City>New York</City>
                                                    <StateCode>NY</StateCode>
                                                    <Zip>90025</Zip>
                                                    <Country>United States</Country>
                                                </ServiceAddress>
                                            </Subscriber>
                                            <ListOfTelephoneNumbers>
                                                <TelephoneNumber>9192381468</TelephoneNumber>
                                                <TelephoneNumber>9192381468</TelephoneNumber>
                                                <TelephoneNumber>9192381468</TelephoneNumber>
                                            </ListOfTelephoneNumbers>
                                        </LsrOrder>
                                      </LsrOrderResponse>
            /{orderid}: 
                description: |
                    This resource allows retrieval and updating information associated with the lsr by its ID.<br/>
                    Modifiable lsr order fields:
                    <ul>
                        <li>CustomerOrderId</li>
                        <li>SPID</li>
                        <li>BillingTelephoneNumber</li>
                        <li>AuthorizingPerson</li>
                        <li>RequestedFocDate</li>
                        <li>SubscriberType</li>
                        <li>BusinessName</li>
                        <li>LastName</li>
                        <li>FirstName</li>
                        <li>MiddleInitial</li>
                        <li>AccountNumber</li>
                        <li>PinNumber</li>
                        <li>HousePrefix</li>
                        <li>HouseNumber</li>
                        <li>HouseSuffix</li>
                        <li>PreDirectional</li>
                        <li>PostDirectional</li>
                        <li>StreetName</li>
                        <li>StreetSuffix</li>
                        <li>AddressLine2</li>
                        <li>County</li>
                        <li>City</li>
                        <li>StateCode</li>
                        <li>OrderStatus*</li>
                        <li>OverrideValidation**</li>
                    </ul>
                    &#42;OrderStatus field can be modified to CANCELLED value only. This will cancel lsr. All another updates will be ignored in this case.<br/>
                    &#42;&#42;OverrideValidation this flag will force portout to complete bypassing any validity checking (if has not terminal errors). Flag can be supped only for an orders in EXCEPTION status.
                get:
                    description: Retrieves the information associated with the specified lsr ID number.
                    responses:
                        200:
                            description: The information has been successfully retrieved and displayed in the payload.
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <LsrOrder>
                                            <CustomerOrderId>MyId5</CustomerOrderId>
                                            <LastModifiedBy>System</LastModifiedBy>
                                            <OrderCreateDate>2015-03-03T13:54:00.450Z</OrderCreateDate>
                                            <AccountId>9999999</AccountId>
                                            <OrderId>00cf7e08-cab0-4515-9a77-2d0a7da09415</OrderId>
                                            <LastModifiedDate>2015-03-03T14:07:19.926Z</LastModifiedDate>
                                            <OrderStatus>FAILED</OrderStatus>
                                            <SPID>123C</SPID>
                                            <BillingTelephoneNumber>9192381468</BillingTelephoneNumber>
                                            <Pon>testpon1002</Pon>
                                            <PonVersion>0</PonVersion>
                                            <RequestedFocDate>2015-11-15</RequestedFocDate>
                                            <AuthorizingPerson>Jim Hopkins</AuthorizingPerson>
                                            <OverrideValidation>false</OverrideValidation>
                                            <Subscriber>
                                                <SubscriberType>BUSINESS</SubscriberType>
                                                <BusinessName>BusinessName</BusinessName>
                                                <AccountNumber>123463</AccountNumber>
                                                <PinNumber>1231</PinNumber>
                                                <ServiceAddress>
                                                    <HouseNumber>11</HouseNumber>
                                                    <StreetName>Park</StreetName>
                                                    <StreetSuffix>Ave</StreetSuffix>
                                                    <City>New York</City>
                                                    <StateCode>NY</StateCode>
                                                    <Zip>90025</Zip>
                                                </ServiceAddress>
                                            </Subscriber>
                                            <ListOfTelephoneNumbers>
                                                <TelephoneNumber>9192381467</TelephoneNumber>
                                                <TelephoneNumber>9192381468</TelephoneNumber>
                                            </ListOfTelephoneNumbers>
                                            <LsrOrderErrors>
                                                <LsrOrderError>
                                                    <Code>17008</Code>
                                                    <Description>
                                                        FOC date cannot fall on a holiday
                                                    </Description>
                                                </LsrOrderError>
                                            </LsrOrderErrors>
                                            <CountOfTNs>2</CountOfTNs>
                                        </LsrOrder>
                put:
                    description: |
                        Updates the information associated with the specified LSR.  This is also used to cancel an order, by changing the order status field to canceled.  This is the only case where the status can be changed, and when this is done, all other fields are left as they were prior to the cancellation.  Please see the example below.
                    body:
                        application/xml:
                            example: |
                                <LsrOrder>
                                    <CustomerOrderId>FineCustomerid</CustomerOrderId>
                                    <SPID>123C</SPID>
                                    <BillingTelephoneNumber>9192381468</BillingTelephoneNumber>
                                    <RequestedFocDate>2015-11-15</RequestedFocDate>
                                    <AuthorizingPerson>Jim Hopkins</AuthorizingPerson>
                                    <OverrideValidation>false</OverrideValidation>
                                    <Subscriber>
                                        <SubscriberType>BUSINESS</SubscriberType>
                                        <BusinessName>BusinessName</BusinessName>
                                        <ServiceAddress>
                                            <HouseNumber>11</HouseNumber>
                                            <StreetName>Park</StreetName>
                                            <StreetSuffix>Ave</StreetSuffix>
                                            <City>New York</City>
                                            <StateCode>NY</StateCode>
                                            <Zip>90025</Zip>
                                        </ServiceAddress>
                                        <AccountNumber>123463</AccountNumber>
                                        <PinNumber>1231</PinNumber>
                                    </Subscriber>
                                </LsrOrder>
                                                <!-- and for cancelling an LSR -->
                                <LsrOrder>
                                    <OrderStatus>CANCELLED</OrderStatus>
                                    <ListOfTelephoneNumbers/>
                                </LsrOrder>
                    responses:
                        200:
                            description: Lsr has been successfully updated.
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <LsrOrderResponse>
                                            <LsrOrder>
                                                <CustomerOrderId>FineCustomerid</CustomerOrderId>
                                                <LastModifiedBy>team_ua</LastModifiedBy>
                                                <OrderCreateDate>2015-03-11T10:08:23.961Z</OrderCreateDate>
                                                <AccountId>9999999</AccountId>
                                                <OrderId>63fb728d-421b-46ce-8c32-da30b909934d</OrderId>
                                                <LastModifiedDate>2015-03-11T10:08:59.832Z</LastModifiedDate>
                                                <OrderStatus>PENDING</OrderStatus>
                                                <SPID>123C</SPID>
                                                <BillingTelephoneNumber>9192381468</BillingTelephoneNumber>
                                                <Pon>ATT-011515-324234</Pon>
                                                <PonVersion>8</PonVersion>
                                                <RequestedFocDate>2015-11-15</RequestedFocDate>
                                                <AuthorizingPerson>Jim Hopkins</AuthorizingPerson>
                                                <OverrideValidation>false</OverrideValidation>
                                                <Subscriber>
                                                    <SubscriberType>BUSINESS</SubscriberType>
                                                    <BusinessName>BusinessName</BusinessName>
                                                    <AccountNumber>123463</AccountNumber>
                                                    <PinNumber>1231</PinNumber>
                                                    <ServiceAddress>
                                                        <HouseNumber>11</HouseNumber>
                                                        <StreetName>Park</StreetName>
                                                        <StreetSuffix>Ave</StreetSuffix>
                                                        <City>New York</City>
                                                        <StateCode>NY</StateCode>
                                                        <Zip>90025</Zip>
                                                    </ServiceAddress>
                                                </Subscriber>
                                                <ListOfTelephoneNumbers>
                                                    <TelephoneNumber>9192381468</TelephoneNumber>
                                                </ListOfTelephoneNumbers>
                                                <LsrOrderErrors/>
                                                <CountOfTNs>1</CountOfTNs>
                                            </LsrOrder>
                                        </LsrOrderResponse>
                        400:
                            description: Validation error occurred.
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <LsrOrderResponse>
                                            <ResponseStatus>
                                                <ErrorCode>400</ErrorCode>
                                                <Description>Lsr order doesn't pass validation. Please check your input parameters.</Description>
                                            </ResponseStatus>
                                            <LsrOrderErrors>
                                                <LsrOrderError>
                                                    <Code>17023</Code>
                                                    <Description>The authorizing person contact is required for lsr orders.</Description>
                                                </LsrOrderError>
                                                <LsrOrderError>
                                                    <Code>17020</Code>
                                                    <Description>Account SPID [1234] does not match with SPID specified in the Lsr order [123C].</Description>
                                                </LsrOrderError>
                                            </LsrOrderErrors>
                                            <LsrOrder>
                                                <CountOfTNs>1</CountOfTNs>
                                                <OrderId>63fb728d-421b-46ce-8c32-da30b909934d</OrderId>
                                                <OrderStatus>FAILED</OrderStatus>
                                                <AuthorizingPerson>Jim Hopkins</AuthorizingPerson>
                                                <SPID>123C</SPID>
                                                <BillingTelephoneNumber>9192381468</BillingTelephoneNumber>
                                                <Pon>ATT-011515-324234</Pon>
                                                <PonVersion>8</PonVersion>
                                                <RequestedFocDate>2015-11-15</RequestedFocDate>
                                                <OverrideValidation>false</OverrideValidation>
                                                <Subscriber>
                                                    <SubscriberType>BUSINESS</SubscriberType>
                                                    <BusinessName>BusinessName</BusinessName>
                                                    <AccountNumber>123463</AccountNumber>
                                                    <PinNumber>1231</PinNumber>
                                                    <ServiceAddress>
                                                        <HouseNumber>11</HouseNumber>
                                                        <StreetName>Park</StreetName>
                                                        <StreetSuffix>Ave</StreetSuffix>
                                                        <City>New York</City>
                                                        <StateCode>NY</StateCode>
                                                        <Zip>90025</Zip>
                                                        <Country>United States</Country>
                                                        <AddressType>Service</AddressType>
                                                    </ServiceAddress>
                                                </Subscriber>
                                                <ListOfTelephoneNumbers>
                                                    <TelephoneNumber>9192381468</TelephoneNumber>
                                                </ListOfTelephoneNumbers>
                                                <LastModifiedBy>team_ua</LastModifiedBy>
                                                <OrderCreateDate>2015-03-11T10:08:23.961Z</OrderCreateDate>
                                                <AccountId>9999999</AccountId>
                                                <CreatedByUser>team_ua</CreatedByUser>
                                                <CustomerOrderId>FineCustomerid</CustomerOrderId>
                                                <LastModifiedDate>2015-03-11T10:08:59.832Z</LastModifiedDate>
                                            </LsrOrder>
                                        </LsrOrderResponse>
                        404:
                            description: Requested lsr not found.
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <LsrOrderResponse>
                                            <ResponseStatus>
                                                <ErrorCode>5035</ErrorCode>
                                                <Description>lsr order 63fb728d-421b-46ce-8c32-da30b909934s not found.</Description>
                                            </ResponseStatus>
                                        </LsrOrderResponse>
                /history: 
                    description: This resource retrieves the history of a lsr order.
                    get:
                        description: Retrieves the history of the specified lsr order.
                        responses:
                            200:
                                description: The history has been successfully retrieved and displayed in the payload.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <OrderHistoryWrapper>
                                                <OrderHistory>
                                                    <OrderDate>2015-03-02T15:36:31.835Z</OrderDate>
                                                    <Note>LSR has been received by the system and is being processed</Note>
                                                    <Author>lsrOnly</Author>
                                                    <Status>PENDING</Status>
                                                </OrderHistory>
                                                <OrderHistory>
                                                    <OrderDate>2015-03-02T15:37:33.457Z</OrderDate>
                                                    <Note>Port-out date has been set</Note>
                                                    <Status>FOC</Status>
                                                    <Difference>ActualFocDate : "" --&gt; 2015-06-27</Difference>
                                                </OrderHistory>
                                            </OrderHistoryWrapper>
                /notes: 
                    # note that this file is shared between 5 order types - 
                    #  - orders
                    #  - disconnects
                    #  - portins
                    #  - portouts
                    #  - inporttoaccount
                    #  - lidbs
                    #  - dldas
                    # 
                    description: |
                        The /notes resource manages a note or set of notes associated with an order.  Notes can only be appended to the collection, and are not individually addressable or modifiable once added.
                    post:
                        description: Updates the Notes resource by adding a note.
                        body:
                            application/xml:
                                example:
                                    <?xml version="1.0" encoding="UTF-8"?>
                                    <Note>
                                       <UserId>user id</UserId>
                                       <Description>note text</Description>
                                       <Internal>false</Internal>   <!-- note created by admin is implicitly internal unless this tag with "false" value is specified -->
                                    </Note>
                        responses:
                            201:
                                description: CREATED - the note has been created and added to the collection of notes associated with the order.  A link to the note is included in the Location header of the response.  No body is returned
                            400:
                                description: Bad Request - the note has not been created because the payload is incomplete or in error.  An error payload is provided in the repsonse.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <NoteResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12501</ErrorCode>
                                                    <Description>Username is required</Description>
                                                </ResponseStatus>
                                            </NoteResponse>           
                    get:
                        description: Retrieve the set of notes associated with an order.
                        responses:
                            200:
                                description: OK - there are Notes associated with the order, and they have been returned in the response.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <Notes>
                                                <Note>
                                                    <Id>87037</Id>
                                                    <UserId>jbm</UserId>
                                                    <Description>This is a test note</Description>
                                                    <LastDateModifier>2014-11-16T04:01:10.000Z</LastDateModifier>
                                                    <Internal>false</Internal>    <!-- admin only -->
                                                </Note>
                                                <Note>
                                                    <Id>87039</Id>
                                                    <UserId>smckinnon</UserId>
                                                    <Description>This is a second test note</Description>
                                                    <LastDateModifier>2014-11-16T04:08:46.000Z</LastDateModifier>
                                                    <Internal>false</Internal>    <!-- admin only -->
                                                </Note>
                                            </Notes>                    
                            204:
                                description: No Content - there are no Notes associated with the order.  Since the notes resource is an aggregate rather than addressed resource the generic no content response is used, rather than a 404 as would be used if the resource was addressed with an identifier
                /adminparameters: 
                    # this file is shared between 6 order types - 
                    #  - orders
                    #  - portins
                    #  - portouts
                    #  - LSR orders
                    #  - E911 orders
                    #  - TN Option orders
                    # 
                    description: |
                        The /adminparameters resource contains two pieces of information...
                        <ul>
                          <li>The "activity state" of the order - a classification of what the state the order is in from the perspective of the Bandwidth staff member.</li>
                          <ul>
                            <li>Quiet - the order is automaticly progressing through the work flow and nothing needs to be done.  This is the default state</li>
                            <li>Changed - something has changed in the order, and should be examined by a staff member</li>
                            <li>Seen - the order has been examined by the staff member, and if required, action is being taken</li>
                            <li>Responded - a response has been provided to the customer</li>
                          </ul>
                          <li>The name or handle of the Bandwidth staff member that is caring for the order</li>
                        </ul>
                        This resource is used by Bandwidth in managing multiple types of orders. <br><br> There is only one instance of the adminparameters resource associated with an order.  The resource is assigned when it is needed, so an order that is flowing through the workflow without errors will likely not have an instance of adminparameters.
                    put:
                        description: Updates the admin parameters associated with an order.  Removing an element will result in resetting the element to the default value.
                        body:
                            application/xml:
                                example:
                                    <?xml version="1.0"?>
                                    <AdminParameters>
                                        <!-- Optional - Default value is Quiet-->
                                        <ActivityState>Changed</ActivityState>
                                        <!-- Optional -->
                                        <BandwidthPrime>James T Kirk</BandwidthPrime>
                                    </AdminParameters>
                        responses:
                            201:
                                description: CREATED - the admin parameters resource has been created and populated as directed.
                            200:
                                description: OK - The previously created resource has been updated as directed.
                            404:
                                description: Bad Request - some error is present in the payload, and the the Admin Parameters have not been changed.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AdminParametersResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>15517</ErrorCode>
                                                    <Description>Invalid 'activityState'. Valid values are changed, seen, responded, quiet</Description>
                                                </ResponseStatus>
                                            </AdminParametersResponse>        
                    get:
                        description: Retrieve the admin parameters associated with an order.
                        responses:
                            200:
                                description: OK - there are admin parameters associated with the order, and they have been returned in the response.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AdminParametersResponse>
                                                <AdminParameters>
                                                    <ActivityState>responded</ActivityState>
                                                    <BandwidthPrime>James T Kirk</BandwidthPrime>
                                                </AdminParameters>
                                            </AdminParametersResponse>                    
                            404:
                                description: NOT FOUND - No admin parameters have been associated with this order id (or the orderid cannot be found in the system).  For a valid orderid this is interpreted as a "Quiet" <ActivityState>.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AdminParametersResponse>
                                                <ResponseStatus>
                                                    <Description>The resource does not exist</Description>
                                                </ResponseStatus>
                                            </AdminParametersResponse>     
                    delete:
                        description: Remove the admin parameters associated with an order
                        responses:
                            200:
                                description: OK - the admin parameters have been removed from the order
                            400:
                                description: BAD REQUEST - typically this means that the order-id is incorrect.
                                body:
                                    application/xml:
                                        example:
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AdminParametersResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>5035</ErrorCode>
                                                    <Description>port_in order f58f47a5-f9f5-4dd2-8687-a615b2fe86cd9 not found.</Description>
                                                </ResponseStatus>
                                            </AdminParametersResponse>
        /numbersAssignment: 
            description: |
                The TelephoneNumbersAssignment order resource represents the requests made to the Bandwidth Dashboard API to declare whether telephone numbers associated with the customer's account are assigned to end users or not.  This declaration of assignment is used in preparing NRUF Federal and PUC telephone number utilizatoin filings, and in providing justification for the acquisition and allocation of additional telephone numbers to the overall inventory<br>
                <br>
                The API follows the Bandwidth Dashboard “order” model, where an order-id is created to track the interaction and refer back to it as needed.  This record will also be persisted to enable examination of past events.
                <br>
                This API allows our customers to designate the assignment status of the numbers on their account by providing a list of telephone numbers, and a designated assignment status.
                <br>
            get:
                description: |
                    Retrieve a list of the TelephoneNumbersAssignment orders that are associated with the account.
                queryParameters:
                    status:
                        description: The status of the TelephoneNumbersAssignment order being searched for.  COMPLETE, PARTIAL, and FAILED are 'terminal' states indicating that the order has finished all processing.
                        type: string
                        example: PARTIAL
                        enum: [RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED]
                        repeat: true
                    tn:
                        description: A Telephone Number (TN) that is referenced in the order
                        type: string
                        example: 9199918388
                    customerOrderId:
                        description: The Customer Order ID is an ID assigned by the account owner to provide a reference number for the TelephoneNumbersAssignment order.
                        type: string
                        example: ABCCorp12345
                    createdDateFrom:
                        description: Checks the order's creation date against this value. Orders that have a creation date after this date will be included. Format is yyyy-MM-dd
                        type: string
                        example: 2013-10-22
                    createdDateTo:
                        description: Checks the order's creation date against this value. Orders that have a creation date before this date will be included. Format is yyyy-MM-dd
                        type: string
                        example: 2013-10-25
                    orderIdFragment:
                        description: This search parameter represents the internal Bandwidth Dashboard ID that has been assigned to the TelephoneNumbersAssignment Order.  This parameter is the first few characters of the internal ID - the entire ID does not need to be specified.
                        type: string
                        example: ed1c0bed-e2
                    action:
                        description: whether or not the results should be restricted to ASSIGNED or UNASSIGNED assignment actions."
                        type: string
                        example: ASSIGNED
                        enum: [ASSIGNED, UNASSIGNED]
                        repeat: false
                responses:
                    200:
                        description: |
                            The descriptive payload for the TelephoneNumbersAssignment Orders query provides information about the TelephoneNumbersAssignment Orders, including the data associated with the order, the state of the order, and a list of the successfully uploaded Telephone Numbers, and decriptions of any encountered errors.
                        body:
                            application/xml:
                                example: 
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <TelephoneNumbersAssignmentOrders>
                                        <TotalCount>3</TotalCount>
                                        <TelephoneNumbersAssignmentOrderSummary>
                                            <!-- Account ID preserved for uniformity with global list -->
                                            <accountId>1</accountId>
                                            <TotalQuantity>4</TotalQuantity>
                                            <userId>jbm</userId>
                                            <OrderDate>2016-01-15T11:36:52.727Z</OrderDate>
                                            <OrderType>NUMBERS_ASSIGNMENT_ORDER</OrderType>
                                            <OrderStatus>COMPLETE</OrderStatus>
                                            <Action>ASSIGN</Action>
                                            <OrderId>65e03a35-6b97-48a5-8126-f47bad02df2a</OrderId>
                                        </TelephoneNumbersAssignmentOrderSummary>
                                        <TelephoneNumbersAssignmentOrderSummary>
                                            <accountId>1</accountId>
                                            <TotalQuantity>4</TotalQuantity>
                                            <FailedQuantity>1</FailedQuantity>
                                            <userId>jbm</userId>
                                            <OrderDate>2016-01-15T11:36:26.633Z</OrderDate>
                                            <OrderType>NUMBERS_ASSIGNMENT_ORDER</OrderType>
                                            <OrderStatus>PARTIAL</OrderStatus>
                                            <Action>ASSIGN</Action>
                                            <OrderId>d8f5abc0-1a4c-4c36-b387-93fb5b430784</OrderId>
                                        </TelephoneNumbersAssignmentOrderSummary>
                                        <TelephoneNumbersAssignmentOrderSummary>
                                            <accountId>1</accountId>
                                            <CustomerOrderId>ICPA123ABC</CustomerOrderId>
                                            <TotalQuantity>4</TotalQuantity>
                                            <userId>jbm</userId>
                                            <OrderDate>2016-01-15T12:36:26.633Z</OrderDate>
                                            <OrderType>NUMBERS_ASSIGNMENT_ORDER</OrderType>
                                            <OrderStatus>FAILED</OrderStatus>
                                            <Action>ASSIGN</Action>
                                            <OrderId>d8f5abc0-b387-4c36-48a5-f47bad02df2a</OrderId>
                                        </TelephoneNumbersAssignmentOrderSummary>
                                    </TelephoneNumbersAssignmentOrders>
                    400:
                        description: Bad Request.  If any errors are found in the processing of the query string a 400 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored.
            post:
                description: |
                    Create a TelephoneNumbersAssignment order to register the assignment status of a list of telephone numbers.  The telephone numbers can be declared to be either ASSIGNED or UNASSIGNED.
                    The key data elements in the submission are -
                     <table style="text-align: left; width: 80%;" border="1" cellpadding="2" cellspacing="2">
                      <tbody>
                        <tr>
                          <td>CustomerOrderID</td>
                          <td>An order ID created by the customer for their tracking purposes</td>
                        </tr>
                        <tr>
                          <td>Action</td>
                          <td>(Required) Declare whether the listed Telephone Numbers are to be ASSIGNED or UNASSIGNED</td>
                        </tr>
                      </tbody>
                    </table>
                body:
                    application/xml:
                        example: |
                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                            <TelephoneNumbersAssignmentOrder>
                                <CustomerOrderId>ICPA123ABC</CustomerOrderId>
                                <Action>[ ASSIGN | UNASSIGN ]</Action>
                                <TelephoneNumbers>
                                    <TelephoneNumber>9199918388</TelephoneNumber>
                                    <TelephoneNumber>4158714245</TelephoneNumber>
                                    <TelephoneNumber>4352154439</TelephoneNumber>
                                    <TelephoneNumber>4352154466</TelephoneNumber>
                                </TelephoneNumbers>
                            </TelephoneNumbersAssignmentOrder>
                responses:
                    201:
                        description: |
                            Created <br>A 201 response indicates that an order has been created.
                        body:
                            application/xml:
                                example: 
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <TelephoneNumbersAssignmentOrderResponse>
                                        <OrderCreateDate>2016-01-15T11:36:52.727Z</OrderCreateDate>
                                        <AccountId>1</AccountId>
                                        <CreatedByUser>jbm</CreatedByUser>
                                        <OrderId>65e03a35-6b97-48a5-8126-f47bad02df2a</OrderId>
                                        <ProcessingStatus>PARTIAL</ProcessingStatus>
                                        <TotalQuantity>4</TotalQuantity>
                                        <FailedQuantity>1</FailedQuantity>
                                        <TelephoneNumbersAssignmentOrder>
                                            <CustomerOrderId>ICPA123ABC</CustomerOrderId>
                                            <Action>ASSIGN</Action>
                                            <TelephoneNumbers>
                                                <TelephoneNumber>9199918388</TelephoneNumber>
                                                <TelephoneNumber>4158714245</TelephoneNumber>
                                                <TelephoneNumber>4352154439</TelephoneNumber>
                                                <TelephoneNumber>4352154466</TelephoneNumber>
                                            </TelephoneNumbers>
                                        </TelephoneNumbersAssignmentOrder>
                                        <Errors>
                                            <Error>
                                                <Code>5076</Code>
                                                <Description>Number does not belong to this account.</Description>
                                                <TelephoneNumbers>
                                                    <TelephoneNumber>9199918388</TelephoneNumber>
                                                </TelephoneNumbers>
                                            </Error>
                                        </Errors>
                                    </TelephoneNumbersAssignmentOrderResponse>
                    400:
                        description: |
                            Bad Request <br> A 400 response Indicates that the order could not be created.
                            Error text and an error code will be provided in the ErrorList element.
                        body:
                            application/xml:
                                example: 
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <TelephoneNumbersAssignmentOrderResponse>
                                        <ResponseStatus>
                                            <ErrorCode>13554</ErrorCode>
                                            <Description>Assignment action is invalid. Valid values ASSIGN, UNASSIGN</Description>
                                        </ResponseStatus>
                                    </TelephoneNumbersAssignmentOrderResponse>
            /{orderid}: 
                description: |
                    This API returns data about the specific TelephoneNumbersAssignment order specified as the resource
                get:
                    description: |
                        Retrieve information about a TelephoneNumbersAssignment order with specified ID.
                    responses:
                        200:
                            description: |
                                The descriptive payload for the TelephoneNumbersAssignment query provides a broad range of information about the TelephoneNumbersAssignment order identified in the URL.  Included amongst the information is...
                                <ul>
                                <li>ErrorList - the errors discovered with codes and explanations</li>
                                <li>ProcessingStatus(RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED) - the overall status of the order</li>
                                </ul>
                            body:
                                application/xml:
                                    example: 
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <TelephoneNumbersAssignmentOrderResponse>
                                            <OrderCreateDate>2016-01-15T11:36:52.727Z</OrderCreateDate>
                                            <AccountId>1</AccountId>
                                            <CreatedByUser>jbm</CreatedByUser>
                                            <OrderId>65e03a35-6b97-48a5-8126-f47bad02df2a</OrderId>
                                            <ProcessingStatus>PARTIAL</ProcessingStatus>
                                            <TotalQuantity>4</TotalQuantity>
                                            <FailedQuantity>1</FailedQuantity>
                                            <TelephoneNumbersAssignmentOrder>
                                                <CustomerOrderId>ICPA123ABC</CustomerOrderId>
                                                <Action>ASSIGN</Action>
                                                <TelephoneNumbers>
                                                    <TelephoneNumber>9199918388</TelephoneNumber>
                                                    <TelephoneNumber>4158714245</TelephoneNumber>
                                                    <TelephoneNumber>4352154439</TelephoneNumber>
                                                    <TelephoneNumber>4352154466</TelephoneNumber>
                                                </TelephoneNumbers>
                                            </TelephoneNumbersAssignmentOrder>
                                            <Errors>
                                                <Error>
                                                    <Code>5076</Code>
                                                    <Description>Number does not belong to this account.</Description>
                                                    <TelephoneNumbers>
                                                        <TelephoneNumber>9199918388</TelephoneNumber>
                                                    </TelephoneNumbers>
                                                </Error>
                                            </Errors>
                                        </TelephoneNumbersAssignmentOrderResponse>
                        404:
                            description: NOT FOUND - the order id does not exist in the system
                            body:
                                application/xml:
                                    example: 
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <TelephoneNumbersAssignmentOrderResponse>
                                            <ResponseStatus>
                                                <Description>The resource does not exist</Description>
                                            </ResponseStatus>
                                        </TelephoneNumbersAssignmentOrderResponse>
        /orders: 
            description: |
                An attempt to order Telephone Numbers into an account creates an order record that is maintained by the Bandwidth Dashboard to trace the attempt to order the Telephone Numbers, and provide feedback on the success or failure of that attempt. <br>
                The order is identified by an order-id that can be used to uniquely identify the order attempt, and to access a record of the request and the result.<br>
                There are a number of independent kinds of new number order, intended to search for and obtain numbers using different search criteria.  Some of the applicable search criteria are:<br>
                <ul>
                    <li>NPA / Area Code</li>
                    <li>NPA-NXX combination</li>
                    <li>State</li>
                    <li>Rate Center and State, with or without a Local Calling Center constraint</li>
                    <li>City and State</li>
                    <li>ZIP Code</li>
                    <li>LATA</li>
                    <li>Local Vanity</li>
                    <li>Peer ID</li>
                </ul>
                <br>
            get:
                description: GET is used to retrieve order ids and order details for previously attempted Telephone Number orders.
                queryParameters: 
                    page:
                        description: All Order retrievals must be paginated, using page and size indicators.  The page parameter contains the order-id that is to start the page, or "1" in the case of the first page.
                        type: string
                        example: cbdcfc94-81b1-4ce9-8b6d-f8d6b85381ba
                        required: true
                        default: 1
                    size:
                        description: The size parameter indicates the number of orders to return in the payload
                        type: integer
                        example: 20
                        required: true
                    customerOrderId: 
                        type: string
                        description: The order ID that the Customer / Account assigned to the Order
                        example: ORD12345
                    status:
                        type: string
                        description: the status of the orders that should be in the returned set
                        example: BACKORDERED
                        enum: [BACKORDERED, COMPLETE, PARTIAL, FAILED]
                        repeat: false
                    userid:
                        description: The userid of the user that submitted the new number order
                        type: string
                        example: user@customer.com
                    startdate:
                        description: The first day of the search date range for a date-range-limited search of net number orders.  The format is YY-MM-DD.
                        type: date
                        example: 13-12-15
                    enddate:
                        description: The last day of the search date range for a date-range-limited search of net number orders.  The format is YY-MM-DD.
                        type: date
                        example: 13-12-31
                responses:    
                    200:
                        description: The Order retrieval request will return a list of the orders that match the criteria imposed by the provided query parameters.  The orders list contains a detailed description of the order.  Notice that the first elements of the payload provide link information that can be used to page through a paginated list of orders.  Pagination can be controlled by use of the size and page query parameters.
                        body: 
                            application/xml:
                                example: |
                                    <?xml version="1.0"?>
                                    <ResponseSelectWrapper>
                                        <ListOrderIdUserIdDate>
                                            <TotalCount>122</TotalCount>
                                            <Links>
                                            <first>
                                                <!-- Link=<https //api.inetwork.com 443/v1.0/accounts/9900012/orders?page=1&size=3>;rel="first"; -->
                                            </first>
                                            <next>
                                                <!-- Link=<https //api.inetwork.com 443/v1.0/accounts/9900012/orders?page=cbdcfc94-81b1-4ce9-8b6d-f8d6b85381ba&size=3>;rel="next"; -->
                                            </next>
                                            </Links>
                                            <OrderIdUserIdDate>
                                                <CountOfTNs>1</CountOfTNs>
                                                <lastModifiedDate>2013-12-20T06</lastModifiedDate>
                                                <OrderDate>2013-12-20T06</OrderDate>
                                                <orderId>c5d8d076-345c-45d7-87b3-803a35cca89b</orderId>
                                                <OrderStatus>COMPLETE</OrderStatus>
                                                <TelephoneNumberDetails>
                                                    <States>
                                                        <StateWithCount>
                                                            <State>VA</State>
                                                            <Count>1</Count>
                                                        </StateWithCount>
                                                    </States>
                                                    <RateCenters>
                                                        <RateCenterWithCount>
                                                            <Count>1</Count>
                                                            <RateCenter>LADYSMITH</RateCenter>
                                                        </RateCenterWithCount>
                                                    </RateCenters>
                                                    <Cities>
                                                        <CityWithCount>
                                                            <City>LADYSMITH</City>
                                                            <Count>1</Count>
                                                        </CityWithCount>
                                                    </Cities>
                                                    <Tiers>
                                                        <TierWithCount>
                                                            <Tier>0</Tier>
                                                            <Count>1</Count>
                                                        </TierWithCount>
                                                    </Tiers>
                                                    <Vendors>
                                                        <VendorWithCount>
                                                            <VendorId>49</VendorId>
                                                            <VendorName>Bandwidth CLEC</VendorName>
                                                            <Count>1</Count>
                                                        </VendorWithCount>
                                                    </Vendors>
                                                </TelephoneNumberDetails>
                                                <userId>bwc_user</userId>
                                            </OrderIdUserIdDate>
                                            <OrderIdUserIdDate>
                                                <CountOfTNs>0</CountOfTNs>
                                                <lastModifiedDate>2013-11-05T17</lastModifiedDate>
                                                <OrderDate>2013-11-05T17</OrderDate>
                                                <orderId>27da9f39-81f3-44ed-80ce-05ddf2db612d</orderId>
                                                <OrderStatus>FAILED</OrderStatus>
                                                <userId>wandedemo_user</userId>
                                            </OrderIdUserIdDate>
                                            <OrderIdUserIdDate>
                                                <CountOfTNs>1</CountOfTNs>
                                                <lastModifiedDate>2013-12-11T20</lastModifiedDate>
                                                <OrderDate>2013-12-11T20</OrderDate>
                                                <orderId>2bab589e-2cda-453b-9999-8f35441d4a1a</orderId>
                                                <OrderStatus>COMPLETE</OrderStatus>
                                                <TelephoneNumberDetails>
                                                    <! ---- SNIP ---->
                                                </TelephoneNumberDetails>
                                                <userId>bwc_user</userId>
                                            </OrderIdUserIdDate>
                                        </ListOrderIdUserIdDate>
                                    </ResponseSelectWrapper>
                    400: 
                        description: Bad Request - malformed Query Parameters can result in a 400 Bad request. 
                    404: 
                        description: Not Found - returned if the retrieval request cannot be satisfied, either because the order id cannot be found or the order id is not recognized.
            post:
                description: |
                    <span>A POST creates a request for Telephone Numbers</span>
                    <br>
                    A POST on the /orders resource is used to request that the system provide one or more TNs for use by the account.  The post creates a new number order record to preserve the request, as well as the response of the Bandwidth Dashboard to the request.  A well-formed POST on the /orders resource will create an order record, and return an order-id string that can be used to uniquely identify the new number order request.  The details of success and failure of the request for TNs will be preserved and linked to the returned order id.<br><br>
                    The order-id is returned in the Location Header, allowing the API user immediate access to the order.<br><br>
                    There are multiple ways that new telephone numbers can be requested.  The various request payloads are documented below. <br><br>
                    Common values in <b>all</b> request payloads include: <br>
                    <table>
                        <tr>
                            <th>Parameter</th>
                            <th>Description</th>
                        </tr>
                        <tr>
                            <td>Quantity</td>
                            <td>The desired quantity of requested numbers. values range from 1-5000. If no quantity is specified, the default of 5000 is returned.</td>
                        </tr>
                        <tr>
                            <td>name</td>
                            <td>The name of the order. Max length restricted to 50 characters.</td>
                        </tr>
                        <tr>
                            <td>CustomerOrderId</td>
                            <td>Optional value for Id set by customer</td>
                        </tr>
                        <tr>
                            <td>SiteId</td>
                            <td>The ID of the Site that the SIP Peer is to be associated with.</td>
                        </tr>
                        <tr>
                            <td>PeerId</td><td>The ID of the SIP Peer that the telephone numbers are to be assigned to.</td>
                        </tr>
                        <tr>
                            <td>PartialAllowed</td>
                            <td>By default all order submissions are fulfilled partially. Setting the PartialAllowed to false would trigger the entire order to be fulfilled (any error ecnountered such as 1 TN not being available would fail all TNs in the order)<br>
                                By default, this value is set to false</td>
                        </tr>
                        <tr>
                            <td>BackOrderRequested</td>
                            <td>BackOrderRequested will indicate to the system that if the entire quantity of numbers is not available on the first attempt to fill the new number order, the request will be repeated periodically until the request is successful or cancelled. Setting the parameter to true indeicated a desire to backorder numbers if the entire quantity is not available</td>
                        </tr>
                    </table>
                    <p>
                    The following POST payload elements are not common to all orders.  They are specific to one or more types of orders:
                    <br>
                    <table>
                        <tr>
                            <th>Parameter</th><th>Description</th>
                        </tr>
                        <tr>
                            <td>TelephoneNumberList</td><td>A list of telephone numbers to order</td>
                        </tr>
                        <tr>
                            <td>AreaCode</td><td>Allowed ranged: [2-9] for the first digit and [0, 9] for both the second and third digits.</td>
                        </tr>
                        <tr>
                            <td>RateCenter</td><td>A text Rate Center name.  Must be combined with State information</td>
                        </tr>
                        <tr>
                            <td>State</td><td>The two-letter abbreviation of the state</td>
                        </tr>
                        <tr>
                            <td>City</td><td>The name of the city that the Ordered telephone numbers should apply to</td>
                        </tr>
                        <tr>
                            <td>Zip</td><td>A five-digit (XXXXX) or nine-digit (XXXXX-XXXX) format value.</td>
                        </tr>
                        <tr>
                            <td>Lata</td><td>A maximum five-digit (XXXXX) numeric format.</td>
                        </tr>
                        <tr>
                            <td>EnableLCA</td><td>If set to true, local calling access numbers will be returned for Rate Center, NPA-NXX and NPANXXX orders if numbers are not available for the given criteria. Default is true.</td>
                        </tr>
                        <tr>
                            <td>Npa-Nxx or Npa-Nxxxx with EnableLCA</td><td>NpaNxx combination to be searched.<br>Valid Npa values:  [2-9] for the first digit, and [0-9] for both the second and third digits.<br>Valid Nxx values: [2-9] for the first digit, and [0-9] for both the second and third digits.<br>Valid Xxvalues [0-9].<br><br>if set to true, enables the ability to get local calling access numbers if numbers are not available for the given criteria.</td>
                        </tr>
                        <tr>
                            <td>LocalVanity</td><td>A text string used to request a regular vanity number. Valid range is between 4 and 7 alphanumeric characters.</td>
                        </tr>
                        <tr>
                            <td>EndsIn</td><td>Intended to use with LocalVanity only. The parameter value is true or false. If set to true, the search will look for only numbers which end in specified LocalVanity, otherwise LocalVanity sequence can be met anywhere in last 7 number digits. The default is false.</td>
                        </tr>
                        <tr>
                            <td>TollFreeVanity</td><td>A text string used to request a toll free vanity number. Valid range is between 4 and 7 alphanumeric characters.</td>
                        </tr>
                        <tr>
                            <td>TollFreeWildCardPattern</td><td>A 3-digit wild card pattern for specifying toll free prefixes, comprised of 8 followed by two stars, a digit and a star or two digits</td>
                        </tr>
                        <tr>
                            <td>ReservationIdList</td><td>If a telephone number or numbers have been previously reserved, the ReservationIdList provides the IDs necessary to release the numbers.  This only applies to reserved numbers - if no reservation has been placed on the numbers this list is not required.</td>
                        </tr>
                        <tr>
                            <td>TnAttributes</td>
                            <td>Attributes to be assigned to the telephone number. Optional parameter. Possible values: "Protected"</td>
                        </tr>
                    </table>
                    <br><br>
                    <b>Putting it all together</b>
                    <br><br>
                    The request to order numbers is performed via a POST to the /orders resource.  As indicated above, the payload of this POST varies depending on the type of search that is to be performed for the numbers, with a unique payload element used to indicate each different order type. <br><br>
                    The unique components of the payload are described in the table below.  These are combined with the common payload elements in the first table above to create a full order payload.  Some complete payloads are captured in the examples. <br><br>
                    <table style="text-align: left; width: 100%;" border="1"
                     cellpadding="2" cellspacing="0">
                      <tbody>
                        <tr>
                          <th>Payload segment</th>
                          <th>Description</th>
                        </tr>
                        <tr>
                          <td>
                          <pre>
                    &lt;ExistingTelephoneNumberOrderType&gt;
                        &lt;TelephoneNumberList&gt;
                            &lt;TelephoneNumber&gt;9193752369&lt;/TelephoneNumber&gt;
                            &lt;TelephoneNumber&gt;9193752720&lt;/TelephoneNumber&gt;
                            &lt;TelephoneNumber&gt;9193752648&lt;/TelephoneNumber&gt;
                        &lt;/TelephoneNumberList&gt;
                        &lt;ReservationIdList&gt;
                            &lt;ReservationId&gt;[GUID]&lt;/ReservationId&gt;
                            &lt;ReservationId&gt;[GUID]&lt;/ReservationId&gt;
                        &lt;/ReservationIdList&gt;
                    &lt;/ExistingTelephoneNumberOrderType&gt;</pre>
                          </td>
                          <td>Order a set of numbers known to be available. <br>
                          This often results if the numbers have been<br>
                          found using a separate <b>availableNumbers</b> search<br>
                            If the numbers have previously been reserved, <br>
                            a reservation id must be included</td>
                        </tr>
                        <tr>
                          <td>
                          <pre>
                    &lt;AreaCodeSearchAndOrderType&gt;
                        &lt;AreaCode&gt;617&lt;/AreaCode&gt;
                        &lt;Quantity&gt;1&lt;/Quantity&gt;
                    &lt;/AreaCodeSearchAndOrderType&gt;</pre>
                          </td>
                          <td>Allowed ranges ~ <br>
                          [2-9] for the first digit and <br>
                          [0, 9] for both the second and <br>
                          third digits.</td>
                        </tr>
                        <tr>
                          <td>
                          <pre>
                    &lt;RateCenterSearchAndOrderType&gt;
                        &lt;RateCenter&gt;RALEIGH&lt;/RateCenter&gt;
                        &lt;State&gt;NC&lt;/State&gt;
                        &lt;Quantity&gt;1&lt;/Quantity&gt;
                    &lt;/RateCenterSearchAndOrderType&gt;</pre>
                          </td>
                          <td>Specify the Rate Center and <br> the State</td>
                        </tr>
                        <tr>
                          <td>
                          <pre>
                    &lt;NPANXXSearchAndOrderType&gt;
                        &lt;NpaNxx&gt;919439&lt;/NpaNxx&gt;
                        &lt;EnableTNDetail&gt;true&lt;/EnableTNDetail&gt;
                        &lt;EnableLCA&gt;false&lt;/EnableLCA&gt;
                        &lt;Quantity&gt;1&lt;/Quantity&gt;
                    &lt;/NPANXXSearchAndOrderType&gt;</pre>
                          </td>
                          <td>Specify the NpaNxx combination to be ordered.<br>
                          Valid Npa values ~ [2-9] for the first digit,<br>
                          and [0-9] for both the second and third digits.<br>
                          Valid Nxx values ~ [2-9] for the first digit, <br>
                          and [0-9] for both the second and third digits.<br>
                          A similar approach is viable for NPANXXXX.<br>
                          The EnableLCA flag turns LCA search on or off.
                          </td>
                        </tr>
                        <tr>
                          <td>
                          <pre>
                    &lt;TollFreeVanitySearchAndOrderType&gt;
                       &lt;Quantity&gt;1&lt;/Quantity&gt;    
                       &lt;TollFreeVanity&gt;newcars&lt;/TollFreeVanity&gt;
                    &lt;/TollFreeVanitySearchAndOrderType&gt;</pre>
                          </td>
                          <td>
                          Specify a Toll Free Vanity search, where the <br>
                          numbers ordered match a specific alphanumeric <br>
                          pattern between 4 and 7 characters long</td>
                        </tr>
                        <tr>
                          <td>
                          <pre>
                    &lt;TollFreeWildCharSearchAndOrderType&gt;
                        &lt;Quantity&gt;1&lt;/Quantity&gt;
                        &lt;TollFreeWildCardPattern&gt;8**&lt;/TollFreeWildCardPattern&gt;
                    &lt;/TollFreeWildCharSearchAndOrderType&gt;</pre>
                          </td>
                          <td>Specify the Toll Free wild card pattern.<br>
                          to be ordered, comprised of 3 digits beginning with '8'.<br>
                          Examples are 8**, 87*, etc.</td>
                        </tr>
                        <tr>
                          <td>
                          <pre>
                    &lt;StateSearchAndOrderType&gt;
                        &lt;Quantity&gt;1&lt;/Quantity&gt;
                        &lt;State&gt;NC&lt;/State&gt;
                    &lt;/StateSearchAndOrderType&gt;</pre>
                          </td>
                          <td>Specify the State to be searched<br>for telephone numbers</td>
                        </tr>
                        <tr>
                          <td>
                          <pre>
                    &lt;CitySearchAndOrderType&gt;
                        &lt;Quantity&gt;1&lt;/Quantity&gt;
                        &lt;City&gt;RALEIGH&lt;/City&gt;
                        &lt;State&gt;NC&lt;/State&gt;
                    &lt;/CitySearchAndOrderType&gt;</pre>
                          </td>
                          <td>Specify the City and State to be ordered from.</td>
                        </tr>
                        <tr>
                          <td>
                          <pre>
                    &lt;ZIPSearchAndOrderType&gt;
                        &lt;Quantity&gt;1&lt;/Quantity&gt;
                        &lt;Zip&gt;27606&lt;/Zip&gt;
                    &lt;/ZIPSearchAndOrderType&gt;</pre>
                          </td>
                          <td>Specify the Zip Code to be ordered from.</td>
                        </tr>
                        <tr>
                          <td>
                          <pre>
                    &lt;LATASearchAndOrderType&gt;
                        &lt;Quantity&gt;1&lt;/Quantity&gt;   
                        &lt;Lata&gt;224&lt;/Lata&gt;
                    &lt;/LATASearchAndOrderType&gt;</pre>
                          </td>
                          <td>Specify the LATA to order <br> telephone numbers from.</td>
                        </tr>
                        <tr>
                          <td>
                          <pre>
                    &lt;CombinedSearchAndOrderType&gt;
                        &lt;Quantity&gt;1&lt;/Quantity&gt;
                        &lt;AreaCode&gt;617&lt;/AreaCode&gt;
                        &lt;RateCenter&gt;RALEIGH&lt;/RateCenter&gt;
                        &lt;State&gt;NC&lt;/State&gt;
                        &lt;NpaNxx&gt;919439&lt;/NpaNxx&gt;
                        &lt;NpaNxxX&gt;9194391&lt;/NpaNxxX&gt;
                        &lt;Lata&gt;224&lt;/Lata&gt;
                        &lt;City&gt;RALEIGH&lt;/City&gt;
                        &lt;Zip&gt;27606&lt;/Zip&gt;
                        &lt;EnableLCA&gt;false&lt;/EnableLCA&gt;
                    &lt;/CombinedSearchAndOrderType&gt;</pre>
                          </td>
                          <td>Specify the any combination of:<br>
                          <ul><li>AreaCode</li><li>RateCenter</li><li>State</li><li>NpaNxx</li><li>NpaNxxX</li><li>Lata</li><li>City</li><li>Zip</li></ul>
                          <br>
                    But with following limitations:
                    <ul>
                        <li>Parameters AreaCode, NpaNxx and NpaNxxX<br>are mutually exclusive</li>
                        <li>LCA search is supported only for<br>one of the following criteria:<ul><ul><li>NpaNxx</li><li>NpaNxxX</li><li>RateCenter and State</li></ul></li>
                        <li>If City or RateCenter is specified<br>then State is required</li>
                    </ul>
                          </td>
                    <tr><td>
                    <pre>
                    &lt;CombinedSearchAndOrderType&gt;
                        &lt;Quantity&gt;1&lt;/Quantity&gt;
                        &lt;AreaCode&gt;617&lt;/AreaCode&gt;
                        &lt;LocalVanity&gt;newcars&lt;/LocalVanity&gt;
                        &lt;EndsIn&gt;false&lt;/EndsIn&gt;
                    &lt;/CombinedSearchAndOrderType&gt;
                    </pre>
                    </td>
                    <td>
                        Specify AreaCode and LocalVanity to order telephone numbers matching a specific alphanumeric pattern between 4 and 7 characters long.<br>
                        <br>
                        Limitations:
                        <ul>
                        <li>AreaCode is always required</li>
                        <li>No parameter combinations are allowed here</li>
                        <li>This order type is unsupported with BackOrderRequested=true</li>
                        </ul>
                    </td>
                    </tr>
                    <tr>
                    <td><pre>
                     &lt;TnAttributes&gt;
                        &lt;TnAttribute&gt;Protected&lt;/TnAttribute&gt;
                        &lt;/TnAttributes&gt;</pre>
                            </td>
                            <td>Specify TnAttribute to be assigned to the ordered telephone numbers.</td>
                          </tr>
                        </tr>
                      </tbody>
                    </table>
                    <br> <br> Some examples of POST payloads for some orders are below...
                body:
                    application/xml:
                        example: |
                            <!--
                                an example of an area code search and order type
                            -->
                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                            <Order>
                                <CustomerOrderId>123456789</CustomerOrderId>
                                <Name>Area Code Order</Name>
                                <BackOrderRequested>false</BackOrderRequested>
                                <AreaCodeSearchAndOrderType>
                                    <AreaCode>435</AreaCode>
                                    <Quantity>1</Quantity>
                                </AreaCodeSearchAndOrderType>
                                <PartialAllowed>true</PartialAllowed>
                                <SiteId>743</SiteId>
                            </Order>
                            <!--
                                an alternative example of a NPA-NXX search and order type
                            -->
                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                            <Order>
                                <CustomerOrderId>123456789</CustomerOrderId>
                                <Name>Area Code Order</Name>
                                <BackOrderRequested>false</BackOrderRequested>
                                <NPANXXSearchAndOrderType>
                                    <NpaNxx>919439</NpaNxx>
                                    <EnableTNDetail>true</EnableTNDetail>
                                    <EnableLCA>false</EnableLCA>
                                    <Quantity>1</Quantity>
                                </NPANXXSearchAndOrderType>
                                <PartialAllowed>true</PartialAllowed>
                                <SiteId>743</SiteId>
                            </Order>
                            <!--
                                an example of combined search and order type
                            -->
                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                            <Order>
                                <CustomerOrderId>123456789</CustomerOrderId>
                                <Name>Area Code Order</Name>
                                <BackOrderRequested>false</BackOrderRequested>
                                <CombinedSearchAndOrderType>
                                    <NpaNxx>919439</NpaNxx>
                                    <City>RALEIGH</City>
                                    <State>NC</State>
                                    <EnableLCA>false</EnableLCA>
                                    <Quantity>1</Quantity>
                                </CombinedSearchAndOrderType>
                                <PartialAllowed>true</PartialAllowed>
                                <SiteId>743</SiteId>
                            </Order>
                            <!--
                                an example of combined search and order type for local vanity
                            -->
                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                            <Order>
                                <CustomerOrderId>123456789</CustomerOrderId>
                                <Name>Local Vanity Order</Name>
                                <CombinedSearchAndOrderType>
                                    <AreaCode>617</AreaCode>
                                    <LocalVanity>newcars</LocalVanity>
                                    <Quantity>1</Quantity>
                                </CombinedSearchAndOrderType>
                                <SiteId>743</SiteId>
                            </Order>
                            <!--
                                a  example of an existing number order type
                            -->
                            <Order>
                                <CustomerOrderId>123456789</CustomerOrderId>
                                <Name>Existing Number Order</Name>
                                <ExistingTelephoneNumberOrderType>
                                    <TelephoneNumberList>
                                        <TelephoneNumber>9193752369</TelephoneNumber>
                                        <TelephoneNumber>9193752720</TelephoneNumber>
                                        <TelephoneNumber>9193752648</TelephoneNumber>
                                    </TelephoneNumberList>
                                    <ReservationIdList>
                                        <ReservationId>[GUID]</ReservationId>
                                        <ReservationId>[GUID]</ReservationId>
                                    </ReservationIdList>
                                </ExistingTelephoneNumberOrderType>
                                <SiteId>743</SiteId>
                            </Order>
                            <!-- a final example of an example of combined search with establishing Protected status -->
                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                            <Order>
                                <CustomerOrderId>123456789</CustomerOrderId>
                                <Name>Area Code Order</Name>
                                <BackOrderRequested>false</BackOrderRequested>
                                <CombinedSearchAndOrderType>
                                    <NpaNxx>919439</NpaNxx>
                                    <City>RALEIGH</City>
                                    <State>NC</State>
                                    <EnableLCA>false</EnableLCA>
                                    <Quantity>1</Quantity>
                                </CombinedSearchAndOrderType>
                                <TnAttributes>
                                        <TnAttribute>Protected</TnAttribute>
                                </TnAttributes>
                                <PartialAllowed>true</PartialAllowed>
                                <SiteId>743</SiteId>
                            </Order>
                responses:
                    201:
                        description: An Order has been successfully placed.
                        body:
                            application/xml:
                                example: |
                                    <OrderResponse>
                                        <Order>
                                            <CustomerOrderId>123456789</CustomerOrderId>
                                            <id>34adcd9f-2c4a-4631-9dae-d1f318ed57bc</id>
                                            <Name>Zip Order</Name>
                                            <OrderCreateDate>2014-07-11T17:13:57.788Z</OrderCreateDate>
                                            <BackOrderRequested>false</BackOrderRequested>
                                            <ZIPSearchAndOrderType>
                                                <Quantity>1</Quantity>
                                                <Zip>27606</Zip>
                                            </ZIPSearchAndOrderType>
                                            <TnAttributes>
                                                    <TnAttribute>Protected</TnAttribute>
                                            </TnAttributes>
                                            <PartialAllowed>true</PartialAllowed>
                                            <SiteId>3013</SiteId>
                                        </Order>
                                    </OrderResponse>
                    400:
                        description: One or more of the input parameters are invalid.
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <OrderResponse>
                                        <ErrorList>
                                            <Error>
                                                <Code>5016</Code>
                                                <Description>The SiteId submitted is invalid.</Description>
                                            </Error>
                                        </ErrorList>
                                        <Order>
                                            <CustomerOrderId>123456789</CustomerOrderId>
                                            <Name>Area Code Order</Name>
                                            <OrderCreateDate>2014-07-08T14:29:13.174Z</OrderCreateDate>
                                            <BackOrderRequested>false</BackOrderRequested>
                                            <AreaCodeSearchAndOrderType>
                                                <AreaCode>435</AreaCode>
                                                <Quantity>1</Quantity>
                                            </AreaCodeSearchAndOrderType>
                                            <TnAttributes>
                                                    <TnAttribute>Protected</TnAttribute>
                                            </TnAttributes>
                                            <PartialAllowed>true</PartialAllowed>
                                            <SiteId>763</SiteId>
                                        </Order>
                                    </OrderResponse>
            /{orderid}: 
                description: |
                    The orderid is an explicit link to a single new number order in the Bandwidth Dashboard, and can be used to retrieve information about that new number order including:
                    <ul>
                    <li>Order status information</li>
                    <li>Order outcome</li>
                    <li>order created and modified dates</li>
                    <li>The telephone numbers that were successfully ordered</li>
                    <li>The details of the order request</li>
                    </ul>
                get:
                    description: GET all of the details associated with an identified order
                    queryParameters: 
                        tndetail:
                            description: if true, and extended payload describing details about the ordered telephone numbers will be provided
                            type: boolean
                            example: true
                            default: false
                    responses:
                        200:
                            body:
                                application/xml:
                                    example: |
                                        <OrderResponse>
                                            <CompletedQuantity>1</CompletedQuantity>
                                            <CreatedByUser>jbm</CreatedByUser>
                                            <LastModifiedDate>2014-01-06T19:09:44.027Z</LastModifiedDate>
                                            <OrderCompleteDate>2014-01-06T19:09:44.041Z</OrderCompleteDate>
                                            <Order>
                                                <CustomerOrderId>123456789</CustomerOrderId>
                                                <Name>Area Code Order</Name>
                                                <OrderCreateDate>2014-01-06T19:09:43.695Z</OrderCreateDate>
                                                <PeerId>303716</PeerId>
                                                <BackOrderRequested>false</BackOrderRequested>
                                                <AreaCodeSearchAndOrderType>
                                                    <AreaCode>804</AreaCode>
                                                    <Quantity>1</Quantity>
                                                </AreaCodeSearchAndOrderType>
                                                <TnAttributes>
                                                        <TnAttribute>Protected</TnAttribute>
                                                </TnAttributes>
                                                <PartialAllowed>true</PartialAllowed>
                                                <SiteId>743</SiteId>
                                            </Order>
                                            <OrderStatus>COMPLETE</OrderStatus>
                                            <CompletedNumbers>
                                                <TelephoneNumber>
                                                    <FullNumber>8042105666</FullNumber>
                                                </TelephoneNumber>
                                            </CompletedNumbers>
                                            <FailedQuantity>0</FailedQuantity>
                                        </OrderResponse>
                put:
                    description: |
                        With the introduction of Backorder capabilities, new number orders may stay in backordered state while the order is filled.   While in this state it is possible to update the modifiable fields in the record, as well as to request that backorder processing of the order be ended.
                        The fields that can be updated are...
                        <ul>
                        <li>The order name</li>
                        <li>The customer order id</li>
                        <li>The backordered state.</li>
                        </ul>
                        Specifying a &lt;CloseOrder&gt; value of true will cancel the backorder request, leaving the currently ordered numbers on the account.  No further numbers will be added to the account as a result of the order.
                    body:
                        application/xml:
                            example: |
                                <?xml version="1.0" encoding="UTF-8"?>
                                <Order>
                                    <Name>Available Telephone Number order</Name>    
                                    <CustomerOrderId>123456789</CustomerOrderId>
                                    <CloseOrder>true</CloseOrder>
                                </Order>
                    responses:
                        200:
                            description: The order has been successfully updated.   The payload contains no content, but a 200 OK indicates success.
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <OrderResponse/>
                        400:
                            description: The request payload is invalid
                        404:
                            description: The order-id cannot be found
                /areaCodes: 
                    description: Retrieves the area codes of the phone numbers from the specified order.
                    get:
                        description: Retrieves the area codes of the phone numbers from the specified order.
                        responses:
                            200:
                                body:
                                    application/xml:
                                        example: |
                                            <TelephoneDetailsReports>
                                                <TelephoneDetailsReport>
                                                    <AreaCode>888</AreaCode>
                                                    <Count>1</Count>
                                                </TelephoneDetailsReport>
                                            </TelephoneDetailsReports>
                /npaNxx: 
                    description: Retrieves the Npa-Nxx of the phone numbers from the specified order.
                    get:
                        description: Retrieves the Npa-Nxx of the phone numbers from the specified order.
                        responses:
                            200:
                                body:
                                    application/xml:
                                        example: |
                                            <TelephoneDetailsReports>
                                                <TelephoneDetailsReport>
                                                    <NPA-NXX>888424</NPA-NXX>
                                                    <Count>1</Count>
                                                </TelephoneDetailsReport>
                                            </TelephoneDetailsReports>
                /totals: 
                    description: Retrieves the total quantity of phone numbers from the specified order.
                    get:
                        description: Retrieves the total quantity of phone numbers from the specified order.
                        responses:
                            200:
                                body:
                                    application/xml:
                                        example: |
                                            <TelephoneDetailsReports>
                                                <TelephoneDetailsReport>
                                                    <NPA-NXX>888424</NPA-NXX>
                                                    <Count>1</Count>
                                                </TelephoneDetailsReport>
                                            </TelephoneDetailsReports>
                /tns: 
                    description: The TNs resource accesses the Telephone Numbers associated with the given order ID of the given site ID of the given account.
                    get:
                        description: returns a list of phone numbers associated with the ID of a given account.
                        responses:
                            200:
                                body:
                                    application/xml:
                                        example: |
                                            <TelephoneNumbers>
                                                <Count>1</Count>
                                                <TelephoneNumber>8042105666</TelephoneNumber>
                                            </TelephoneNumbers>
                /notes:   
                    # note that this file is shared between 5 order types - 
                    #  - orders
                    #  - disconnects
                    #  - portins
                    #  - portouts
                    #  - inporttoaccount
                    #  - lidbs
                    #  - dldas
                    # 
                    description: |
                        The /notes resource manages a note or set of notes associated with an order.  Notes can only be appended to the collection, and are not individually addressable or modifiable once added.
                    post:
                        description: Updates the Notes resource by adding a note.
                        body:
                            application/xml:
                                example:
                                    <?xml version="1.0" encoding="UTF-8"?>
                                    <Note>
                                       <UserId>user id</UserId>
                                       <Description>note text</Description>
                                       <Internal>false</Internal>   <!-- note created by admin is implicitly internal unless this tag with "false" value is specified -->
                                    </Note>
                        responses:
                            201:
                                description: CREATED - the note has been created and added to the collection of notes associated with the order.  A link to the note is included in the Location header of the response.  No body is returned
                            400:
                                description: Bad Request - the note has not been created because the payload is incomplete or in error.  An error payload is provided in the repsonse.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <NoteResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12501</ErrorCode>
                                                    <Description>Username is required</Description>
                                                </ResponseStatus>
                                            </NoteResponse>           
                    get:
                        description: Retrieve the set of notes associated with an order.
                        responses:
                            200:
                                description: OK - there are Notes associated with the order, and they have been returned in the response.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <Notes>
                                                <Note>
                                                    <Id>87037</Id>
                                                    <UserId>jbm</UserId>
                                                    <Description>This is a test note</Description>
                                                    <LastDateModifier>2014-11-16T04:01:10.000Z</LastDateModifier>
                                                    <Internal>false</Internal>    <!-- admin only -->
                                                </Note>
                                                <Note>
                                                    <Id>87039</Id>
                                                    <UserId>smckinnon</UserId>
                                                    <Description>This is a second test note</Description>
                                                    <LastDateModifier>2014-11-16T04:08:46.000Z</LastDateModifier>
                                                    <Internal>false</Internal>    <!-- admin only -->
                                                </Note>
                                            </Notes>                    
                            204:
                                description: No Content - there are no Notes associated with the order.  Since the notes resource is an aggregate rather than addressed resource the generic no content response is used, rather than a 404 as would be used if the resource was addressed with an identifier
                /history: 
                    description: |
                        History information is available on orders that have gone through multiple transitions, which is possible in the case that telephone numbers are backordered.  In this case the order will have one or more OrderHistory records associated with it, detailing the set of events that have affected the order.
                    get:
                        description: |
                            Retrieve the history information associated with an order
                        responses:    
                            200:
                                description: |
                                    The history payload is a set of history records, each of which contains:
                                    <ul>
                                    <li>the event date and time</li>
                                    <li>a message describing the event</li>
                                    <li>the user causing the event</li>
                                    <li>the order status at the time of the event</li>
                                    </ul>
                                    In the case of an order with no events other than creation, the payload will be empty.
                                body: 
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <OrderHistoryWrapper>
                                                <OrderHistory>
                                                    <OrderDate>2014-05-20T14:21:43.937Z</OrderDate>
                                                    <Note>Order backordered - awaiting additional numbers</Note>
                                                    <Author>System</Author>
                                                    <Status>BACKORDERED</Status>
                                                </OrderHistory>
                                                <OrderHistory>
                                                    <OrderDate>2014-05-20T14:24:43.428Z</OrderDate>
                                                    <Note>Order backordered - awaiting additional numbers</Note>
                                                    <Author>System</Author>
                                                    <Status>BACKORDERED</Status>
                                                    <Difference>CustomerOrderId : "" --&gt; hello</Difference>
                                                </OrderHistory>
                                            </OrderHistoryWrapper>
                /adminparameters: 
                    # this file is shared between 6 order types - 
                    #  - orders
                    #  - portins
                    #  - portouts
                    #  - LSR orders
                    #  - E911 orders
                    #  - TN Option orders
                    # 
                    description: |
                        The /adminparameters resource contains two pieces of information...
                        <ul>
                          <li>The "activity state" of the order - a classification of what the state the order is in from the perspective of the Bandwidth staff member.</li>
                          <ul>
                            <li>Quiet - the order is automaticly progressing through the work flow and nothing needs to be done.  This is the default state</li>
                            <li>Changed - something has changed in the order, and should be examined by a staff member</li>
                            <li>Seen - the order has been examined by the staff member, and if required, action is being taken</li>
                            <li>Responded - a response has been provided to the customer</li>
                          </ul>
                          <li>The name or handle of the Bandwidth staff member that is caring for the order</li>
                        </ul>
                        This resource is used by Bandwidth in managing multiple types of orders. <br><br> There is only one instance of the adminparameters resource associated with an order.  The resource is assigned when it is needed, so an order that is flowing through the workflow without errors will likely not have an instance of adminparameters.
                    put:
                        description: Updates the admin parameters associated with an order.  Removing an element will result in resetting the element to the default value.
                        body:
                            application/xml:
                                example:
                                    <?xml version="1.0"?>
                                    <AdminParameters>
                                        <!-- Optional - Default value is Quiet-->
                                        <ActivityState>Changed</ActivityState>
                                        <!-- Optional -->
                                        <BandwidthPrime>James T Kirk</BandwidthPrime>
                                    </AdminParameters>
                        responses:
                            201:
                                description: CREATED - the admin parameters resource has been created and populated as directed.
                            200:
                                description: OK - The previously created resource has been updated as directed.
                            404:
                                description: Bad Request - some error is present in the payload, and the the Admin Parameters have not been changed.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AdminParametersResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>15517</ErrorCode>
                                                    <Description>Invalid 'activityState'. Valid values are changed, seen, responded, quiet</Description>
                                                </ResponseStatus>
                                            </AdminParametersResponse>        
                    get:
                        description: Retrieve the admin parameters associated with an order.
                        responses:
                            200:
                                description: OK - there are admin parameters associated with the order, and they have been returned in the response.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AdminParametersResponse>
                                                <AdminParameters>
                                                    <ActivityState>responded</ActivityState>
                                                    <BandwidthPrime>James T Kirk</BandwidthPrime>
                                                </AdminParameters>
                                            </AdminParametersResponse>                    
                            404:
                                description: NOT FOUND - No admin parameters have been associated with this order id (or the orderid cannot be found in the system).  For a valid orderid this is interpreted as a "Quiet" <ActivityState>.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AdminParametersResponse>
                                                <ResponseStatus>
                                                    <Description>The resource does not exist</Description>
                                                </ResponseStatus>
                                            </AdminParametersResponse>     
                    delete:
                        description: Remove the admin parameters associated with an order
                        responses:
                            200:
                                description: OK - the admin parameters have been removed from the order
                            400:
                                description: BAD REQUEST - typically this means that the order-id is incorrect.
                                body:
                                    application/xml:
                                        example:
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AdminParametersResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>5035</ErrorCode>
                                                    <Description>port_in order f58f47a5-f9f5-4dd2-8687-a615b2fe86cd9 not found.</Description>
                                                </ResponseStatus>
                                            </AdminParametersResponse>
        /portins: 
            description: |
                The portins endpoint is used to manage requests to port a number into the Bandwidth Dashboard.  Like many other requests, the portins endpoint causes the creation of an <b>order</b> that is used to manage the porting event throughout the lifecycle of the request.
                The various sub-resources and methods are covered in greater detail below.
                The elements used or supplied in the payloads are described in the following table...
                <table border="1" cellspacing="0" cellpadding="0" width="624">
                    <tbody>
                        <tr>
                            <td valign="top">
                                <p>
                                    <strong>Parameter</strong>
                                </p>
                            </td>
                            <td valign="top">
                                <p>
                                    <strong>Required</strong>
                                </p>
                            </td>
                            <td width="351" valign="top">
                                <p>
                                    <strong>Description</strong>
                                </p>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <p>
                                    accountid
                                </p>
                            </td>
                            <td valign="top">
                                <p align="center">
                                    No
                                </p>
                            </td>
                            <td width="351" valign="top">
                                <p>
                                    The account ID for porting the numbers.
                                </p>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <p>
                                    CustomerOrderId
                                </p>
                            </td>
                            <td valign="top">
                                <p align="center">
                                    No
                                </p>
                            </td>
                            <td width="351" valign="top">
                                <p>
                                    Internal customer order id for tracking the order
                                </p>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <p>
                                    RequestedFocDate
                                </p>
                            </td>
                            <td valign="top">
                                <p align="center">
                                    No
                                </p>
                            </td>
                            <td width="351" valign="top">
                                <p>
                                    If not entered, the next available FOC date will be used. It if is entered, order will be rejected if date is earlier than losing carriers
                                    minimum number of days to port-out or if date is a weekend or holiday. Format is ISO8601 encoding of ZULU/UTC/GMT such as
                                    “2013-05-10T15:14:22Z”.
                                </p>
                                <p>
                                    If the port is capable of on demand activation then the time value in the request considered to be the default activation time of the port.
                                </p>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <p>
                                    AlternateSpid
                                </p>
                            </td>
                            <td valign="top">
                                <p align="center">
                                    No
                                </p>
                            </td>
                            <td width="351" valign="top">
                                <p>
                                    Unique customer SPID associated with Bandwidth.
                                </p>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <p>
                                    BillingTelephoneNumber
                                </p>
                            </td>
                            <td valign="top">
                                <p align="center">
                                    Yes
                                </p>
                            </td>
                            <td width="351" valign="top">
                                <p>
                                    Account or Billing telephone number for order. Porting telephone number for most wireline ports.
                                </p>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <p>
                                    SubscriberType
                                </p>
                            </td>
                            <td valign="top">
                                <p align="center">
                                    Yes
                                </p>
                            </td>
                            <td width="351" valign="top">
                                <p>
                                    (BUSINESS, RESIDENTIAL) If residential, order will be rejected if a BusinessName is entered.
                                </p>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <p>
                                    BusinessName
                                </p>
                            </td>
                            <td valign="top">
                                <p align="center">
                                    No
                                </p>
                            </td>
                            <td width="351" valign="top">
                                <p>
                                    Subscriber business name.
                                </p>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <p>
                                    FirstName
                                </p>
                            </td>
                            <td valign="top">
                                <p align="center">
                                    No
                                </p>
                            </td>
                            <td width="351" valign="top">
                                <p>
                                    Subscriber first name.
                                </p>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <p>
                                    MiddleInitial
                                </p>
                            </td>
                            <td valign="top">
                                <p align="center">
                                    No
                                </p>
                            </td>
                            <td width="351" valign="top">
                                <p>
                                    Subscriber middle initial.
                                </p>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <p>
                                    LastName
                                </p>
                            </td>
                            <td valign="top">
                                <p align="center">
                                    No
                                </p>
                            </td>
                            <td width="351" valign="top">
                                <p>
                                    Subscriber last name.
                                </p>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <p>
                                    HouseNumber
                                </p>
                            </td>
                            <td valign="top">
                                <p align="center">
                                    Yes
                                </p>
                            </td>
                            <td width="351" valign="top">
                                <p>
                                    Street address number.
                                </p>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <p>
                                    HousePrefix
                                </p>
                            </td>
                            <td valign="top">
                                <p align="center">
                                    No
                                </p>
                            </td>
                            <td width="351" valign="top">
                                <p>
                                    Street address number prefix
                                </p>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <p>
                                    HouseSuffix
                                </p>
                            </td>
                            <td valign="top">
                                <p align="center">
                                    No
                                </p>
                            </td>
                            <td width="351" valign="top">
                                <p>
                                    Street address number suffix.
                                </p>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <p>
                                    PreDirectional
                                </p>
                            </td>
                            <td valign="top">
                                <p align="center">
                                    No
                                </p>
                            </td>
                            <td width="351" valign="top">
                                <p>
                                    Street address pre-directional.
                                </p>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <p>
                                    StreetName
                                </p>
                            </td>
                            <td valign="top">
                                <p align="center">
                                    Yes
                                </p>
                            </td>
                            <td width="351" valign="top">
                                <p>
                                    Street name.
                                </p>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <p>
                                    StreetSuffix
                                </p>
                            </td>
                            <td valign="top">
                                <p align="center">
                                    No
                                </p>
                            </td>
                            <td width="351" valign="top">
                                <p>
                                    Street suffix.
                                </p>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <p>
                                    PostDirectional
                                </p>
                            </td>
                            <td valign="top">
                                <p align="center">
                                    No
                                </p>
                            </td>
                            <td width="351" valign="top">
                                <p>
                                    Street address post directional.
                                </p>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <p>
                                    AddressLine2
                                </p>
                            </td>
                            <td valign="top">
                                <p align="center">
                                    No
                                </p>
                            </td>
                            <td width="351" valign="top">
                                <p>
                                    Put unit, suite, floor, etc. here.
                                </p>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <p>
                                    City
                                </p>
                            </td>
                            <td valign="top">
                                <p align="center">
                                    Yes
                                </p>
                            </td>
                            <td width="351" valign="top">
                                <p>
                                    City.
                                </p>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <p>
                                    StateCode
                                </p>
                            </td>
                            <td valign="top">
                                <p align="center">
                                    Yes
                                </p>
                            </td>
                            <td width="351" valign="top">
                                <p>
                                    Two letter state code.
                                </p>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <p>
                                    Zip
                                </p>
                            </td>
                            <td valign="top">
                                <p align="center">
                                    Yes
                                </p>
                            </td>
                            <td width="351" valign="top">
                                <p>
                                    Zip code.
                                </p>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <p>
                                    PlusFour
                                </p>
                            </td>
                            <td valign="top">
                                <p align="center">
                                    No
                                </p>
                            </td>
                            <td width="351" valign="top">
                                <p>
                                    Zip + 4.
                                </p>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <p>
                                    Country
                                </p>
                            </td>
                            <td valign="top">
                                <p align="center">
                                    No
                                </p>
                            </td>
                            <td width="351" valign="top">
                                <p>
                                    Country.
                                </p>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <p>
                                    AddressDetail1, AddressValue1, AddressDetail2, AddressValue2, AddressDetail3, AddressValue3
                                </p>
                            </td>
                            <td valign="top">
                                <p align="center">
                                    No
                                </p>
                            </td>
                            <td width="351" valign="top">
                                <p>
                                    Additional details can optionally be added to the address to specify address refinements such as Building, Basement, etc.
                                    <br/>
                                    <br/>
                                    See the USPS Postal Address Format - pub28 for detail.
                                </p>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <p>
                                    LoaAuthorizingPerson
                                </p>
                            </td>
                            <td valign="top">
                                <p align="center">
                                    Yes
                                </p>
                            </td>
                            <td width="351" valign="top">
                                <p>
                                    First and last name of person who authorized LOA.
                                </p>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <p>
                                    AccountNumber
                                </p>
                            </td>
                            <td valign="top">
                                <p align="center">
                                    No
                                </p>
                            </td>
                            <td width="351" valign="top">
                                <p>
                                    Account number, typically required for wireless ports.
                                </p>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <p>
                                    PinNumber
                                </p>
                            </td>
                            <td valign="top">
                                <p align="center">
                                    No
                                </p>
                            </td>
                            <td width="351" valign="top">
                                <p>
                                    PIN Number, often required for wireless ports.
                                </p>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <p>
                                    PhoneNumber
                                </p>
                            </td>
                            <td valign="top">
                                <p align="center">
                                    Yes
                                </p>
                            </td>
                            <td width="351" valign="top">
                                <p>
                                    Ten digit phone number with no dots or dashes. One or more is required. Use a PhoneNumber tag for each phone number in the list.
                                </p>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <p>
                                    siteid
                                </p>
                            </td>
                            <td valign="top">
                                <p align="center">
                                    Yes
                                </p>
                            </td>
                            <td width="351" valign="top">
                                <p>
                                    See section on Sites
                                </p>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <p>
                                    PeerId
                                </p>
                            </td>
                            <td valign="top">
                                <p align="center">
                                    No
                                </p>
                            </td>
                            <td width="351" valign="top">
                                <p>
                                    See section on SIP Peers
                                </p>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <p>
                                    PartialPort
                                </p>
                            </td>
                            <td valign="top">
                                <p align="center">
                                    No
                                </p>
                            </td>
                            <td width="351" valign="top">
                                <p>
                                    By default all portin orders are classified as full ports. If the attribute PartialPort is specified as true, the order will be submitted
                                    as a partial port
                                </p>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <p>
                                    Triggered
                                </p>
                            </td>
                            <td valign="top">
                                <p align="center">
                                    No
                                </p>
                            </td>
                            <td width="351" valign="top">
                                <p>
                                    (true|false)
                                    <br/>
                                    If present and set to true, this port will be treated as one that will be manually activated. If this value is set it is assumed that the
                                    customer will manually activate the port, and that the Bandwidth Dashboard will activate the port at a default activation time if the
                                    customer does not manually activate the port. This is not supported for wireless ports, and cannot be changed via a SUPP.
                                </p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            get:
                description: Retrieves the port-in requests for the given account ID.
                queryParameters:
                    page:
                        description: The port-in ID of the first order of the page. "1" is used as a convention for the first port-in in the account ID.
                        type: string
                        required: true
                        default: 1
                        example: ca8065d1-ec1a-43da-af40-1dcee43becb5
                    size:
                        description: The number of port-ins retrieved. 
                        type: integer
                        required: true
                        default: 300
                        example: 30
                    status:
                        description: Displays the port-ins with the given status.
                        type: string
                        example: complete
                    date:
                        description: The date of when the order was placed.
                        type: date
                        example: 2014-08-01
                    startdate:
                        description: |
                            The earliest date that the order was last modified. <strong>NOTE: </strong> startdate and enddate must be simultaneously declared.
                        type: date
                        example: 2014-08-05
                    enddate:
                        description: |
                            The latest date that the order was last modified. <strong>NOTE: </strong> startdate and enddate must be simultaneously declared.
                        type: date
                        example: 2014-08-05
                    tn:
                        description: The billing telephone number associated with the port-ins
                        type: integer
                        example: 9191234567
                    pon:
                        description: The port order number
                        type: string
                responses:
                    200:
                        description: The port-ins have been successfully retrieved.
                        body:
                            application/xml:
                                example: |
                                    <LNPResponseWrapper>
                                        <TotalCount>3176</TotalCount>
                                        <Links>
                                            <first> -- link -- </first>
                                            <next> -- link -- </next>
                                        </Links>
                                        <lnpPortInfoForGivenStatus>
                                            <CountOfTNs>1</CountOfTNs>
                                            <userId>Neustar</userId>
                                            <lastModifiedDate>2014-11-21T14:00:33.836Z</lastModifiedDate>
                                            <OrderDate>2014-11-05T19:34:53.176Z</OrderDate>
                                            <OrderId>982e3c10-3840-4251-abdd-505cd8610788</OrderId>
                                            <OrderType>port_out</OrderType>
                                            <ErrorCode>200</ErrorCode>
                                            <ErrorMessage>Port out successful.</ErrorMessage>
                                            <FullNumber>9727717577</FullNumber>
                                            <ProcessingStatus>COMPLETE</ProcessingStatus>
                                            <RequestedFOCDate>2014-11-20T00:00:00.000Z</RequestedFOCDate>
                                            <VendorId>512E</VendorId>
                                        </lnpPortInfoForGivenStatus>
                                        <Snip>   ---   </Snip>
                                        <lnpPortInfoForGivenStatus>
                                            <CountOfTNs>1</CountOfTNs>
                                            <userId>Neustar</userId>
                                            <lastModifiedDate>2015-03-30T14:01:59.049Z</lastModifiedDate>
                                            <OrderDate>2015-03-24T17:47:17.605Z</OrderDate>
                                            <OrderId>f8f02d0a-d1a4-42eb-8f45-ce8187cd73ff</OrderId>
                                            <OrderType>port_out</OrderType>
                                            <ErrorCode>200</ErrorCode>
                                            <ErrorMessage>Port out successful.</ErrorMessage>
                                            <FullNumber>2092660315</FullNumber>
                                            <ProcessingStatus>COMPLETE</ProcessingStatus>
                                            <RequestedFOCDate>2015-03-27T00:00:00.000Z</RequestedFOCDate>
                                            <VendorId>512E</VendorId>
                                        </lnpPortInfoForGivenStatus>
                                    </LNPResponseWrapper>
            post:
                description: |
                    Creates a port-in request under the given site ID and sippeer ID as specified in the body.<br>
                    Upon a successfully-submitted payload, the order will have a status of "PENDING_DOCUMENTS".<br>
                    In order to have a successful POST, the payload will need to have a specific <strong>site ID</strong> and <strong>sippeer ID</strong>, according to the account.
                    <br><br>
                    <strong>TnAttributes</strong> - attributes to be assigned to the telephone number. Optional parameter. Possible values: "Protected"
                body:
                    application/xml:
                        example: |
                            <LnpOrder>
                                <RequestedFocDate>2016-03-25T21:15:00.000Z</RequestedFocDate>
                                <!-- OPTIONAL -->
                                <AlternateSpid>X455</AlternateSpid>
                                <!-- OPTIONAL -->
                                <BillingTelephoneNumber>9195551234</BillingTelephoneNumber>
                                <SiteId>    SITE ID     </SiteId>
                                <PeerId>  SIPPEER ID    </PeerId>
                                <Subscriber>
                                    <SubscriberType>BUSINESS</SubscriberType>
                                    <FirstName>First</FirstName>
                                    <LastName>Last</LastName>
                                    <ServiceAddress>
                                        <HouseNumber>11235</HouseNumber>
                                        <StreetName>Back</StreetName>
                                        <City>Denver</City>
                                        <StateCode>CO</StateCode>
                                        <Zip>27541</Zip>
                                        <County>Canyon</County>
                                    </ServiceAddress>
                                </Subscriber>
                                <LoaAuthorizingPerson>The Authguy</LoaAuthorizingPerson>
                                <WirelessInfo>
                                    <AccountNumber>771297665AABC</AccountNumber>
                                    <PinNumber>1234</PinNumber>
                                </WirelessInfo>
                                <TnAttributes>
                                        <TnAttribute>Protected</TnAttribute>
                                </TnAttributes>
                                <ListOfPhoneNumbers>
                                    <PhoneNumber>9194809871</PhoneNumber>
                                </ListOfPhoneNumbers>
                                <Triggered>true</Triggered>
                                <Immediately>false</Immediately>
                                <BillingType>PORTIN</BillingType>
                            </LnpOrder>
                responses:
                    201:
                        description: The order has been created and an order ID will be specified in the payload and in the header.
                        body:
                            application/xml:
                                example: |
                                    <LnpOrderResponse>
                                        <OrderId>03f194d5-3932-4e9f-8ba1-03ef767985e5</OrderId>
                                        <Status>
                                            <Code>201</Code>
                                            <Description>Order request received. Please use the order id to check the status of your order later.</Description>
                                        </Status>
                                        <ProcessingStatus>PENDING_DOCUMENTS</ProcessingStatus>
                                        <RequestedFocDate>2016-03-25T21:15:00.000Z</RequestedFocDate>
                                        <LoaAuthorizingPerson>The Authguy</LoaAuthorizingPerson>
                                        <Subscriber>
                                            <SubscriberType>BUSINESS</SubscriberType>
                                            <FirstName>First</FirstName>
                                            <LastName>Last</LastName>
                                            <ServiceAddress>
                                                <HouseNumber>11235</HouseNumber>
                                                <StreetName>Back</StreetName>
                                                <City>Denver</City>
                                                <StateCode>CO</StateCode>
                                                <Zip>27541</Zip>
                                                <County>Canyon</County>
                                                <Country>United States</Country>
                                            </ServiceAddress>
                                        </Subscriber>
                                        <WirelessInfo>
                                            <AccountNumber>771297665AABC</AccountNumber>
                                            <PinNumber>1234</PinNumber>
                                        </WirelessInfo>
                                        <TnAttributes>
                                                <TnAttribute>Protected</TnAttribute>
                                        </TnAttributes>
                                        <BillingTelephoneNumber>9195551234</BillingTelephoneNumber>
                                        <ListOfPhoneNumbers>
                                            <PhoneNumber>9194809871</PhoneNumber>
                                        </ListOfPhoneNumbers>
                                        <Triggered>true</Triggered>
                                        <BillingType>PORTIN</BillingType>
                                        <OverrideValidation>false</OverrideValidation>
                                    </LnpOrderResponse>
                    400:
                        description: The order failed; one of the input parameters is invalid.
                        body:
                            application/xml:
                                example: |
                                    <LnpOrderResponse>
                                        <Status>
                                            <Code>400</Code>
                                            <Description>Validation Failed. Please check your input parameters.</Description>
                                        </Status>
                                        <Errors>
                                            <Code>7309</Code>
                                            <Description>The site id was not supplied or is invalid.</Description>
                                        </Errors>
                                        <Errors>
                                            <Code>7312</Code>
                                            <Description>The sippeer id is invalid.</Description>
                                        </Errors>
                                        <Errors>
                                            <Code>7398</Code>
                                            <Description>Protected status is not available for numbers in off-net rate centers.</Description>
                                        </Errors>
                                        <ProcessingStatus>EXCEPTION</ProcessingStatus>
                                        <LoaAuthorizingPerson>The Authguy</LoaAuthorizingPerson>
                                        <Subscriber>
                                            <SubscriberType>BUSINESS</SubscriberType>
                                            <FirstName>First</FirstName>
                                            <LastName>Last</LastName>
                                            <ServiceAddress>
                                                <HouseNumber>11235</HouseNumber>
                                                <StreetName>Back</StreetName>
                                                <City>Denver</City>
                                                <StateCode>CO</StateCode>
                                                <Zip>27541</Zip>
                                                <County>Canyon</County>
                                                <Country>United States</Country>
                                            </ServiceAddress>
                                        </Subscriber>
                                        <WirelessInfo>
                                            <AccountNumber>771297665AABC</AccountNumber>
                                            <PinNumber>1234</PinNumber>
                                        </WirelessInfo>
                                        <TnAttributes>
                                                <TnAttribute>Protected</TnAttribute>
                                        </TnAttributes>
                                        <BillingTelephoneNumber>9195551234</BillingTelephoneNumber>
                                        <ListOfPhoneNumbers>
                                            <PhoneNumber>9194809871</PhoneNumber>
                                        </ListOfPhoneNumbers>
                                        <Triggered>true</Triggered>
                                        <BillingType>PORTIN</BillingType>
                                        <OverrideValidation>false</OverrideValidation>
                                    </LnpOrderResponse>
            /{orderid}: 
                description: |
                    This resource retrieves information associated with the port-in associated with the ID number specified.
                get:
                    description: Retrieves the information associated with the specified port-in ID number.
                    responses:
                        200:
                            description: The information has been successfully retrieved and displayed in the payload.
                            body:
                                application/xml:
                                    example: |
                                        <LnpOrderResponse>
                                            <Errors>
                                                <Code>7205</Code>
                                                <Description>Telephone number is already being processed on another order</Description>
                                            </Errors>
                                            <ProcessingStatus>CANCELLED</ProcessingStatus>
                                            <CustomerOrderId>SJM00002</CustomerOrderId>
                                            <LoaAuthorizingPerson>The Authguy</LoaAuthorizingPerson>
                                            <Subscriber>
                                                <SubscriberType>BUSINESS</SubscriberType>
                                                <FirstName>First</FirstName>
                                                <LastName>Last</LastName>
                                                <ServiceAddress>
                                                    <HouseNumber>11235</HouseNumber>
                                                    <StreetName>Back</StreetName>
                                                    <City>Denver</City>
                                                    <StateCode>CO</StateCode>
                                                    <Zip>27541</Zip>
                                                    <County>Canyon</County>
                                                    <Country>United States</Country>
                                                    <AddressType>Service</AddressType>
                                                </ServiceAddress>
                                            </Subscriber>
                                            <WirelessInfo>
                                                <AccountNumber>771297665AABC</AccountNumber>
                                                <PinNumber>1234</PinNumber>
                                            </WirelessInfo>
                                            <TnAttributes>
                                                <TnAttribute>Protected</TnAttribute>
                                            </TnAttributes>
                                            <BillingTelephoneNumber>9195551234</BillingTelephoneNumber>
                                            <ListOfPhoneNumbers>
                                                <PhoneNumber>9194809871</PhoneNumber>
                                            </ListOfPhoneNumbers>
                                            <AccountId>20</AccountId>
                                            <SiteId>2857</SiteId>
                                            <PeerId>317771</PeerId>
                                            <LosingCarrierName>Mock Carrier</LosingCarrierName>
                                            <VendorName>Bandwidth CLEC</VendorName>
                                            <OrderCreateDate>2014-08-04T13:37:06.323Z</OrderCreateDate>
                                            <LastModifiedDate>2014-08-04T13:37:08.676Z</LastModifiedDate>
                                            <userId>jbm</userId>
                                            <LastModifiedBy>jbm</LastModifiedBy>
                                            <PartialPort>false</PartialPort>
                                            <Immediately>false</Immediately>
                                            <Triggered>false</Triggered>
                                            <BillingType>PORTIN</BillingType>
                                            <PortType>AUTOMATED</PortType> <!-- [ AUTOMATED | INTERNAL | MANUALOFFNET ] -->
                                            <OverrideValidation>false</OverrideValidation>
                                        </LnpOrderResponse>
                put:
                    description: |
                        It is possible to change ("SUPP" in LNP terms) an existing LNP order.  This is done via a PUT on the existing order-id.
                        Since many of the entries in an LNP Order cannot be changed after the initial order is placed (the list to TNs for example) the PUT on a porting order-id does *not* require that the full order payload is included.<br/>
                        *OverrideValidation this flag will force portout to complete bypassing any validity checking (if has not terminal errors). Flag can be supped only for an orders in EXCEPTION status.
                    body:
                        application/xml:
                            example: |
                                <?xml version="1.0" encoding="UTF-8"?>
                                <LnpOrderSupp>
                                    <CustomerOrderId>SJM00002</CustomerOrderId>
                                    <RequestedFocDate>2014-12-04T13:00:00.000Z</RequestedFocDate>
                                    <BillingTelephoneNumber>8045030092</BillingTelephoneNumber>
                                    <WirelessInfo>
                                        <AccountNumber>23453245</AccountNumber>
                                        <PinNumber>1111</PinNumber>
                                    </WirelessInfo>
                                    <TnAttributes>
                                        <TnAttribute>Protected</TnAttribute>
                                    </TnAttributes>
                                    <Subscriber>
                                        <SubscriberType>RESIDENTIAL</SubscriberType>
                                        <FirstName>Steve</FirstName>
                                        <LastName>McKinnon</LastName>
                                        <ServiceAddress>
                                        <!-- If true will overwrite all address fields, 
                                             those which should be required remain required.
                                             Affect only supp. Default false. -->
                                            <ResetAddressFields>true</ResetAddressFields> 
                                            <HouseNumber>115</HouseNumber>
                                            <StreetName>Monarch Way</StreetName>
                                            <City>Cary</City>
                                            <StateCode>NC</StateCode>
                                            <Zip>27518</Zip>
                                        </ServiceAddress>
                                    </Subscriber>
                                    <SiteId>743</SiteId>
                                    <PartialPort>true</PartialPort>
                                    <LoaAuthorizingPerson>Steve McKinnon</LoaAuthorizingPerson>
                                    <Immediately>false</Immediately>
                                    <OverrideValidation>false</OverrideValidation>
                                </LnpOrderSupp>
                    responses:
                        200:
                            description: The information has been successfully retrieved and displayed in the payload.
                            body:
                                application/xml:
                                    example: |
                                        <LnpOrderResponse>
                                            <OrderId>b6080e4c-7ddf-4faa-bbd8-328a72de9297</OrderId>
                                            <Status>
                                                <Code>200</Code>
                                                <Description>Supp request received. Please use the order id to check the status of your order later.</Description>
                                            </Status>
                                            <ProcessingStatus>REQUESTED_SUPP</ProcessingStatus>
                                            <RequestedFocDate>2014-12-04T13:00:00Z</RequestedFocDate>
                                            <BillingTelephoneNumber>8045030092</BillingTelephoneNumber>
                                            <Triggered>false</Triggered>
                                            <OverrideValidation>false</OverrideValidation>
                                        </LnpOrderResponse>
                delete:
                    description: |
                        Cancels the port-in order. This does not remove the order from the system.  It simply places the existing order in a canceled state.
                        Note that only a pending port-in order can be canceled; if the order was previously canceled or completed, then a DELETE will not be possible. 
                    responses:
                        200:
                            description: The port-in order has been successfully deleted.
                        400:
                            description: The port-in order is already processed, and therefore cannot be deleted.
                            body:
                                application/xml:
                                    example: |
                                        <LnpOrderResponse>
                                            <OrderId>2ffd0af4-7c54-40dc-9bfe-40f08b57e63a</OrderId>
                                            <Status>
                                                <Code>400</Code>
                                                <Description>Validation Failed. Please check your input parameters.</Description>
                                            </Status>
                                            <Errors>
                                                <Code>7304</Code>
                                                <Description>The order is already complete and cannot be modified or cancelled</Description>
                                            </Errors>
                                            <ProcessingStatus>EXCEPTION</ProcessingStatus>
                                        </LnpOrderResponse>
                /notes: 
                    # note that this file is shared between 5 order types - 
                    #  - orders
                    #  - disconnects
                    #  - portins
                    #  - portouts
                    #  - inporttoaccount
                    #  - lidbs
                    #  - dldas
                    # 
                    description: |
                        The /notes resource manages a note or set of notes associated with an order.  Notes can only be appended to the collection, and are not individually addressable or modifiable once added.
                    post:
                        description: Updates the Notes resource by adding a note.
                        body:
                            application/xml:
                                example:
                                    <?xml version="1.0" encoding="UTF-8"?>
                                    <Note>
                                       <UserId>user id</UserId>
                                       <Description>note text</Description>
                                       <Internal>false</Internal>   <!-- note created by admin is implicitly internal unless this tag with "false" value is specified -->
                                    </Note>
                        responses:
                            201:
                                description: CREATED - the note has been created and added to the collection of notes associated with the order.  A link to the note is included in the Location header of the response.  No body is returned
                            400:
                                description: Bad Request - the note has not been created because the payload is incomplete or in error.  An error payload is provided in the repsonse.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <NoteResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12501</ErrorCode>
                                                    <Description>Username is required</Description>
                                                </ResponseStatus>
                                            </NoteResponse>           
                    get:
                        description: Retrieve the set of notes associated with an order.
                        responses:
                            200:
                                description: OK - there are Notes associated with the order, and they have been returned in the response.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <Notes>
                                                <Note>
                                                    <Id>87037</Id>
                                                    <UserId>jbm</UserId>
                                                    <Description>This is a test note</Description>
                                                    <LastDateModifier>2014-11-16T04:01:10.000Z</LastDateModifier>
                                                    <Internal>false</Internal>    <!-- admin only -->
                                                </Note>
                                                <Note>
                                                    <Id>87039</Id>
                                                    <UserId>smckinnon</UserId>
                                                    <Description>This is a second test note</Description>
                                                    <LastDateModifier>2014-11-16T04:08:46.000Z</LastDateModifier>
                                                    <Internal>false</Internal>    <!-- admin only -->
                                                </Note>
                                            </Notes>                    
                            204:
                                description: No Content - there are no Notes associated with the order.  Since the notes resource is an aggregate rather than addressed resource the generic no content response is used, rather than a 404 as would be used if the resource was addressed with an identifier
                /history: 
                    description: This resource retrieves the history of a port-in order. 
                    get:
                        description: Retrieves the history of the specified port-in order.
                        responses:
                            200:
                                description: The history has been successfully retrieved and displayed in the payload.
                                body:
                                    application/xml:
                                        example: |
                                            <OrderHistoryWrapper>
                                                <OrderHistory>
                                                    <OrderDate>2014-07-29T17:12:29.495Z</OrderDate>
                                                    <Note>LOA required</Note>
                                                    <Author>jbm</Author>
                                                    <Status>PENDING_DOCUMENTS</Status>
                                                </OrderHistory>
                                                <OrderHistory>
                                                    <OrderDate>2014-07-29T17:12:32.121Z</OrderDate>
                                                    <Note>Order has been created</Note>
                                                    <Author>System</Author>
                                                    <Status>SUBMITTED</Status>
                                                    <Difference>LoaDate : "" --&gt; Tue Jul 29 17:12:29 UTC 2014</Difference>
                                                </OrderHistory>
                                                <OrderHistory>
                                                    <OrderDate>2014-07-29T17:15:31.241Z</OrderDate>
                                                    <Note>7999: E37 TN not found in PPS (PPS)</Note>
                                                    <Author>System</Author>
                                                    <Status>EXCEPTION</Status>
                                                </OrderHistory>
                                                <OrderHistory>
                                                    <OrderDate>2014-07-29T17:15:40.836Z</OrderDate>
                                                    <Note>Order waiting for activation</Note>
                                                    <Author>System</Author>
                                                    <Status>FOC</Status>
                                                </OrderHistory>
                                                <OrderHistory>
                                                    <OrderDate>2014-07-29T17:16:20.347Z</OrderDate>
                                                    <Note>Order is complete</Note>
                                                    <Author>System</Author>
                                                    <Status>COMPLETE</Status>
                                                </OrderHistory>
                                            </OrderHistoryWrapper>
                /activationStatus: 
                    get:
                        description: |
                            Retrieve the currently activated status for customer activated (triggered) portin orders. The payload returns the list of activated TNs associated with the order. It also returns a list of the TNs associated with the order that have not yet been activated <br><br>
                            At this time all phone numbers associated with a PON will be activated at the same time, but a change to per-TN activation is coming and will use the same basic payload and activation model.
                        responses: 
                            200:
                                description: |
                                    Activation Status information is available for this order.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <ActivationStatusResponse>
                                                <ActivationStatus>
                                                    <AutoActivationDate>2014-08-29T18:30:00+03:00</AutoActivationDate>
                                                    <ActivatedTelephoneNumbersList>
                                                        <TelephoneNumber>6052609021</TelephoneNumber>
                                                    </ActivatedTelephoneNumbersList>
                                                    <NotYetActivatedTelephoneNumbersList/>
                                                </ActivationStatus>
                                            </ActivationStatusResponse>
                            400:
                                description: |
                                    Return a 400 error if the Portin Order is not in FOC status, or if not executed on the day of FOC or within the delay interval.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <ActivationStatusResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>7342</ErrorCode>
                                                    <Description>On demand portin activation not yet allowed.</Description>
                                                </ResponseStatus>
                                            </ActivationStatusResponse>
                            404:
                                description: |
                                    Return a 404 if the Portin Order is missing, or if the activation is complete, and thus the ActivationStatus resource has been erased.
                                body:
                                    application/xml:
                                        example:
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <ActivationStatusResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>7348</ErrorCode>
                                                    <Description>The order is already complete</Description>
                                                </ResponseStatus>
                                            </ActivationStatusResponse>
                    put:
                        description: |
                            Sets the activation time for the portin order.  <br> <br>
                            This API call is currently used to set the Activation time of the customer activated (triggered) port.
                            <ul>
                            <li>If the time is in the past all of the TNs in the portin request will be activated 'immediately'.</li>
                            <li>If the time is within the three days after the approved FoC date, the auto-activation time for the port will be set to that time</li>
                            </ul>
                            Activation of individual telephone numbers will be enabled in a future release, but are not currently modifiable via this API
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <ActivationStatus>
                                        <AutoActivationDate>2014-08-30T18:30:00+03:00</AutoActivationDate>
                                    </ActivationStatus>
                        responses:
                            200:
                                body:
                                    application/xml:
                                        example: |      
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <ActivationStatusResponse>
                                                <ActivationStatus>
                                                    <AutoActivationDate>2014-08-30T18:30:00+03:00</AutoActivationDate>
                                                </ActivationStatus>
                                            </ActivationStatusResponse>
                            400:
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <ActivationStatusResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>7342</ErrorCode>
                                                    <Description>On demand portin activation not yet allowed.</Description>
                                                </ResponseStatus>
                                            </ActivationStatusResponse>      
                            404:
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <ActivationStatusResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>7348</ErrorCode>
                                                    <Description>The order is already complete</Description>
                                                </ResponseStatus>
                                            </ActivationStatusResponse>
                /loas: 
                    description: |
                        The LOAS resource allows the uploading and storage of files that are associated with port-in orders.   Port-in uploads use the standard form-data approach for http file upload.  Details of the POST API call that drives the file upload are provided below.
                            <br>
                        The following MIME types are supported for the LOA upload file:<br>
                        <ul>
                        <li>PDF("application/pdf")</li>
                        <li>PLAIN("text/plain")</li>
                        <li>JPG("image/jpeg")</li>
                        <li>TIFF("image/tiff")</li>
                        <li>CSV("text/csv")</li>
                        <li>XML("application/xml")</li>
                        <li>WAV("audio/x-wav")</li>
                        <li>ZIP("application/zip")</li>
                        </ul>
                        <br>
                        The file upload is equivalent of the use of CURL to upload a file...<br>
                            <br>
                        <code> curl -H 'Content-Type: <MIME Type>' --data-binary "@<Filename>" –iv <Base URL>/portins/<order-id>/loas<br>
                        </code>
                            <br>
                        an example for the upload of a pdf file is...<br>
                            <br>
                        <code> curl -H 'Content-Type: application/pdf' --data-binary "@Test_LOA.pdf" -iv <BASE URL>/portins/<order-id>/loas<br>
                        </code> 
                    get:
                        description: Retrieves the list of the loa (and other) files associated with the portin order
                        queryParameters:
                            metadata:
                                description: if true it will return meta-data assoociated with the file used to describe the file.
                                type: boolean
                                required: false
                                default: false
                                example: true
                        responses:
                            200:
                                description: The list of all files is being returned.  This response includes the case where the list is empty.
                                body:
                                    application/xml:
                                        example: |
                                            <fileListResponse>
                                                <fileCount>2</fileCount>
                                                <fileNames>803f3cc5-beae-469e-bd65-e9891ccdffb9-1092874634747.pdf</fileNames>
                                                <fileNames>803f3cc5-beae-469e-bd65-e9891ccdffb9-1430814967669.pdf</fileNames>
                                                <resultCode>0</resultCode>
                                                <resultMessage>LOA file list successfully returned</resultMessage>
                                            </fileListResponse>
                                            <!-- OR --, for the case where there are no files... -->
                                            <fileListResponse>
                                                <fileCount>0</fileCount>
                                                <resultCode>0</resultCode>
                                                <resultMessage>No LOA files found for order</resultMessage>
                                            </fileListResponse>
                    post:
                        description: |
                            POSTing to the /loas resource will enable the upload of the file.  The key attribute to the POST is ensuring that the headers are correctly set to support the file upload.<br>
                                <br>
                            Header settings typical of a valid upload are...<br>
                                <br>
                            <code>
                            Host: api.inetwork.com <br>
                            Authorization: Basic xxxxxxxxxxxxxxxxxxxx== <br>
                            Content-Type: application/pdf <br>
                            Accept: */* <br>
                            Accept-Encoding: gzip, deflate <br>
                            Accept-Language: en-US,en;q=0.8 <br>
                            Cache-Control: no-cache <br>
                                <br>
                            ----WebKitFormBoundaryE19zNvXGzXaLvS5C <br>
                            Content-Disposition: form-data; name="george"; filename="Bandwidth Dashboard.pdf" <br>
                            Content-Type: application/pdf <br>
                                <br>
                                <br>
                            ----WebKitFormBoundaryE19zNvXGzXaLvS5C <br>
                            </code>
                        responses:
                            201:
                                description: |
                                    The 201 response indicates the successful creation of a file resource containing the uploaded content.
                                    The response header will include a link to the created file as a GET on the identified resource.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <fileUploadResponse>
                                                <filename>63097af1-37ae-432f-8a0d-9b0e6517a35b-1429550165581.pdf</filename>
                                                <resultCode>0</resultCode>
                                                <resultMessage>LOA file uploaded successfully for order 63097af1-37ae-432f-8a0d-9b0e6517a35b</resultMessage>
                                            </fileUploadResponse>
                            400:
                                description: A 400 indicates that the requested upload failed.
                    /{fileid}: 
                        description: |
                            A GET on the loas file resource will cause the downloading of the file in a manner consistent with typical browser file downloads.
                        get:
                            description: Retrieves the list of the loa (and other) files associated with the portin order
                            responses:
                                200:
                                    description: |
                                        The 200 OK  indicates a successful download request.<br>
                                        The response to the get on a filename will result in the file being prepared and delivered in a manner consistent with browser download.  The Response headers include the content-disposition header describing the file download.<br>
                                        Headers:
                                        <code>
                                        Content-Type → application/octet-stream<br>
                                        Date → Mon, 20 Apr 2015 17:19:26 GMT<br>
                                        Server → Apache-Coyote/1.1<br>
                                        Transfer-Encoding → <br>
                                        content-disposition → attachment; filename=63097af1-37ae-432f-8a0d-9b0e6517a35b-1429550165581.pdf<br>
                                        </code>
                                404:
                                    description: |
                                        a 404 indicates that the indicated file was not found in conjunction with the portin id.
                        put:
                            description: |
                                A PUT on the filename will update / replace the identified file id.  The format of the PUT is identical to that of the POST.<br>
                                Header settings typical of a valid upload are...<br>
                                <code>
                                Host: api.inetwork.com <br>
                                Authorization: Basic xxxxxxxxxxxxxxxxxxxx== <br>
                                Content-Type: application/pdf <br>
                                Accept: */* <br>
                                Accept-Encoding: gzip, deflate <br>
                                Accept-Language: en-US,en;q=0.8 <br>
                                Cache-Control: no-cache <br>
                                    <br>
                                ----WebKitFormBoundaryE19zNvXGzXaLvS5C <br>
                                Content-Disposition: form-data; name="george"; filename="Bandwidth Dashboard.pdf" <br>
                                Content-Type: application/pdf <br>
                                    <br>
                                    <br>
                                ----WebKitFormBoundaryE19zNvXGzXaLvS5C <br>
                                </code>
                            responses:
                                200:
                                    description: |
                                        The 200 response indicates the successful replacement of a file resource containing the uploaded content.
                                        The response header will include a link to the created file as a GET on the identified resource.
                                    body:
                                        application/xml:
                                            example: |
                                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                <fileUploadResponse>
                                                    <filename>63097af1-37ae-432f-8a0d-9b0e6517a35b-1429550165581.pdf</filename>
                                                    <resultCode>0</resultCode>
                                                    <resultMessage>LOA file uploaded successfully for order 63097af1-37ae-432f-8a0d-9b0e6517a35b</resultMessage>
                                                </fileUploadResponse>
                                400:
                                    description: A 400 indicates that the requested upload failed.
                                404:
                                    description: A 404 indicates that the file was not available for replacement.
                        delete:
                            description: Retrieves the list of the loa (and other) files associated with the portin order
                            responses:
                                200:
                                    description: |
                                        The 200 OK  indicates a successful deletion of the identified file.
                                404:
                                    description: |
                                        a 404 indicates that the indicated file was not found in conjunction with the portin id.
                        /metadata: 
                            description: |
                                It is often useful to attach additional data to an order in the form of an attached file, and so the existing LOA capability has been extended to optionally allow different file information to be included with a file, to describe type and purpose information.  The MetaData associated with a file includes a file document name and a document type, which is one of [LOA | INVOICE | CSR | OTHER].<br>
                                Naming of the existing "loas" API has been preserved to ensure backwards compatibility.
                            get:
                                description: Retrieves the metadata associated with the file.
                                responses:
                                    200:
                                        description: |
                                            The Metatdata has been successfully retrieved.
                                        body:
                                            application/xml:
                                                example: |
                                                    <FileMetaData>
                                                       <DocumentName> [string] </DocumentName>
                                                       <DocumentType> [LOA | INVOICE | CSR | OTHER] </DocumentType>
                                                    </FileMetaData>
                                    404:
                                        description: |
                                            a 404 indicates that the indicated file was not found in conjunction with the portin id.
                            put:
                                description: |
                                    Associate metadata with the file named in the resource path.  This will describe the file, and declare the data that is contained in the file, selected from a list of [LOA | INVOICE | CSR | OTHER].
                                body:
                                    application/xml:
                                        example: |
                                            <FileMetaData>
                                               <DocumentName> [string] </DocumentName>
                                               <DocumentType> [LOA | INVOICE | CSR | OTHER] </DocumentType>
                                            </FileMetaData>
                                responses:
                                    200:
                                        description: Successful update of the metadata associated with the identified file.
                                    400:
                                        description: Some error has occured as a result of the attempt.
                            delete:
                                description: Deletes the metadata previously associated with the identified file.
                                responses:
                                    200:
                                        description: |
                                            The 200 OK  indicates a successful deletion of the identified metadata.
                                    404:
                                        description: |
                                            a 404 indicates that the indicated file was not found in conjunction with the portin id.
                /areaCodes: 
                    description: Retrieves a list of all area codes of the telephone numbers associated with the specified port-in number.
                    get:
                        description: Retrieves a list of area codes associated with the specified port-in number and displays them in the payload.
                        responses:
                            200:
                                description: The area codes have been successfully retrieved and displayed in the payload.
                                body:
                                    application/xml:
                                        example: |
                                            <TelephoneDetailsReports>
                                                <TelephoneDetailsReport>
                                                    <AreaCode>919</AreaCode>
                                                    <Count>1</Count>
                                                </TelephoneDetailsReport>
                                            </TelephoneDetailsReports>
                /npaNxx: 
                    description: Retrieves a list of all Npa-Nxx of the telephone numbers associated with the specified port-in number.
                    get:
                        description: Retrieves a list of Npa-Nxx associated with the specified port-in number and displays them in the payload.
                        responses:
                            200:
                                description: The Npa-Nxx have been successfully retrieved and displayed in the payload.
                                body:
                                    application/xml:
                                        example: |
                                            <TelephoneDetailsReports>
                                                <TelephoneDetailsReport>
                                                    <NPA-NXX>919280</NPA-NXX>
                                                    <Count>1</Count>
                                                </TelephoneDetailsReport>
                                            </TelephoneDetailsReports>
                /tns: 
                    description: Retrieves a list of all telephone numbers associated with the specified port-in number.
                    get:
                        description: Retrieves a list of telephone numbers associated with the specified port-in number and displays them in the payload.
                        responses:
                            200:
                                description: The telephone numbers have been successfully retrieved and displayed in the payload.
                                body:
                                    application/xml:
                                        example: |
                                            <TelephoneNumbers>
                                                <Count>1</Count>
                                                <TelephoneNumber>9192809870</TelephoneNumber>
                                            </TelephoneNumbers>
                /totals: 
                    description: Retrieves a total count of telephone numbers associated with the specified port-in number.
                    get:
                        description: Retrieves a total count of telephone numbers associated with the specified port-in number and displays them in the payload.
                        responses:
                            200:
                                description: The total count of telephone numbers have been successfully retrieved and displayed in the payload.
                                body:
                                    application/xml:
                                        example: |
                                            <Quantity>
                                                <Count>1</Count>
                                            </Quantity>
                /losingCarrier: 
                    description: This resource provides information about losing carrier that ownes telephone numbers which are being ported.
                    get:
                        description: Retrieves information about losing carrier.
                        responses:
                            200:
                                description: Losing carrier information has been successfully retrieved and displayed in the payload.
                                body:
                                    application/xml:
                                        example: |
                                            <PortinLosingCarrierResponse>
                                                <LosingCarrier>
                                                    <Spid>979E</Spid>
                                                    <Name>Bandwidth</Name>
                                                    <Wireless>false</Wireless>
                                                    <AccountNumberRequired>false</AccountNumberRequired>
                                                    <MinimumPortingInterval>1</MinimumPortingInterval>
                                                </LosingCarrier>
                                            </PortinLosingCarrierResponse>
                            404:
                                description: order is not found.
                                body:
                                    application/xml:
                                        example: |
                                            <PortinLosingCarrierResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>5035</ErrorCode>
                                                    <Description>port_in order 5d1086cf-f867-4811-a085-42ee966ef3a2 not found.</Description>
                                                </ResponseStatus>
                                            </PortinLosingCarrierResponse>
                /adminparameters: 
                    # this file is shared between 6 order types - 
                    #  - orders
                    #  - portins
                    #  - portouts
                    #  - LSR orders
                    #  - E911 orders
                    #  - TN Option orders
                    # 
                    description: |
                        The /adminparameters resource contains two pieces of information...
                        <ul>
                          <li>The "activity state" of the order - a classification of what the state the order is in from the perspective of the Bandwidth staff member.</li>
                          <ul>
                            <li>Quiet - the order is automaticly progressing through the work flow and nothing needs to be done.  This is the default state</li>
                            <li>Changed - something has changed in the order, and should be examined by a staff member</li>
                            <li>Seen - the order has been examined by the staff member, and if required, action is being taken</li>
                            <li>Responded - a response has been provided to the customer</li>
                          </ul>
                          <li>The name or handle of the Bandwidth staff member that is caring for the order</li>
                        </ul>
                        This resource is used by Bandwidth in managing multiple types of orders. <br><br> There is only one instance of the adminparameters resource associated with an order.  The resource is assigned when it is needed, so an order that is flowing through the workflow without errors will likely not have an instance of adminparameters.
                    put:
                        description: Updates the admin parameters associated with an order.  Removing an element will result in resetting the element to the default value.
                        body:
                            application/xml:
                                example:
                                    <?xml version="1.0"?>
                                    <AdminParameters>
                                        <!-- Optional - Default value is Quiet-->
                                        <ActivityState>Changed</ActivityState>
                                        <!-- Optional -->
                                        <BandwidthPrime>James T Kirk</BandwidthPrime>
                                    </AdminParameters>
                        responses:
                            201:
                                description: CREATED - the admin parameters resource has been created and populated as directed.
                            200:
                                description: OK - The previously created resource has been updated as directed.
                            404:
                                description: Bad Request - some error is present in the payload, and the the Admin Parameters have not been changed.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AdminParametersResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>15517</ErrorCode>
                                                    <Description>Invalid 'activityState'. Valid values are changed, seen, responded, quiet</Description>
                                                </ResponseStatus>
                                            </AdminParametersResponse>        
                    get:
                        description: Retrieve the admin parameters associated with an order.
                        responses:
                            200:
                                description: OK - there are admin parameters associated with the order, and they have been returned in the response.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AdminParametersResponse>
                                                <AdminParameters>
                                                    <ActivityState>responded</ActivityState>
                                                    <BandwidthPrime>James T Kirk</BandwidthPrime>
                                                </AdminParameters>
                                            </AdminParametersResponse>                    
                            404:
                                description: NOT FOUND - No admin parameters have been associated with this order id (or the orderid cannot be found in the system).  For a valid orderid this is interpreted as a "Quiet" <ActivityState>.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AdminParametersResponse>
                                                <ResponseStatus>
                                                    <Description>The resource does not exist</Description>
                                                </ResponseStatus>
                                            </AdminParametersResponse>     
                    delete:
                        description: Remove the admin parameters associated with an order
                        responses:
                            200:
                                description: OK - the admin parameters have been removed from the order
                            400:
                                description: BAD REQUEST - typically this means that the order-id is incorrect.
                                body:
                                    application/xml:
                                        example:
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AdminParametersResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>5035</ErrorCode>
                                                    <Description>port_in order f58f47a5-f9f5-4dd2-8687-a615b2fe86cd9 not found.</Description>
                                                </ResponseStatus>
                                            </AdminParametersResponse>
            /totals: 
                description: This resource interacts with the total number of port-ins associated with an account.
                get:
                    description: Retrieves the total count of port-ins.
                    queryParameters:
                        status:
                            description: The current status of the port-in.
                            type: string
                            example: complete
                        vendorId:
                            description: The vendor ID of the port-in.
                            type: string
                    responses:
                        200:
                            description: The total has been successfully calculated and displayed in the payload.
                            body:
                                application/xml:
                                    example: |
                                        <Quantity>
                                            <Count>1</Count>
                                        </Quantity>
        /portouts: 
            description: |
                This resource deals with the port-out requests of the account ID; this resource can retrieve a port-out request
                or create a request
                .
            get:
                description: Retrieves a list of port-out requests for the given account ID.
                queryParameters:
                    page:
                        description: The port-out ID of the first order of the page. "1" is used as a convention for the first port-out in the account ID.
                        type: string
                        required: true
                        default: 1
                        example: ca8065d1-ec1a-43da-af40-1dcee43becb5
                    size:
                        description: The number of port-outs retrieved. 
                        type: integer
                        required: true
                        default: 300
                        example: 30
                    status:
                        description: Displays the port-outs with the given status.
                        type: string
                        example: complete
                    date:
                        description: The date of when the order was placed.
                        type: date
                        example: 2014-08-01
                    startdate:
                        description: |
                            The earliest date that the order was last modified. <strong>NOTE: </strong> startdate and enddate must be simultaneously declared.
                        type: date
                        example: 2014-08-05
                    enddate:
                        description: |
                            The latest date that the order was last modified. <strong>NOTE: </strong> startdate and enddate must be simultaneously declared.
                        type: date
                        example: 2014-08-05
                responses:
                    200:
                        description: the port-outs have been successfully retrieved and displayed in the payload.
                        body:
                            application/xml:
                                example: |
                                    <LNPResponseWrapper>
                                        <TotalCount>3</TotalCount>
                                        <Links />
                                        <lnpPortInfoForGivenStatus>
                                            <CountOfTNs>0</CountOfTNs>
                                            <userId>System</userId>
                                            <OrderId>4299b1ad-aa08-433e-a316-f9219b3450d2</OrderId>
                                            <OrderType>port_out</OrderType>
                                            <lastModifiedDate>2014-07-31T16:34:37.530Z</lastModifiedDate>
                                            <ErrorCode>201</ErrorCode>
                                            <ErrorMessage>Order request received. Please use the order id to check the status of your order later.</ErrorMessage>
                                            <OrderDate>2014-07-31T16:34:37.480Z</OrderDate>
                                            <ProcessingStatus>NEW</ProcessingStatus>
                                            <RequestedFOCDate>2014-08-02T12:34:37.000Z</RequestedFOCDate>
                                            <VendorId>512E</VendorId>
                                        </lnpPortInfoForGivenStatus>
                                    </LNPResponseWrapper>
            post:
                description: |
                    Creates a port-out request.<br>
                    In the payload, CallbackUrl and InternalPort are optional.<br>
                    There are also multiple options for the following:
                    <table>
                        <tr>
                            <th>Option</th>
                            <th>Choices</th>
                        </tr>
                        <tr>
                            <td>Supplemental</td><td>NONE<br>CANCEL<br>UPDATE<br>OTHER<br></td>
                        </tr>
                        <tr>
                            <td>PortOutAction</td><td>NEW<br>SUPP<br>MODIFY<br>CANCEL<br></td>
                        </tr>
                        <tr>
                            <td>InternalPort</td><td>true or false<br></td>
                        </tr>
                    </table>
                body:
                    application/xml:
                        example: |
                            <PortOutRequest>
                                <Pin>1234</Pin>
                                <NewNetworkSPID>2857</NewNetworkSPID>
                                <TelephoneNumberToPort>2014087001</TelephoneNumberToPort>
                                <FocDate>2014-08-11</FocDate>
                                <PortOutAction/>
                                <BulkPortOut>
                                    <Pin>1234</Pin>
                                    <NewNetworkSPID>2857</NewNetworkSPID>
                                    <FocDate>2014-08-11</FocDate>
                                    <Supplemental>CANCEL</Supplemental>
                                    <TelephoneNumberList>
                                        <TelephoneNumberToPort>2014087001</TelephoneNumberToPort>
                                    </TelephoneNumberList>
                                </BulkPortOut>
                            </PortOutRequest>
                responses:
                    200:
                        description: The port-out request has been successfully received.
                        body:
                            application/xml:
                                example: |
                                    <PortOutResponse>
                                        <Status>
                                            <Code>200</Code>
                                            <Description>Request is complete and results returned.</Description>
                                        </Status>
                                    </PortOutResponse>
            /{orderid}: 
                description: This resource retrieves information associated with the port-out ID number specified.
                get:
                    description: Retrieves the information associated with the specified port-out ID number.
                    responses:
                        200:
                            description: The information has been successfully retrieved and displayed out to the payload.
                            body:
                                application/xml:
                                    example: |
                                        <LnpOrderResponse>
                                            <RequestedFocDate>2014-08-02T12:34:37Z</RequestedFocDate>
                                            <ActualFocDate>2014-08-02T12:34:37Z</ActualFocDate>
                                            <PON>8a89dea8-a145-4796-8e73-0d859fc74cad</PON>
                                            <AccountId>20</AccountId>
                                            <OrderCreateDate>2014-07-31T16:34:37.480Z</OrderCreateDate>
                                            <LastModifiedDate>2014-07-31T16:34:37.530Z</LastModifiedDate>
                                            <userId>System</userId>
                                            <PortOutStatus>NEW</PortOutStatus>
                                            <SPID>512E</SPID>
                                        </LnpOrderResponse>
                put:
                    description: |
                        Updates or cancels a port-out ID. THe payload to this method is similar to the GET on /accounts/{accountid}/portouts.<br>
                        In the payload, CallbackUrl and InternalPort are optional additives.<br>
                        There are also multiple options for the following:
                        <table>
                            <tr>
                                <th>Option</th>
                                <th>Choices</th>
                            </tr>
                            <tr>
                                <td>Supplemental</td><td>NONE<br>CANCEL<br>UPDATE<br>OTHER<br></td>
                            </tr>
                            <tr>
                                <td>PortOutAction</td><td>NEW<br>SUPP<br>MODIFY<br>CANCEL<br></td>
                            </tr>
                        </table>
                    body:
                        application/xml:
                            example: |
                                <PortOutRequest>
                                    <Pin>1234</Pin>
                                    <NewNetworkSPID>2857</NewNetworkSPID>
                                    <TelephoneNumberToPort>2014087001</TelephoneNumberToPort>
                                    <FocDate>2014-08-11</FocDate>
                                  <PortOutAction>CANCEL</PortOutAction>
                                    <BulkPortOut>
                                        <Pin>1234</Pin>
                                        <NewNetworkSPID>2857</NewNetworkSPID>
                                        <FocDate>2014-08-11</FocDate>
                                        <Supplemental>CANCEL</Supplemental>
                                        <TelephoneNumberList>
                                            <TelephoneNumberToPort>2014087001</TelephoneNumberToPort>
                                        </TelephoneNumberList>
                                    </BulkPortOut>
                                </PortOutRequest>
                    responses:
                        200:
                            description: the update or cancellation was successful.
                            body:
                                application/xml:
                                    example: |
                                        <PortOutResponse>
                                            <Status>
                                                <Code>200</Code>
                                                <Description>Request is complete and results returned.</Description>
                                            </Status>
                                        </PortOutResponse>
                delete:
                    description: |
                        Cancels the port-out order. 
                        Note that only a pending port-out order can be cancelled; if the order was previously cancelled or completed, then a DELETE will not be possible.
                    responses:
                        200:
                            description: The port-out order has been successfully deleted.
                        400:
                            description: The port-out order is already processed, and therefore cannot be deleted.
                            body:
                                application/xml:
                                    example: |
                                        <LnpOrderResponse>
                                            <OrderId>2ffd0af4-7c54-40dc-9bfe-40f08b57e63a</OrderId>
                                            <Status>
                                                <Code>400</Code>
                                                <Description>Validation Failed. Please check your input parameters.</Description>
                                            </Status>
                                            <Errors>
                                                <Code>7304</Code>
                                                <Description>The order is already complete and cannot be modified or cancelled</Description>
                                            </Errors>
                                            <ProcessingStatus>EXCEPTION</ProcessingStatus>
                                        </LnpOrderResponse>
                /adminparameters: 
                    # this file is shared between 6 order types - 
                    #  - orders
                    #  - portins
                    #  - portouts
                    #  - LSR orders
                    #  - E911 orders
                    #  - TN Option orders
                    # 
                    description: |
                        The /adminparameters resource contains two pieces of information...
                        <ul>
                          <li>The "activity state" of the order - a classification of what the state the order is in from the perspective of the Bandwidth staff member.</li>
                          <ul>
                            <li>Quiet - the order is automaticly progressing through the work flow and nothing needs to be done.  This is the default state</li>
                            <li>Changed - something has changed in the order, and should be examined by a staff member</li>
                            <li>Seen - the order has been examined by the staff member, and if required, action is being taken</li>
                            <li>Responded - a response has been provided to the customer</li>
                          </ul>
                          <li>The name or handle of the Bandwidth staff member that is caring for the order</li>
                        </ul>
                        This resource is used by Bandwidth in managing multiple types of orders. <br><br> There is only one instance of the adminparameters resource associated with an order.  The resource is assigned when it is needed, so an order that is flowing through the workflow without errors will likely not have an instance of adminparameters.
                    put:
                        description: Updates the admin parameters associated with an order.  Removing an element will result in resetting the element to the default value.
                        body:
                            application/xml:
                                example:
                                    <?xml version="1.0"?>
                                    <AdminParameters>
                                        <!-- Optional - Default value is Quiet-->
                                        <ActivityState>Changed</ActivityState>
                                        <!-- Optional -->
                                        <BandwidthPrime>James T Kirk</BandwidthPrime>
                                    </AdminParameters>
                        responses:
                            201:
                                description: CREATED - the admin parameters resource has been created and populated as directed.
                            200:
                                description: OK - The previously created resource has been updated as directed.
                            404:
                                description: Bad Request - some error is present in the payload, and the the Admin Parameters have not been changed.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AdminParametersResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>15517</ErrorCode>
                                                    <Description>Invalid 'activityState'. Valid values are changed, seen, responded, quiet</Description>
                                                </ResponseStatus>
                                            </AdminParametersResponse>        
                    get:
                        description: Retrieve the admin parameters associated with an order.
                        responses:
                            200:
                                description: OK - there are admin parameters associated with the order, and they have been returned in the response.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AdminParametersResponse>
                                                <AdminParameters>
                                                    <ActivityState>responded</ActivityState>
                                                    <BandwidthPrime>James T Kirk</BandwidthPrime>
                                                </AdminParameters>
                                            </AdminParametersResponse>                    
                            404:
                                description: NOT FOUND - No admin parameters have been associated with this order id (or the orderid cannot be found in the system).  For a valid orderid this is interpreted as a "Quiet" <ActivityState>.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AdminParametersResponse>
                                                <ResponseStatus>
                                                    <Description>The resource does not exist</Description>
                                                </ResponseStatus>
                                            </AdminParametersResponse>     
                    delete:
                        description: Remove the admin parameters associated with an order
                        responses:
                            200:
                                description: OK - the admin parameters have been removed from the order
                            400:
                                description: BAD REQUEST - typically this means that the order-id is incorrect.
                                body:
                                    application/xml:
                                        example:
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AdminParametersResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>5035</ErrorCode>
                                                    <Description>port_in order f58f47a5-f9f5-4dd2-8687-a615b2fe86cd9 not found.</Description>
                                                </ResponseStatus>
                                            </AdminParametersResponse>
        /products: 
            description: |
                The /products API provides access to information about the products configured for the account.
                Only admin class users have the permissions required to add products to an account.
            post:
                description:  Add a new product to the account
                body:
                    application/xml:
                        example:
                            <Product>
                            <Name>TollFree</Name>
                            </Product>
                responses:
                    200:
                        body:
                            application/xml:
                                example: None
            get:
                description: discover what is currently enabled on the account
                responses:
                    200:
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0"?>
                                    <AccountProductsResponse>
                                        <Products>
                                            <Product>
                                                <Name>Termination</Name>
                                            </Product>
                                            <Product>
                                                <Name>VirtualInventory</Name>
                                            </Product>
                                            <Product>
                                                <Name>TollFree</Name>
                                            </Product>
                                            <Product>
                                                <Name>Origination</Name>
                                                <Features>
                                                    <Feature>CallForwarding</Feature>
                                                    <Feature>DlDa</Feature>
                                                    <Feature>CNAM</Feature>
                                                </Features>
                                            </Product>
                                            <Product>
                                                <Name>SMS</Name>
                                            </Product>
                                        </Products>
                                    </AccountProductsResponse>
            /origination: 
                description: The Origination resource controls the Origination features and settings that can be added to an account.
                post:
                    description: |
                      Add Origination to the account.    
                      The payload contains (optional) features that can be
                      offered to the subscribers of the account  These features  are enabled for DIDs in 
                      the account, but must still be provisioned on a DID-by-DID basis.
                    body:
                        application/xml:
                            example: |
                              <?xml version="1.0"?>
                              <Product>
                                  <Name>Origination</Name>
                                  <Features>
                                      <Feature>CallForwarding</Feature>
                                      <Feature>DlDa</Feature>
                                      <Feature>CNAM</Feature>
                                  </Features>
                              </Product>
                    responses:
                        200:
                          description: The Origination product and associated features was added to the account
                        400:
                          description: Some field error prevented the addition of the feature to the account.
                put:
                    description: |
                      Update Origination on the account.    
                      The payload contains (optional) features that can be 
                      offered to the subscribers of the account  These features  are enabled for DIDs in 
                      the account, but must still be provisioned on a DID-by-DID basis.
                    body:
                        application/xml:
                            example: |
                              <?xml version="1.0"?>
                              <Product>
                                  <Name>Origination</Name>
                                  <Features>
                                      <Feature>CallForwarding</Feature>
                                      <Feature>DLDA</Feature>
                                      <Feature>CNAM</Feature>
                                  </Features>
                              </Product>
                    responses:
                        200:
                          description: The Origination product and associated features was added to the account
                        400:
                          description: Some field error prevented the addition of the feature to the account.
                get:
                    description: |
                      Examine the Origination capabilities of the account.  The response also contains information that 
                      describes the Origination features that are enabled for the account.  All of these features still 
                      need to be provisioned for any DIDs that will be enabled to use the Feature
                    responses:
                        200:
                            body:
                                application/xml:
                                    example: |
                                      <AccountProductResponse>
                                        <Product>
                                          <Name>Origination</Name>
                                          <Features>
                                            <Feature>CallForwarding</Feature>
                                            <Feature>DlDa</Feature>
                                            <Feature>CNAM</Feature>
                                           </Features>
                                         </Product>
                                      </AccountProductResponse>
                /settings: 
                    description: | 
                        The Origination settings resource is used to define the attributes of the Origination product, typically that deal with limiting the Origination traffic levels that are enabled for the account.
                    get:
                        description: |
                            The GET returns the current settings, describing the inbound and bidirectional traffic levels that will be permitted.  See the 
                        responses:    
                            200:
                                description: The settings element is returned.
                                body: 
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <OriginationSettingResponse>
                                                <OriginationSettings>
                                                    <ConcurrentBidirectionalCalls>5</ConcurrentBidirectionalCalls>
                                                    <ConcurrentInboundCalls>500</ConcurrentInboundCalls>
                                                    <RedirectEnabled>true</RedirectEnabled>
                                                </OriginationSettings>
                                            </OriginationSettingResponse>
                            400:
                                description: |
                                    BAD REQUEST
                                    If the settings are not present for the Origination product a 404 NOT FOUND is returned with an explanatory payload.
                                body: 
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <OriginationSettingResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12017</ErrorCode>
                                                    <Description>Account '646' does not have product 'Origination'</Description>
                                                </ResponseStatus>
                                            </OriginationSettingResponse>
                            404:
                                description: |
                                    NOT FOUND
                                    If the product exists on the account, but settings are missing, then the not found response is used.
                                body: 
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <OriginationSettingResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12030</ErrorCode>
                                                    <Description>Origination product has not been configured</Description>
                                                </ResponseStatus>
                                            </OriginationSettingResponse>
                    post:
                        description: | 
                            This resource can be PUT or POSTed to in order to establish the appropriate settings.
                            Some of the important values that are established as part of this termination are...
                            <table>
                            <tr><th>parameter</th><th>description</th></tr>
                            <tr><td>ConcurrentInboundCalls</td><td>integer</td></tr>
                            <tr><td>ConcurrentBidirectionalCalls</td><td>integer</td></tr>
                            <tr><td>RedirectEnabled</td><td>true | false - enables 3xx redirection routing for account</td></tr>
                            </table>
                        body:
                            application/xml:
                                example: |
                                    <OriginationSettings>
                                        <ConcurrentBidirectionalCalls>5</ConcurrentBidirectionalCalls>
                                        <ConcurrentInboundCalls>500</ConcurrentInboundCalls>
                                        <RedirectEnabled>true</RedirectEnabled>
                                    </OriginationSettings>
                        responses:
                            200:
                                description: a 200 OK is returned on successful updating of the Termination Settings.  There is no payload returned with a 200 OK.
                            400:
                                description: a 400 BAD REQUEST will be returned with a descriptive payload if the XML describing the termination settings resource is incorrect or other factors prevent execution of the POST  The error contains an error code and description.
                                body: 
                                    application/xml:
                                        example: |
                                            <OriginationSettingResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12591</ErrorCode>
                                                    <Description>ConcurrentBidirectionalCalls requires Termination and Origination product</Description>
                                                </ResponseStatus>
                                            </OriginationSettingResponse>
                    put:
                        description: | 
                            This resource can be PUT or POSTed to in order to establish the appropriate settings.
                            Some of the important values that are established as part of this termination are...
                            <table>
                            <tr><th>parameter</th><th>description</th></tr>
                            <tr><td>ConcurrentInboundCalls</td><td>integer</td></tr>
                            <tr><td>ConcurrentBidirectionalCalls</td><td>integer</td></tr>
                            <tr><td>RedirectEnabled</td><td>true | false - enables 3xx redirection routing for account</td></tr>
                            </table>
                        body:
                            application/xml:
                                example: |
                                    <OriginationSettings>
                                        <ConcurrentBidirectionalCalls>5</ConcurrentBidirectionalCalls>
                                        <ConcurrentInboundCalls>500</ConcurrentInboundCalls>
                                        <RedirectEnabled>true</RedirectEnabled>
                                    </OriginationSettings>
                        responses:
                            200:
                                description: a 200 OK is returned on successful updating of the Termination Settings.  There is no payload returned with a 200 OK.
                            400:
                                description: a 400 BAD REQUEST will be returned with a descriptive payload if the XML describing the termination settings resource is incorrect or other factors prevent execution of the POST  The error contains an error code and description.
                                body: 
                                    application/xml:
                                        example: |
                                            <OriginationSettingResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12591</ErrorCode>
                                                    <Description>ConcurrentBidirectionalCalls requires Termination and Origination product</Description>
                                                </ResponseStatus>
                                            </OriginationSettingResponse>
                /tntotals: 
                    description: The tntotals resource is a derived resource that reports the number of TNs that are associated with the Origination product on the indicated account.  These counts are broken outbut NPANXX and Tier for billing purposes.
                    get:
                        description: Retrieve the total number of TNs associated with Origination service on the account.
                        responses: 
                            200:
                                description: |
                                    The tntotals API call result is decomposed by NPANXX and Tier, detailing the number of Origination Service TNs associated with the account in each combination of NPANXX and Tier.
                                body: 
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <ProductTNDetailsResponse>
                                                <ProductTNDetails>
                                                    <Origination>
                                                        <NPANXXDetailList>
                                                            <NPANXXDetail>
                                                                <NPANXX>804210</NPANXX>
                                                                <Tier>0</Tier>
                                                                <Count>2</Count>
                                                            </NPANXXDetail>
                                                            <NPANXXDetail>
                                                                <NPANXX>919999</NPANXX>
                                                                <Tier>0</Tier>
                                                                <Count>3</Count>
                                                            </NPANXXDetail>
                                                            <NPANXXDetail>
                                                                <NPANXX>919295</NPANXX>
                                                                <Tier>0</Tier>
                                                                <Count>1</Count>
                                                            </NPANXXDetail>
                                                        </NPANXXDetailList>
                                                    </Origination>
                                                </ProductTNDetails>
                                            </ProductTNDetailsResponse>
                            400:
                                description: |
                                    This indicates that an error has occurred in requesting totals.
                                    Some related errors include:
                                    <table style="text-align: left; width: 80%;" border="1" cellpadding="2" cellspacing="0">
                                        <tbody>
                                            <tr>
                                                <th>Error Code</td>
                                                <th>Error Text</td>
                                            </tr>
                                            <tr>
                                                 <td>12017</td>
                                                 <td>Account '12346157' does not have product 'TollFree'</td>
                                            </tr>
                                            <tr>
                                                <td>15000</td>
                                                <td>Product 'Termination' is not supported</td>
                                            </tr>
                                            <tr>
                                                <td>12039</td>
                                                <td>Can not request telephone number reports for product 'UcTrunking'</td>
                                            </tr>
                                            <tr>
                                                <td></td>
                                                <td></td>
                                            </tr>
                                        </tbody>
                                    </table>
                                body: 
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <ProductTNDetailsResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12017</ErrorCode>
                                                    <Description>Account '12346157' does not have product 'TollFree'</Description>
                                                </ResponseStatus>
                                            </ProductTNDetailsResponse>
            /termination: 
                description: | 
                    Termination is defined as calls originating from the customer into our network.  The termination resource is used to establish the Product as active for the identified account.
                get:
                    description: A GET on the Termination product indicates the support (or lack of support) for the Termination capabilities for the specified account.
                    responses: 
                        200:
                            description: the 200 response returns with a small payload that indicates that the Termination product is provisioned for the account.
                            body: 
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <AccountProductResponse>
                                            <Product>
                                                <Name>Termination</Name>
                                            </Product>
                                        </AccountProductResponse> 
                        404:
                            description: |
                                NOT FOUND
                                is returned if the Termination Resource is not found.  An explanatory payload will be returned with explanation and an error code.
                            body: 
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <AccountProductResponse>
                                            <ResponseStatus>
                                                <ErrorCode>12017</ErrorCode>
                                                <Description>Account '138' does not have product 'Termination'</Description>
                                            </ResponseStatus>
                                        </AccountProductResponse> 
                put:
                    description: | 
                        a PUT on a Termination resource that already exists will succeed, but does not change the Termination product.
                    body:
                        application/xml:
                            example: |
                                <?xml version="1.0"?>
                                <Product>
                                    <Name>Termination</Name>
                                </Product>
                    responses:
                        200:
                            description: 200 OK indicates that the Termination capability is associated with the account. If termination is not already associated with the account then a 404 is returned. NO payload is returned with the 200 OK 
                        404:
                            description: |
                                NOT FOUND
                                If the Termination Resource is not found a 404 Not Found with an explanatory payload will be returned.
                            body: 
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <AccountProductResponse>
                                            <ResponseStatus>
                                                <ErrorCode>12017</ErrorCode>
                                                <Description>Account '123' does not have product 'Termination'</Description>
                                            </ResponseStatus>
                                        </AccountProductResponse>
                /settings: 
                    description: | 
                        The Termination settings resource is used to define the attributes of the Termination product that will apply to the account specified in the URL.
                    get:
                        description: |
                            These are the settings associated with the provisioning of Termination settings. The current values represented below detail the legacy Termination settings appropriate for customers currently on IRIS.  In the future IRIS customers will use the Roger Termination Product manager, and define the set of Roger parameters using an extension of this interface.  A parameter 'RogerUsedForTerminationSettings' is used to control this behavior...
                                <ul>
                                <li>If RogerUsedForTerminationSettings is false, then the LegacyTerminationSettings will be used, RogerTerminationSettings will be empty</li>
                                <li>If RogerUsedForTerminationSettings is transition, then both LegacyTerminationSettings and RogerTerminationSettings elements are used</li>
                                <li>If RogerUsedForTerminationSettings is true, then the RogerTerminationSettings element will be used.  LegacyTerminationSettings will be empty.</li>
                                </ul>
                        responses:    
                            200:
                                description: An optional description of the response.
                                body: 
                                    application/xml:
                                        example: |
                                            <TerminationSettingResponse>
                                                <TerminationSettings>
                                                    <RogerUsedForTerminationSettings>false</RogerUsedForTerminationSettings>
                                                    <LegacyTerminationSettings>
                                                        <CustomerTrafficAllowed>ALL</CustomerTrafficAllowed>
                                                        <CpsQueue>300</CpsQueue>
                                                        <ConcurrentOutboundCalls>15</ConcurrentOutboundCalls>
                                                        <ConcurrentBidirectionalCalls>0</ConcurrentBidirectionalCalls>
                                                        <BillingType>DNIS</BillingType>
                                                        <RateType>npanxx</RateType>
                                                        <DiscountPercentage>29</DiscountPercentage>
                                                        <GuaranteedTermination>false</GuaranteedTermination>
                                                    </LegacyTerminationSettings>
                                                    <RogerTerminationSettings/>
                                                </TerminationSettings>
                                            </TerminationSettingResponse>
                            404:
                                description: |
                                    If the settings are not present for the Termination product a 404 NOT FOUND is returned with an explanatory payload.
                                body: 
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <OriginationSettingResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12030</ErrorCode>
                                                    <Description>Termination product has not been configured</Description>
                                                </ResponseStatus>
                                            </OriginationSettingResponse>
                    post:
                        description: | 
                            This resource can be PUT or POSTed to in order to establish the appropriate settings.
                            Some of the important values that are established as part of this termination are...
                            <table>
                            <tr><th>parameter</th><th>description</th></tr>
                            <tr><td>RogerUsedForTerminationSettings</td><td>Boolean - a flag to indicate whether termination services are controlled by Roger or not</td></tr>
                            <tr><td>LegacyTerminationSettings</td><td>a group encapsulating legacy termination settings</td></tr>
                            <tr><td>ConcurrentOutboundCalls</td><td>integer</td></tr>
                            <tr><td>ConcurrentBidirectionalCalls</td><td>integer</td></tr>
                            <tr><td>CpsQueue</td><td>an integer value - typically 300</td></tr>
                            <tr><td>CustomerTrafficAllowed</td><td>ALL, LITE, NONE and DOMESTIC</td></tr>
                            <tr><td>RateType</td><td>npanxx, flat, fullcr or billnumlcr</td></tr>
                            <tr><td>DiscountPercentage</td><td>an integer between 0 and 100</td></tr>
                            <tr><td>GuaranteedTermination</td><td>true or false</td></tr>
                            <tr><td>RogerTerminationSettings</td><td>a group encapsulating the new (undeveloped) ROGER termination settings</td></tr>
                            <tr><td>SubnetAddressingAllowed</td><td>true or false</td></tr>
                            </table>
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0"?>
                                    <TerminationSettings>
                                        <RogerUsedForTerminationSettings>false</RogerUsedForTerminationSettings>
                                        <LegacyTerminationSettings>
                                            <CustomerTrafficAllowed>ALL</CustomerTrafficAllowed>
                                            <CpsQueue>300</CpsQueue>
                                            <ConcurrentOutboundCalls>15</ConcurrentOutboundCalls>
                                            <ConcurrentBidirectionalCalls>0</ConcurrentBidirectionalCalls>
                                            <BillingType>DNIS</BillingType>
                                            <RateType>npanxx</RateType>
                                            <DiscountPercentage>29</DiscountPercentage>
                                            <GuaranteedTermination>false</GuaranteedTermination>
                                        </LegacyTerminationSettings>
                                        <RogerTerminationSettings/>
                                    </TerminationSettings>
                                    <!-- For roger termination -->
                                    <?xml version="1.0"?>
                                    <TerminationSettings>
                                        <RogerUsedForTerminationSettings>true</RogerUsedForTerminationSettings>
                                        <RogerTerminationSettings>
                                            <SubnetAddressingAllowed>true</SubnetAddressingAllowed>
                                        </RogerTerminationSettings>
                                    </TerminationSettings>
                        responses:
                            200:
                                description: a 200 OK is returned on successful updating of the Termination Settings.  There is no payload returned with a 200 OK.
                            400:
                                description: a 400 BAD REQUEST will be returned with a descriptive payload if the XML describing the termination settings resource is incorrect.  The error contains an error code and description.
                                body: 
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <TerminationSettingResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>nnnnn</ErrorCode>
                                                    <Description>Legacy Termination settings description incompatible with use of Roger for termination</Description>
                                                </ResponseStatus>
                                            </TerminationSettingResponse>
                    put:
                        description: | 
                            This resource can be PUT or POSTed to in order to establish the appropriate settings.
                            Some of the important values that are established as part of this termination are described in the section on POST.
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0"?>
                                    <TerminationSettings>
                                        <RogerUsedForTerminationSettings>false</RogerUsedForTerminationSettings>
                                        <LegacyTerminationSettings>
                                            <CustomerTrafficAllowed>ALL</CustomerTrafficAllowed>
                                            <CpsQueue>300</CpsQueue>
                                            <ConcurrentOutboundCalls>15</ConcurrentOutboundCalls>
                                            <ConcurrentBidirectionalCalls>0</ConcurrentBidirectionalCalls>
                                            <BillingType>DNIS</BillingType>
                                            <RateType>npanxx</RateType>
                                            <DiscountPercentage>29</DiscountPercentage>
                                            <GuaranteedTermination>false</GuaranteedTermination>
                                        </LegacyTerminationSettings>
                                        <RogerTerminationSettings/>
                                    </TerminationSettings>
                                    <!-- For roger termination -->
                                    <?xml version="1.0"?>
                                    <TerminationSettings>
                                        <RogerUsedForTerminationSettings>true</RogerUsedForTerminationSettings>
                                        <RogerTerminationSettings>
                                            <SubnetAddressingAllowed>true</SubnetAddressingAllowed>
                                        </RogerTerminationSettings>
                                    </TerminationSettings>
                        responses:
                            200:
                                description: a 200 OK is returned on successful updating of the Termination Settings.  There is no payload returned with a 200 OK.
                            400:
                                description: a 400 BAD REQUEST will be returned with a descriptive payload if the XML describing the termination settings resource is incorrect.  The error contains an error code and description.
                                body: 
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <TerminationSettingResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12586</ErrorCode>
                                                    <Description>CustomerTrafficAllowed is not valid. Valid values: ALL, LITE, DOMESTIC, NONE</Description>
                                                </ResponseStatus>
                                            </TerminationSettingResponse>
                    /migrate:
                        post:
                            description: migrate legacy termination settings to new termination settings
                            responses:
                                201:
                                    description: migration was successfully
                                400:
                                    description: migration can not be executed because RogerUsedForTerminationSettings is not transition
                /attribute: 
                    get:
                      description: get all attributes for account
                      responses:
                        200:
                          body:
                            application/xml:
                              example:
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <TerminationAttributesResponse>
                                    <TerminationAttributesWrapper>
                                        <accountId>42</accountId>
                                        <TerminationAttributes>
                                            <TerminationAttribute>
                                                <id>2</id>
                                                <type>TRACE</type>
                                                <value>true</value>
                                                <effectiveDate>2014-10-23T12:49:18</effectiveDate>
                                                <inEffectiveDate>2014-10-23T12:49:18</inEffectiveDate>
                                                <externalId>5</externalId>
                                            </TerminationAttribute>
                                        </TerminationAttributes>
                                    </TerminationAttributesWrapper>
                                </TerminationAttributesResponse>
                    post:
                        description: add to customer attribute
                        body:
                          application/xml:
                              example:
                                  <TerminationAttribute>
                                    <type>TRACE</type>
                                    <value>true</value>
                                    <effectiveDate>2014-10-23T12:59:30</effectiveDate>
                                    <inEffectiveDate>2014-10-23T12:59:30</inEffectiveDate>
                                  </TerminationAttribute>
                        responses:
                            201:
                                description: attribute was successfully added
                            404:
                                description: specified in request account was not found
                    /{attributeId}:
                        get:
                            description: get account attribute by id
                            responses:
                              200:
                                body:
                                  application/xml:
                                    example:
                                      <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                      <TerminationAttributeResponse>
                                        <TerminationAttributeWrapper>
                                            <accountId>44</accountId>
                                            <TerminationAttribute>
                                                <id>4</id>
                                                <type>TRACE</type>
                                                <value>true</value>
                                                <effectiveDate>2014-10-23T13:10:18</effectiveDate>
                                                <inEffectiveDate>2014-10-23T13:10:18</inEffectiveDate>
                                                <externalId>7</externalId>
                                            </TerminationAttribute>
                                        </TerminationAttributeWrapper>
                                      </TerminationAttributeResponse>
                              404:
                                description: account or attribute was not found
                        put:
                            description: update account attribute (attribute value)
                            body:
                              application/xml:
                                  example:
                                      <TerminationAttribute>
                                        <type>TRACE</type>
                                        <value>false</value>
                                        <effectiveDate>2014-10-23T12:59:30</effectiveDate>
                                        <inEffectiveDate>2014-10-23T12:59:30</inEffectiveDate>
                                      </TerminationAttribute>
                            responses:
                                200:
                                    body:
                                        application/xml:
                                            example: |
                                                <TerminationAttributeResponse>
                                                    <TerminationAttributeWrapper>
                                                        <accountId>45</accountId>
                                                        <TerminationAttribute>
                                                            <id>5</id>
                                                            <type>TRACE</type>
                                                            <value>false</value>
                                                            <effectiveDate>2014-10-23T13:20:29</effectiveDate>
                                                            <inEffectiveDate>2014-10-23T13:20:29</inEffectiveDate>
                                                            <externalId>8</externalId>
                                                        </TerminationAttribute>
                                                    </TerminationAttributeWrapper>
                                                </TerminationAttributeResponse>
                                400:
                                    description: update validation failed, eg changed forbidden fields (like metadata name)
                                404:
                                    description: account or attribute was not found
                        delete:
                            description: delete account attribute
                            responses:
                                200:
                                    description: account attribute was deleted
                                400:
                                    description: some required value was not found
                                404:
                                    description: account or attribute was not found
                /product: 
                    post:
                        description: assign product to customer
                        body:
                          application/xml:
                              example:
                                  <TerminationProductAssignment>
                                    <productName>Product name</productName>
                                    <attributes/>
                                  </TerminationProductAssignment>
                        responses:
                            201:
                                description: product was successfully assigned
                            404:
                                description: specified in request account was not found
                    /{productId}:
                        get:
                            description: get assignment by product id
                            queryParameters:
                              toAssign:
                                description: if toAssign = true response is a formated json response of the product assignment JSON. So that an upstream system can take this json, fill in the values, and submit it to a product assignment.
                            responses:
                              200:
                                body:
                                  application/xml:
                                    example:
                                      <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                      <TerminationCustomerProductAssignmentResponse>
                                        <TerminationProductWrapper>
                                            <TerminationProduct>
                                                <id>2</id>
                                                <name>Some name</name>
                                                <TerminationAttributes>
                                                    <TerminationAttribute>
                                                        <id>9</id>
                                                        <type>TRACE</type>
                                                        <value>true</value>
                                                        <effectiveDate>2014-10-23T13:45:34</effectiveDate>
                                                        <inEffectiveDate>2014-10-23T13:45:34</inEffectiveDate>
                                                    </TerminationAttribute>
                                                </TerminationAttributes>
                                            </TerminationProduct>
                                        </TerminationProductWrapper>
                                      </TerminationCustomerProductAssignmentResponse>
                              404:
                                description: product assignment was not found
                        delete:
                            description: delete product assignment
                            responses:
                                200:
                                    body:
                                      application/xml:
                                        example:
                                          <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                          <TerminationCustomerProductAssignmentResponse>
                                              <TerminationProductWrapper>
                                                <TerminationProduct>
                                                    <id>3</id>
                                                    <name>Default Dto</name>
                                                    <TerminationAttributes>
                                                        <TerminationAttribute>
                                                          <id>12</id>
                                                          <type>TRACE</type>
                                                          <value>true</value>
                                                          <effectiveDate>2014-10-23T13:51:03</effectiveDate>
                                                          <inEffectiveDate>2014-10-23T13:51:03</inEffectiveDate>
                                                         </TerminationAttribute>
                                                    </TerminationAttributes>
                                                </TerminationProduct>
                                              </TerminationProductWrapper>
                                          </TerminationCustomerProductAssignmentResponse>
                                400:
                                    description: some required value was not found
                                404:
                                    description: account or attribute was not found
                        /toAssign:
                            get:
                                description: get product and assignment mask for this product
                                responses:
                                  200:
                                    body:
                                      application/xml:
                                        example:
                                          <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                          <TerminationProductResponse>
                                            <TerminationProductWrapper>
                                                <TerminationProduct>
                                                    <id>4</id>
                                                    <name>Product name</name>
                                                    <TerminationAttributes>
                                                        <TerminationAttribute>
                                                            <id>15</id>
                                                            <type>TRACE</type>
                                                            <value>true</value>
                                                            <effectiveDate>2014-10-23T13:57:43</effectiveDate>
                                                            <inEffectiveDate>2014-10-23T13:57:43</inEffectiveDate>
                                                        </TerminationAttribute>
                                                    </TerminationAttributes>
                                                </TerminationProduct>
                                                <TerminationProductAssignment>
                                                    <productName>Product name</productName>
                                                    <attributes/>
                                                </TerminationProductAssignment>
                                            </TerminationProductWrapper>
                                          </TerminationProductResponse>
                                  404:
                                    description: assignment was not found
                /ratedeck: 
                    post:
                        description: assign rate deck to customer
                        body:
                          application/xml:
                              example:
                                  <TerminationRateDeckAssignment>
                                    <termServiceRateDeckId>4</termServiceRateDeckId>
                                    <termServiceAccountId>50</termServiceAccountId>
                                    <externalProfileId>77</externalProfileId>
                                    <externalAssignmentId>12</externalAssignmentId>
                                    <billingAccountId>2</billingAccountId>
                                    <increaseDate>2014-10-23T14:27:33</increaseDate>
                                    <decreaseDate>2014-10-23T14:27:33</decreaseDate>
                                  </TerminationRateDeckAssignment>
                        responses:
                            201:
                                description: rate deck was successfully assigned
                            404:
                                description: account or ratedeck was not found
                    /{assignmentId}:
                        get:
                            description: get assignment by id
                            responses:
                              200:
                                body:
                                  application/xml:
                                    example:
                                      <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                      <TerminationRateDeckAssignmentResponse>
                                        <TerminationRateDeckAssignment>
                                            <id>4</id>
                                            <termServiceRateDeckId>5</termServiceRateDeckId>
                                            <termServiceAccountId>51</termServiceAccountId>
                                            <externalProfileId>78</externalProfileId>
                                            <externalAssignmentId>4</externalAssignmentId>
                                            <billingAccountId>1000</billingAccountId>
                                            <increaseDate>2014-10-23T12:10:35</increaseDate>
                                            <decreaseDate>2014-10-23T12:10:35</decreaseDate>
                                        </TerminationRateDeckAssignment>
                                      </TerminationRateDeckAssignmentResponse>
                              404:
                                description: account or rate deck assignment was not found
                        delete:
                            description: delete rate deck assignment
                            responses:
                                200:
                                    description: rate deck assignment was deleted
                                404:
                                    description:  account or rate deck assignment was not found
            /uctrunking: 
                description: |
                    UC Trunking is a product separate from traditional wholesale that allows customers to purchase services in more
                    granular ways. Bandwidth partners can more finely tune the services of their customers using UC Trunking.
                get:
                    description: A GET on the UC Trunking product indicates the support (or lack of support) for the UC Trunking capabilities for the specified account.
                    responses:
                        200:
                            description: A small payload that indicates that the UC Trunking product is provisioned for the account.
                            body: 
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <AccountProductResponse>
                                            <Product>
                                                <Name>UcTrunking</Name>
                                            </Product>
                                        </AccountProductResponse>
                        404:
                            description: NOT FOUND - is returned if the Termination Resource is not found.  An explanatory payload will be returned with explanation and an error code.
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <AccountProductResponse>
                                            <ResponseStatus>
                                                <ErrorCode></ErrorCode>
                                                <Description>Account '' does not have product 'UC Trunking'</Description>
                                            </ResponseStatus>
                                        </AccountProductResponse>
                put:
                    description: |
                        Updates the UC Trunking according to the features specified in the body. <br>
                        Updates available are: <br>
                        <ul>
                        <li>DlDa</li>
                        <li>CNAM</li>
                        <li>CallForwarding</li>
                        <li>LIDB</li>
                        </ul>
                        a PUT on a UC Trunking resource that already exists will succeed, but does not change the UC Trunking product.
                    body:
                        application/xml:
                            example: |
                                <Product>
                                    <Name>UcTrunking</Name>
                                    <Features>
                                        <Feature>CallForwarding</Feature>
                                        <Feature>CNAM</Feature>
                                        <Feature>LIDB</Feature>
                                        <Feature>DlDa</Feature>
                                    </Features>
                                </Product>
                    responses:
                        200:
                            description: 200 OK indicates that the UC Trunking capability is associated with the account. If UC Trunking is not already associated with the account then a 404 is returned. NO payload is returned with the 200 OK
                        400:
                            description: 400 Bad Request indicates that the feature being added is not an allowable feature.
                            body:
                                application/xml:
                                    example: |
                                        <AccountProductResponse>
                                            <ResponseStatus>
                                                <ErrorCode>12019</ErrorCode>
                                                <Description>Feature 'this doesnt exist' does not exist. Valid values: DlDa, CNAM, CallForwarding, LIDB</Description>
                                            </ResponseStatus>
                                        </AccountProductResponse>
                        404:
                            description: NOT FOUND - If the UC Trunking resource is not found a 404 Not Found with an explanatory payload will be returned.
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <AccountProductResponse>
                                            <ResponseStatus>
                                                <ErrorCode></ErrorCode>
                                                <Description>Account '' does not have product 'UC Trunking'</Description>
                                            </ResponseStatus>
                                        </AccountProductResponse>
                /settings: 
                    description: | 
                        The UC Trunking settings resource is used to define the attributes of the UC Trunking product that will apply to the account specified in the URL.
                    get:
                        description: |
                            These are the settings associated with the provisioning of UC Trunking settings.
                        responses:
                            200:
                                body:
                                    application/xml:
                                        example: |
                                            <UcTrunkingSettingsResponse>
                                                <UcTrunkingSettings>
                                                    <!-- Either AGENT (for Agency+ accounts) or RESELLER (for wholesale) -->
                                                    <PartnerType>AGENT</PartnerType>
                                                    <MaxUcTrunks>40</MaxUcTrunks>
                                                    <BillingType>DNIS</BillingType>
                                                    <CustomerTrafficAllowed>ALL</CustomerTrafficAllowed>
                                                    <UsageCategory>UC500</UsageCategory>
                                                    <TrunkAllocationRules>
                                                        <TrunkAllocationRule>
                                                            <LowerBound>1</LowerBound>
                                                            <Ratio>1</Ratio>
                                                        </TrunkAllocationRule>
                                                        <TrunkAllocationRule>
                                                            <LowerBound>10</LowerBound>
                                                            <Ratio>2</Ratio>
                                                        </TrunkAllocationRule>
                                                        <TrunkAllocationRule>
                                                            <LowerBound>15</LowerBound>
                                                            <Ratio>5</Ratio>
                                                        </TrunkAllocationRule>
                                                    </TrunkAllocationRules>
                                                    <AllowedUcTypes>
                                                        <UcType>Seats</UcType>
                                                    </AllowedUcTypes>
                                                </UcTrunkingSettings>
                                            </UcTrunkingSettingsResponse>
                            404:
                                description: |
                                    If the settings are not present for the UC Trunking product a 404 NOT FOUND is returned with an explanatory payload.
                                body: 
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <UcTrunkingSettingsResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12017</ErrorCode>
                                                    <Description>Account '14' does not have product 'UcTrunking'</Description>
                                                </ResponseStatus>
                                            </UcTrunkingSettingsResponse>
                    post:
                        description: |
                            This resource can be PUT or POSTed to in order to establish the appropriate settings.
                        body:
                            application/xml:
                                example: |
                                    <UcTrunkingSettings>
                                        <!-- Either AGENT (for Agency+ accounts) or RESELLER (for wholesale).  Cannot be changed once set. -->
                                        <PartnerType>AGENT</PartnerType>
                                        <MaxUcTrunks>40</MaxUcTrunks>
                                        <BillingType>DNIS</BillingType>
                                        <CustomerTrafficAllowed>ALL</CustomerTrafficAllowed>
                                        <UsageCategory>UC500</UsageCategory>
                                        <TrunkAllocationRules>
                                            <TrunkAllocationRule>
                                                <LowerBound>1</LowerBound>
                                                <Ratio>1</Ratio>
                                            </TrunkAllocationRule>
                                            <TrunkAllocationRule>
                                                <LowerBound>10</LowerBound>
                                                <Ratio>2</Ratio>
                                            </TrunkAllocationRule>
                                            <TrunkAllocationRule>
                                                <LowerBound>15</LowerBound>
                                                <Ratio>5</Ratio>
                                            </TrunkAllocationRule>
                                        </TrunkAllocationRules>
                                        <AllowedUcTypes>
                                            <UcType>Seats</UcType>
                                        </AllowedUcTypes>
                                    </UcTrunkingSettings>
                        responses:
                            200:
                                description: a 200 OK is returned on successful updating of the UC Trunking Settings.  There is no payload returned with a 200 OK.
                            400:
                                description: a 400 BAD REQUEST will be returned with a descriptive payload if the XML describing the UC Trunking settings resource is incorrect.  The error contains an error code and description.
                                body: 
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <UCTrunkingSettingResponse>
                                                <ResponseStatus>
                                                    <ErrorCode></ErrorCode>
                                                    <Description></Description>
                                                </ResponseStatus>
                                            </UCTrunkingSettingResponse>
                    put:
                        description: | 
                            This resource can be PUT or POSTed to in order to establish the appropriate settings.
                            Some of the important values that are established as part of this UC Trunking are described in the section on POST.
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0"?>
                                    <UcTrunkingSettings>
                                        <MaxUcTrunks>40</MaxUcTrunks>
                                        <BillingType>DNIS</BillingType>
                                        <CustomerTrafficAllowed>ALL</CustomerTrafficAllowed>
                                        <UsageCategory>UC500</UsageCategory>
                                        <TrunkAllocationRules>
                                            <TrunkAllocationRule>
                                                <LowerBound>1</LowerBound>
                                                <Ratio>1</Ratio>
                                            </TrunkAllocationRule>
                                            <TrunkAllocationRule>
                                                <LowerBound>10</LowerBound>
                                                <Ratio>2</Ratio>
                                            </TrunkAllocationRule>
                                            <TrunkAllocationRule>
                                                <LowerBound>15</LowerBound>
                                                <Ratio>5</Ratio>
                                            </TrunkAllocationRule>
                                        </TrunkAllocationRules>
                                        <AllowedUcTypes>
                                            <UcType>Seats</UcType>
                                        </AllowedUcTypes>
                                    </UcTrunkingSettings>
                        responses:
                            200:
                                description: a 200 OK is returned on successful updating of the UC Trunking Settings.  There is no payload returned with a 200 OK.
                            400:
                                description: a 400 BAD REQUEST will be returned with a descriptive payload if the XML describing the UC Trunking settings resource is incorrect.  The error contains an error code and description.
                                body: 
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <UCTrunkingSettingResponse>
                                                <ResponseStatus>
                                                    <ErrorCode></ErrorCode>
                                                    <Description></Description>
                                                </ResponseStatus>
                                            </UCTrunkingSettingResponse>
            /messaging: 
                description: This is a single line of descriptive text.  See other formats below
                get:
                    description: |
                        A sample description.  Long descriptions can be piped, and short ones can go on the line with the keyword 
                    queryParameters:
                        account:
                            type: string
                            required: true
                            description: the account that the user is valid for
                            default: 20
                        direction:
                            description: hardy har har
                            type: string
                            example: a_string
                        inclination:
                            description: another fing description
                            type: integer
                            example: 98764
                            maximum: 99999
                    responses:    # note that the responses cannot be generic.  4xx is unfortunately not a valid response tag
                        200:
                            description: An optional description of the response.
                            body: 
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <example>
                                            example content is piped content that will be provided as an example
                                            in this case of the Response
                                        </example> 
                        400:
                            description: |
                                The description can be used for discussing generic responses.
                                Note that descriptions anywhere can be piped content. Lines will be concatenated together.
                                *_Markup is allowed_*
                            body: 
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <example>
                                            example content is piped content that will be provided as an example
                                            in this case of the Response
                                        </example> 
                post:
                    description: Create a user
                    body:
                        application/xml:
                            example: |
                                <Users>
                                    <User>
                                        <Username>testcustomer</Username>
                                        <Password>test123</Password>
                                        <FirstName>Jane</FirstName>
                                        <LastName>Doe</LastName>
                                        <EmailAddress>janedoe@bandwidth.com</EmailAddress>
                                        <TelephoneNumber>9199999999</TelephoneNumber>
                                    </User>
                                </Users>
                    responses:
                        200:
                            body: 
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <UsersResponse>
                                            <Users>
                                                <User>
                                                    <Username>admin</Username>
                                                    <Roles>
                                                        <Role>
                                                            <RoleName>ROLE_ADMIN</RoleName>
                                                            <Permissions>
                                                                <Permission>
                                                                    <PermissionName>VIEW</PermissionName>
                                                                </Permission>
                                                                <Permission>
                                                                    <PermissionName>UPDATE</PermissionName>
                                                                </Permission>
                                                            </Permissions>
                                                        </Role>
                                                        <Role>
                                                            <RoleName>ROLE_BDR</RoleName>
                                                            <Permissions>
                                                                <Permission>
                                                                    <PermissionName>VIEW</PermissionName>
                                                                </Permission>
                                                            </Permissions>
                                                        </Role>
                                                    </Roles>
                                                </User>
                                            </Users>
                                        </UsersResponse>
                put:
                    description: |
                        A piped description that has 
                        more than one line and some 
                        * markup 
                    responses:
                        200:
                            body: 
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <UsersResponse>
                                            <Users>
                                                <User>
                                                    <Username>admin</Username>
                                                    <Roles>
                                                        <Role>
                                                            <RoleName>ROLE_ADMIN</RoleName>
                                                            <Permissions>
                                                                <Permission>
                                                                    <PermissionName>VIEW</PermissionName>
                                                                </Permission>
                                                                <Permission>
                                                                    <PermissionName>UPDATE</PermissionName>
                                                                </Permission>
                                                            </Permissions>
                                                        </Role>
                                                        <Role>
                                                            <RoleName>ROLE_BDR</RoleName>
                                                            <Permissions>
                                                                <Permission>
                                                                    <PermissionName>VIEW</PermissionName>
                                                                </Permission>
                                                            </Permissions>
                                                        </Role>
                                                    </Roles>
                                                </User>
                                            </Users>
                                        </UsersResponse>               
                #  The resource tree that follows the root can be placed here.
                # values in curly braces will appear as fillable parameters in the URL
                # remember to fix these / delete these until the files are really there.
                # /{example_ID}: #include example/example.raml
                # /resourcename: #include resourcename/resourcename.raml
                /settings: 
                    description: |
                        The Messaging settings resource is used to specialize the Messaging product for the specific wholesale account.
                    get:
                        description: |
                            The GET returns the current settings, indicating is Messaging product enabled now and if yes will Messaging feature be enabled on each new telephone number.
                        responses:
                            200:
                                description: The Messaging settings element is returned.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <MessagingSettingsResponse>
                                                <MessagingSettings>
                                                    <Enabled>true</Enabled>
                                                    <EnabledOnNewTN>true</EnabledOnNewTN>
                                                    <OnNetRoute>X641</OnNetRoute>
                                                    <OffNetUsRoute>E830</OffNetUsRoute>
                                                    <OffNetCaRoute>E830</OffNetCaRoute>
                                                    <TollFree>E980</TollFree>
                                                    <ExternalCustomerOwned>E830</ExternalCustomerOwned>
                                                    <ExternalThirdParty>E830</ExternalThirdParty>
                                                    <ExternalCanadian>E830</ExternalCanadian>
                                                    <ExternalTollFree>E980</ExternalTollFree>
                                                </MessagingSettings>
                                            </MessagingSettingsResponse>
                            404:
                                description: |
                                    NOT FOUND
                                    If the Messaging product exists on the account, but settings are missing, then the 404 not found response is used.
                                    If the Messaging product does not exist on the account then the 404 will indicate that the Messaging products resource cannot be found.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <MessagingSettingsResponse>
                                                <ResponseStatus>
                                                    <!-- possibly a different Errorcode will be required -->
                                                    <ErrorCode>12030</ErrorCode>
                                                    <Description>Messaging product settings have not been configured</Description>
                                                </ResponseStatus>
                                            </MessagingSettingsResponse>
                    post:
                        description: |
                            This resource can be used for POST to establish the appropriate settings.
                            Some of the important values that are established as part of this termination are...
                            <table>
                                <tr><th>parameter</th><th>description</th></tr>
                                <tr><td>Enabled</td><td>[Boolean] flag to enable/disable Messaging product on the account. Value is required.</td></tr>
                                <tr><td>EnabledOnNewTN</td><td>[Boolean] flag to enable/disable Messaging feature on each new telephone number. Value is required if Enabled = true </td></tr>
                                <tr><td>ExistingTNAction</td><td>[Enum] action will be performed to all existing telephone numbers on the account. Valid values: enable, disable, nochange.</td></tr>
                                <tr><td>OnNetRoute</td><td>[String] route will be provisioned for OnNet TNs.</td></tr>
                                <tr><td>OffNetUsRoute</td><td>[String] route will be provisioned for OffNetUs TNs.</td></tr>
                                <tr><td>OffNetCaRoute</td><td>[String] route will be provisioned for OffNetCa TNs.</td></tr>
                                <tr><td>TollFree</td><td>[String] route will be provisioned for TollFree TNs.</td></tr>
                                <tr><td>ExternalCustomerOwned</td><td>[String] route will be provisioned for ExternalCustomerOwned TNs.</td></tr>
                                <tr><td>ExternalThirdParty</td><td>[String] route will be provisioned for ExternalThirdParty TNs.</td></tr>
                                <tr><td>ExternalCanadian</td><td>[String] route will be provisioned for ExternalCanadian TNs.</td></tr>
                                <tr><td>ExternalTollFree</td><td>[String] route will be provisioned for ExternalTollFree TNs.</td></tr>
                            </table>
                        body:
                            application/xml:
                                example: |
                                    <MessagingSettings>
                                        <Enabled>true</Enabled>
                                        <EnabledOnNewTN>true</EnabledOnNewTN>
                                        <ExistingTNAction>enable</ExistingTNAction>
                                        <OnNetRoute>X641</OnNetRoute>
                                        <OffNetUsRoute>E830</OffNetUsRoute>
                                        <OffNetCaRoute>E830</OffNetCaRoute>
                                        <TollFree>E980</TollFree>
                                        <ExternalCustomerOwned>E830</ExternalCustomerOwned>
                                        <ExternalThirdParty>E830</ExternalThirdParty>
                                        <ExternalCanadian>E830</ExternalCanadian>
                                        <ExternalTollFree>E980</ExternalTollFree>
                                    </MessagingSettings>
                        responses:
                            200:
                                description: a 200 OK is returned on successful updating of the Messaging Settings. There is no payload returned with a 200 OK.
                            400:
                                description: a 400 BAD REQUEST will be returned with a descriptive payload if the XML describing the Messaging settings resource is incorrect or other factors prevent execution of the POST. The error contains an error code and description.
                                body:
                                    application/xml:
                                        example: |
                                            <MessagingSettingsResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>******</ErrorCode>
                                                    <Description>The supplied ExistingTNAction 'foo' is not valid. Valid values: ENABLE, DISABLE, NOCHANGE</Description>
                                                </ResponseStatus>
                                            </MessagingSettingsResponse>
                    put:
                        description: |
                            This resource can be used for PUT to establish the appropriate settings. Messaging settings cannot be changed if previous settings are not applied yet.
                            Some of the important values that are established as part of this termination are...
                            <table>
                                <tr><th>parameter</th><th>description</th></tr>
                                <tr><td>Enabled</td><td>[Boolean] flag to enable/disable Messaging product on the account. Value is required.</td></tr>
                                <tr><td>EnabledOnNewTN</td><td>[Boolean] flag to enable/disable Messaging feature on each new telephone number. Value is required if Enabled = true </td></tr>
                                <tr><td>ExistingTNAction</td><td>[Enum] action will be performed to all existing telephone numbers on the account. Valid values: enable, disable, nochange.</td></tr>
                                <tr><td>OnNetRoute</td><td>[String] route will be provisioned for OnNet TNs.</td></tr>
                                <tr><td>OffNetUsRoute</td><td>[String] route will be provisioned for OffNetUs TNs.</td></tr>
                                <tr><td>OffNetCaRoute</td><td>[String] route will be provisioned for OffNetCa TNs.</td></tr>
                                <tr><td>TollFree</td><td>[String] route will be provisioned for TollFree TNs.</td></tr>
                                <tr><td>ExternalCustomerOwned</td><td>[String] route will be provisioned for ExternalCustomerOwned TNs.</td></tr>
                                <tr><td>ExternalThirdParty</td><td>[String] route will be provisioned for ExternalThirdParty TNs.</td></tr>
                                <tr><td>ExternalCanadian</td><td>[String] route will be provisioned for ExternalCanadian TNs.</td></tr>
                                <tr><td>ExternalTollFree</td><td>[String] route will be provisioned for ExternalTollFree TNs.</td></tr>
                            </table>
                        body:
                            application/xml:
                                example: |
                                    <MessagingSettings>
                                        <Enabled>true</Enabled>
                                        <EnabledOnNewTN>true</EnabledOnNewTN>
                                        <ExistingTNAction>enable</ExistingTNAction>
                                        <OnNetRoute>X641</OnNetRoute>
                                        <OffNetUsRoute>E830</OffNetUsRoute>
                                        <OffNetCaRoute>E830</OffNetCaRoute>
                                        <TollFree>E980</TollFree>
                                        <ExternalCustomerOwned>E830</ExternalCustomerOwned>
                                        <ExternalThirdParty>E830</ExternalThirdParty>
                                        <ExternalCanadian>E830</ExternalCanadian>
                                        <ExternalTollFree>E980</ExternalTollFree>
                                    </MessagingSettings>
                        responses:
                            200:
                                description: a 200 OK is returned on successful updating of the SMS Settings. There is no payload returned with a 200 OK.
                            400:
                                description: a 400 BAD REQUEST will be returned with a descriptive payload if the XML describing the SMS settings resource is incorrect or other factors prevent execution of the POST. The error contains an error code and description.
                                body:
                                    application/xml:
                                        example: |
                                            <MessagingSettingsResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>******</ErrorCode>
                                                    <Description>MessagingSettings are processing now. You cannot change it before previous settings was applied.</Description>
                                                </ResponseStatus>
                                            </MessagingSettingsResponse>
                /espids: 
                    description: |
                        Api for managing espids for account with Messaging product
                    get:
                        description: |
                            The GET returns all espids assigned to account
                        responses:
                            200:
                                description: Espids are returned.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AccountEspidsResponse>
                                              <espids>
                                                <espidList>
                                                  <espid>
                                                    <id>6</id>
                                                    <Name>testEspid</Name>
                                                    <espidValue>1111</espidValue>
                                                  </espid>
                                                </espidList>
                                              </espids>
                                            </AccountEspidsResponse>
                    put:
                        description: |
                            This resource can be used for PUT to establish the appropriate espids.
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
                                    <espids>
                                      <espidList>
                                        <espid>
                                          <Name>testEspid</Name>
                                          <espidValue>1111</espidValue>
                                        </espid>
                                      </espidList>
                                    </espids>
                        responses:
                            200:
                                description: a 200 OK is returned on successful updating of espids.
                                body:
                                  application/xml:
                                      example: |
                                          <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                          <AccountEspidsResponse>
                                            <espids>
                                              <espidList>
                                                <espid>
                                                  <id>6</id>
                                                  <Name>testEspid</Name>
                                                  <espidValue>1111</espidValue>
                                                </espid>
                                              </espidList>
                                            </espids>
                                          </AccountEspidsResponse>
                            400:
                                description: a 400 BAD REQUEST will be returned if user tries to update already assigned espid.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AccountEspidsResponse>
                                              <ResponseStatus>
                                                <ErrorCode>12721</ErrorCode>
                                                <Description>Espid 1111 is assigned to some defaultRoute for accountId 12346164 and can not be modified</Description>
                                              </ResponseStatus>
                                            </AccountEspidsResponse>
                /features/sms: 
                    description: API for managing sms feature settings for account
                    get:
                      description: |
                        Get sms settings for account
                      responses:
                        200:
                          body:
                            application/xml:
                              example: |
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <AccountSmsFeatureResponse>
                                    <AccountSmsFeature>
                                        <AccountSmsFeatureSettings>
                                            <TollFree>true</TollFree>
                                            <ShortCode>true</ShortCode>
                                            <Zone1>true</Zone1>
                                            <Zone2>true</Zone2>
                                            <Zone3>true</Zone3>
                                            <Zone4>true</Zone4>
                                            <Zone5>true</Zone5>
                                            <SmppEnabled>true</SmppEnabled>
                                            <DefaultProvider>0</DefaultProvider>
                                        </AccountSmsFeatureSettings>
                                        <SmppSettings>
                                            <SmppUsername>testUser</SmppUsername>
                                            <Password>secret</Password>
                                            <Dlr>FINAL</Dlr>
                                            <DlrCarrier>false</DlrCarrier>
                                            <MaxPendingSubmits>100</MaxPendingSubmits>
                                            <ForceTon>false</ForceTon>
                                            <AllowThirdPartyTN>false</AllowThirdPartyTN>
                                            <ConnectionTypeDefault>RECEIVER_ONLY</ConnectionTypeDefault>
                                            <MaxConnections>5</MaxConnections>
                                            <SrcTon>DEFAULT</SrcTon>
                                            <SrcNpi>DEFAULT</SrcNpi>
                                            <DstTon>DEFAULT</DstTon>
                                            <DstNpi>DEFAULT</DstNpi>
                                        </SmppSettings>
                                    </AccountSmsFeature>
                                </AccountSmsFeatureResponse>
                    post:
                        description: add sms feature settings
                        body:
                            application/xml:
                                example:
                                    <?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
                                    <AccountSmsFeature>
                                        <AccountSmsFeatureSettings>
                                            <TollFree>true</TollFree>
                                            <ShortCode>true</ShortCode>
                                            <Zone1>true</Zone1>
                                            <Zone2>true</Zone2>
                                            <Zone3>true</Zone3>
                                            <Zone4>true</Zone4>
                                            <Zone5>true</Zone5>
                                            <SmppEnabled>true</SmppEnabled>
                                            <DefaultProvider>0</DefaultProvider>
                                        </AccountSmsFeatureSettings>
                                        <SmppSettings>
                                            <SmppUsername>testUser</SmppUsername>
                                            <Password>secret</Password>
                                            <Dlr>FINAL</Dlr>
                                            <DlrCarrier>false</DlrCarrier>
                                            <MaxPendingSubmits>100</MaxPendingSubmits>
                                            <ForceTon>false</ForceTon>
                                            <AllowThirdPartyTN>false</AllowThirdPartyTN>
                                            <ConnectionTypeDefault>RECEIVER_ONLY</ConnectionTypeDefault>
                                            <MaxConnections>5</MaxConnections>
                                            <ResetPassword>false</ResetPassword>
                                            <SrcTon>DEFAULT</SrcTon>
                                            <SrcNpi>DEFAULT</SrcNpi>
                                            <DstTon>DEFAULT</DstTon>
                                            <DstNpi>DEFAULT</DstNpi>
                                        </SmppSettings>
                                    </AccountSmsFeature>
                        responses:
                            201:
                                description: sms feature settings were successfuly added <br>
                                body:
                                    application/xml:
                                        example:
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AccountSmsFeatureResponse>
                                                <AccountSmsFeature>
                                                    <AccountSmsFeatureSettings>
                                                        <TollFree>true</TollFree>
                                                        <ShortCode>true</ShortCode>
                                                        <Zone1>true</Zone1>
                                                        <Zone2>true</Zone2>
                                                        <Zone3>true</Zone3>
                                                        <Zone4>true</Zone4>
                                                        <Zone5>true</Zone5>
                                                        <SmppEnabled>true</SmppEnabled>
                                                        <DefaultProvider>0</DefaultProvider>
                                                    </AccountSmsFeatureSettings>
                                                    <SmppSettings>
                                                        <SmppUsername>testUser</SmppUsername>
                                                        <Password>secret</Password>
                                                        <Dlr>FINAL</Dlr>
                                                        <DlrCarrier>false</DlrCarrier>
                                                        <MaxPendingSubmits>100</MaxPendingSubmits>
                                                        <ForceTon>false</ForceTon>
                                                        <AllowThirdPartyTN>false</AllowThirdPartyTN>
                                                        <ConnectionTypeDefault>RECEIVER_ONLY</ConnectionTypeDefault>
                                                        <MaxConnections>5</MaxConnections>
                                                        <SrcTon>DEFAULT</SrcTon>
                                                        <SrcNpi>DEFAULT</SrcNpi>
                                                        <DstTon>DEFAULT</DstTon>
                                                        <DstNpi>DEFAULT</DstNpi>
                                                    </SmppSettings>
                                                </AccountSmsFeature>
                                            </AccountSmsFeatureResponse>
                            400:
                                description: some values are missed <br>
                                body:
                                    application/xml:
                                        example:
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AccountSmsFeatureResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>1003</ErrorCode>
                                                    <Description>smppSettings.allowThirdPartyTN is required</Description>
                                                </ResponseStatus>
                                            </AccountSmsFeatureResponse>
                    put:
                        description: update sms feature settings
                        body:
                            application/json:
                                example: |
                                    <?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
                                        <AccountSmsFeature>
                                            <AccountSmsFeatureSettings>
                                                <TollFree>true</TollFree>
                                                <ShortCode>true</ShortCode>
                                                <Zone1>true</Zone1>
                                                <Zone2>true</Zone2>
                                                <Zone3>true</Zone3>
                                                <Zone4>true</Zone4>
                                                <Zone5>true</Zone5>
                                                <SmppEnabled>true</SmppEnabled>
                                                <DefaultProvider>0</DefaultProvider>
                                            </AccountSmsFeatureSettings>
                                            <SmppSettings>
                                                <SmppUsername>testUser</SmppUsername>
                                                <Password>secret</Password>
                                                <Dlr>FINAL</Dlr>
                                                <DlrCarrier>false</DlrCarrier>
                                                <MaxPendingSubmits>101</MaxPendingSubmits>
                                                <ForceTon>true</ForceTon>
                                                <AllowThirdPartyTN>true</AllowThirdPartyTN>
                                                <ConnectionTypeDefault>SENDER_ONLY</ConnectionTypeDefault>
                                                <MaxConnections>6</MaxConnections>
                                                <ResetPassword>false</ResetPassword>
                                                <SrcTon>SUBSCRIBER</SrcTon>
                                                <SrcNpi>NATIONAL</SrcNpi>
                                                <DstTon>ALPHANUMERIC</DstTon>
                                                <DstNpi>E164</DstNpi>
                                            </SmppSettings>
                                        </AccountSmsFeature>
                        responses:
                            200:
                                description: settings were successfully updated
                            400:
                                description: some values are missed <br>
                                body:
                                    application/xml:
                                        example:
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AccountSmsFeatureResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>1003</ErrorCode>
                                                    <Description>smppSettings.maxPendingSubmits is required</Description>
                                                </ResponseStatus>
                                            </AccountSmsFeatureResponse>
                /features/http: 
                    description: API for managing http feature settings for account
                    get:
                      description: |
                        Get http settings for account
                      responses:
                        200:
                          body:
                            application/xml:
                              example: |
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <AccountHttpFeatureResponse>
                                    <AccountHttpFeature>
                                        <DefaultProxyPeerId>500031</DefaultProxyPeerId>
                                    </AccountHttpFeature>
                                </AccountHttpFeatureResponse>
                    post:
                        description: add http feature settings
                        body:
                            application/xml:
                                example:
                                    <?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
                                    <AccountHttpFeature>
                                        <DefaultProxyPeerId>1</DefaultProxyPeerId>
                                    </AccountHttpFeature>
                        responses:
                            201:
                                description: http feature settings was successfully added <br>
                                body:
                                    application/xml:
                                        example:
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AccountHttpFeatureResponse>
                                                <AccountHttpFeature>
                                                    <DefaultProxyPeerId>1</DefaultProxyPeerId>
                                                </AccountHttpFeature>
                                            </AccountHttpFeatureResponse>
                            400:
                                description: Specified sippeer id does not exist <br>
                                body:
                                    application/xml:
                                        example:
                                            <AccountHttpFeatureResponse>
                                              <ResponseStatus>
                                                <ErrorCode>12771</ErrorCode>
                                                <Description>Specified sippeer id 45 does not exist.</Description>
                                              </ResponseStatus>
                                            </AccountHttpFeatureResponse>
                    put:
                        description: update http feature settings
                        body:
                            application/json:
                                example: |
                                    <?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
                                    <AccountHttpFeature>
                                        <DefaultProxyPeerId>500031</DefaultProxyPeerId>
                                    </AccountHttpFeature>
                        responses:
                            200:
                                description: settings were successfully updated
                            400:
                                description: Specified sippeer id does not exist <br>
                                body:
                                    application/xml:
                                        example:
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AccountHttpFeatureResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12771</ErrorCode>
                                                    <Description>Specified sippeer id 45 does not exist.</Description>
                                                </ResponseStatus>
                                            </AccountHttpFeatureResponse>
                    delete:
                        description: delete http settings
                        responses:
                            200:
                                description: settings were deleted
                            404:
                                description: http settings were not found
                /features/mms: 
                    description: API for managing mms feature settings for account
                    get:
                      description: |
                        Get mms settings for account
                      responses:
                        200:
                          body:
                            application/xml:
                              example: |
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <AccountMmsFeatureResponse>
                                    <MmsFeature>
                                        <MmsSettings>
                                            <MM4Enabled>true</MM4Enabled>
                                        </MmsSettings>
                                        <MM4Settings>
                                            <ConnValidWindow>5</ConnValidWindow>
                                            <Tls>DISABLED</Tls>
                                            <MaxConn>10</MaxConn>
                                            <PersistentConn>false</PersistentConn>
                                            <KeepAliveNoop>false</KeepAliveNoop>
                                            <SkipAck>true</SkipAck>
                                            <AllowMultiRecepient>false</AllowMultiRecepient>
                                            <ConnMessageRatio>1.5</ConnMessageRatio>
                                            <ConnSentTimeout>10</ConnSentTimeout>
                                            <GenDlr>false</GenDlr>
                                            <GenReadReply>false</GenReadReply>
                                            <MaxMessagesInQueue>100</MaxMessagesInQueue>
                                            <LoopAllowed>false</LoopAllowed>
                                            <ForceAck>false</ForceAck>
                                            <DefaultProvider>1</DefaultProvider>
                                        </MM4Settings>
                                    </MmsFeature>
                                </AccountMmsFeatureResponse>
                    post:
                        description: set mms feature settings
                        body:
                            application/xml:
                                example:
                                    <?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
                                    <AccountMmsFeature>
                                        <MmsSettings>
                                            <MM4Enabled>true</MM4Enabled>
                                        </MmsSettings>
                                        <MM4Settings>
                                            <ConnValidWindow>5</ConnValidWindow>
                                            <Tls>DISABLED</Tls>
                                            <MaxConn>10</MaxConn>
                                            <PersistentConn>false</PersistentConn>
                                            <KeepAliveNoop>false</KeepAliveNoop>
                                            <SkipAck>true</SkipAck>
                                            <AllowMultiRecepient>false</AllowMultiRecepient>
                                            <ConnMessageRatio>1.5</ConnMessageRatio>
                                            <ConnSentTimeout>10</ConnSentTimeout>
                                            <GenDlr>false</GenDlr>
                                            <GenReadReply>false</GenReadReply>
                                            <MaxMessagesInQueue>100</MaxMessagesInQueue>
                                            <LoopAllowed>false</LoopAllowed>
                                            <ForceAck>false</ForceAck>
                                            <DefaultProvider>1</DefaultProvider>
                                        </MM4Settings>
                                    </AccountMmsFeature>
                        responses:
                            201:
                                description: mms feature settings were successfully added <br>
                                body:
                                    application/xml:
                                        example:
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AccountMmsFeatureResponse>
                                                <MmsFeature>
                                                    <MmsSettings>
                                                        <MM4Enabled>true</MM4Enabled>
                                                    </MmsSettings>
                                                    <MM4Settings>
                                                        <ConnValidWindow>5</ConnValidWindow>
                                                        <Tls>DISABLED</Tls>
                                                        <MaxConn>10</MaxConn>
                                                        <PersistentConn>false</PersistentConn>
                                                        <KeepAliveNoop>false</KeepAliveNoop>
                                                        <SkipAck>true</SkipAck>
                                                        <AllowMultiRecepient>false</AllowMultiRecepient>
                                                        <ConnMessageRatio>1.5</ConnMessageRatio>
                                                        <ConnSentTimeout>10</ConnSentTimeout>
                                                        <GenDlr>false</GenDlr>
                                                        <GenReadReply>false</GenReadReply>
                                                        <MaxMessagesInQueue>100</MaxMessagesInQueue>
                                                        <LoopAllowed>false</LoopAllowed>
                                                        <ForceAck>false</ForceAck>
                                                        <DefaultProvider>1</DefaultProvider>
                                                    </MM4Settings>
                                                </MmsFeature>
                                            </AccountMmsFeatureResponse>
                            400:
                                description: Specified sippeer id does not exist <br>
                                body:
                                    application/xml:
                                        example:
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AccountMmsFeatureResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>1003</ErrorCode>
                                                    <Description>mm4AdminSettings is required</Description>
                                                </ResponseStatus>
                                            </AccountMmsFeatureResponse>
                    put:
                        description: update mms feature settings
                        body:
                            application/json:
                                example: |
                                    <?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
                                    <AccountMmsFeature>
                                        <MmsSettings>
                                            <MM4Enabled>false</MM4Enabled>
                                        </MmsSettings>
                                    </AccountMmsFeature>
                        responses:
                            200:
                                description: settings were successfully updated
                            400:
                                description: mm4 settings are not allowed if mm4 is disabled <br>
                                body:
                                    application/xml:
                                        example:
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AccountMmsFeatureResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>1005</ErrorCode>
                                                    <Description>mm4Settings is not allowed</Description>
                                                </ResponseStatus>
                                            </AccountMmsFeatureResponse>
                    delete:
                        description: delete mms settings
                        responses:
                            200:
                                description: settings were deleted
                            404:
                                description: mms settings were not found
                    /mm4settings: 
                        description: API for managing mm4 settings
                        get:
                          description: |
                            Get mm4 settings for account
                          responses:
                            200:
                              body:
                                application/xml:
                                  example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <MmsFeatureMm4AdminSettingsResponse>
                                        <mm4Settings>
                                            <ConnValidWindow>6</ConnValidWindow>
                                            <Tls>STARTTLS</Tls>
                                            <MaxConn>11</MaxConn>
                                            <PersistentConn>true</PersistentConn>
                                            <KeepAliveNoop>true</KeepAliveNoop>
                                            <SkipAck>true</SkipAck>
                                            <AllowMultiRecepient>true</AllowMultiRecepient>
                                            <ConnMessageRatio>2.5</ConnMessageRatio>
                                            <ConnSentTimeout>11</ConnSentTimeout>
                                            <GenDlr>true</GenDlr>
                                            <GenReadReply>true</GenReadReply>
                                            <MaxMessagesInQueue>101</MaxMessagesInQueue>
                                            <LoopAllowed>true</LoopAllowed>
                                            <ForceAck>true</ForceAck>
                                            <DefaultProvider>2</DefaultProvider>
                                        </mm4Settings>
                                    </MmsFeatureMm4AdminSettingsResponse>
                        put:
                            description: update mms feature settings
                            body:
                                application/json:
                                    example: |
                                        <?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
                                        <MM4Settings>
                                            <ConnValidWindow>6</ConnValidWindow>
                                            <Tls>STARTTLS</Tls>
                                            <MaxConn>11</MaxConn>
                                            <PersistentConn>true</PersistentConn>
                                            <KeepAliveNoop>true</KeepAliveNoop>
                                            <SkipAck>true</SkipAck>
                                            <AllowMultiRecepient>true</AllowMultiRecepient>
                                            <ConnMessageRatio>2.5</ConnMessageRatio>
                                            <ConnSentTimeout>11</ConnSentTimeout>
                                            <GenDlr>true</GenDlr>
                                            <GenReadReply>true</GenReadReply>
                                            <MaxMessagesInQueue>101</MaxMessagesInQueue>
                                            <LoopAllowed>true</LoopAllowed>
                                            <ForceAck>true</ForceAck>
                                            <DefaultProvider>2</DefaultProvider>
                                        </MM4Settings>
                            responses:
                                201:
                                    description: settings were successfully updated
            /tollfree: 
                description: |
                    Add the ability to manage tollFree numbers to the account.
                post:
                    description:  Add a new product to the account
                    body:
                        application/xml:
                            example:
                                <Product>
                                <Name>TollFree</Name>
                                </Product>
                    responses:
                        200:
                            body:
                                application/xml:
                                    example: None
                get:
                    description: discover what is currently enabled on the account
                    responses:
                        200:
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0"?>
                                        <AccountProductsResponse>
                                            <Products>
                                                <Product>
                                                    <Name>Termination</Name>
                                                </Product>
                                                <Product>
                                                    <Name>VirtualInventory</Name>
                                                </Product>
                                                <Product>
                                                    <Name>TollFree</Name>
                                                </Product>
                                                <Product>
                                                    <Name>Origination</Name>
                                                    <Features>
                                                        <Feature>CallForwarding</Feature>
                                                        <Feature>DlDa</Feature>
                                                        <Feature>CNAM</Feature>
                                                    </Features>
                                                </Product>
                                                <Product>
                                                    <Name>SMS</Name>
                                                </Product>
                                            </Products>
                                        </AccountProductsResponse>
                /settings: 
                    description: Retrieves and updates Toll Free Settings for the account
                    get:
                        description: Retrieve Toll Free Settings for this account
                        responses:    
                            200:
                                description: Success.
                                body: 
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <TollFreeSettings>
                                                <RespOrgException>
                                                    true
                                                </RespOrgException>
                                            </TollFreeSettings>
                            400:
                                description:
                                    Failure to parse the request, or inconsistent provisioned data, such as no related product associated with the account.
                    put:
                        description: Update Toll Free Settings for this account
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <TollFreeSettings>
                                        <RespOrgException>
                                            false
                                        </RespOrgException>
                                    </TollFreeSettings>
                        responses:
                            200:
                                description: Created - Toll Free Settings are successfully updated.
                                body:
                                    application/xml:
                                        example: None
                            400:
                                description:
                                    Failure to parse the request, or inconsistent provisioned data, such as no related product associated with the account.
                /tntotals: 
                    description: Retrieves the Toll Free TN Counts for the account - primarily for billing and taxation purposes
                    get:
                        description: |
                            Retrieve the number of Toll Free TNs on this account 
                        responses:    
                            200:
                                description: Success - there are Toll Free TNs on this account.  Only the raw count is important.
                                body: 
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <ProductTNDetailsResponse>
                                                <ProductTNDetails>
                                                    <Tollfree>
                                                        <Count>17</Count>
                                                    </Tollfree>
                                                </ProductTNDetails>
                                            </ProductTNDetailsResponse> 
                            400:
                                description: |
                                    Failure to parse the request, or inconsistent provisioned data, such as no related product associated with the account.
            /edgemanagement: 
                description: | 
                    Edge Management is the product capability that aggregates the collection of capabilities typically managed by the SBCs at the edge of the network.  At this stage the Edge Management product simply enables or disables the routing of calls via the SBCs
                get:
                    description: A GET on the edgemanagement product indicates the support (or lack of support) for the Edge Management capabilities for the specified account.
                    responses: 
                        200:
                            description: the 200 response returns with a small payload that indicates that the Edge Management product is provisioned for the account.
                            body: 
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <AccountProductResponse>
                                            <Product>
                                                <Name>EdgeManagement</Name>
                                            </Product>
                                        </AccountProductResponse>
                        404:
                            description: |
                                NOT FOUND
                                is returned if the EdgeManagement Resource is not found.  An explanatory payload will be returned with explanation and an error code.
                            body: 
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <AccountProductResponse>
                                            <ResponseStatus>
                                                <ErrorCode>12017</ErrorCode>
                                                <Description>Account '138' does not have product 'EdgeManagement'</Description>
                                            </ResponseStatus>
                                        </AccountProductResponse> 
                put:
                    description: | 
                        a PUT on an edgemanagement resource that already exists will succeed, but does not change the edge Management product assignment.
                    body:
                        application/xml:
                            example: |
                                <?xml version="1.0"?>
                                <Product>
                                    <Name>EdgeManagement</Name>
                                </Product>
                    responses:
                        200:
                            description: 200 OK indicates that the EdgeManagement capability is associated with the account. If EdgeManagement is not already associated with the account then a 404 is returned. NO payload is returned with the 200 OK 
                /settings: 
                    description: | 
                        The Edge Management settings resource is used to define the attributes of the Edge Management product that will apply to the account specified in the URL.
                    get:
                        description: |
                            There are three primary settings that are provided as part of the Edge Management product: The SBC settings that are associated with the account,
                            SipAuthentication that provide settings for SIP authentication and ProductSpecificAccessRestrictions that can restrict Termination traffic for sipCredendital.
                                <br>
                                <b>SbcSettings:</b>
                                <table>
                                <tr><th>Parameter</th><th>Description</th></tr>
                                <tr><td>TrunkGroupId</td><td>element defines id of the trunk group associated with the Account in TGA</td></tr>
                                <tr><td>NodeGroupName</td><td>element are the node group name set up in TGA</td></tr>
                                </table>
                                <br>
                                <b>SipAuthentication:</b>
                                 <table>
                                 <tr><th>Parameter</th><th>Description</th></tr>
                                 <tr><td>Enabled</td><td>enable SIP Authentication on account. Values that can be accepted: true, false</td></tr>
                                 <tr><td>Status</td><td>provide information about processing status. This field cannot be updated.</td></tr>
                                 <tr><td>Errors</td><td>List of errors that happened during sip auth provisioning. This field cannot be updated.</td></tr>
                                 </table>
                                <br><br>
                                <b>ProductSpecificAccessRestrictions</b>(requires existence of SipCredentialSettings)<b>:</b>
                                <table>
                                <tr><th>Parameter</th><th>Description</th></tr>
                                <tr><td>RestrictedProduct</td><td>Product to restrict. Values that can be accepted: Termination</td></tr>
                                <tr><td>RestrictedAccessType</td><td>Type of restriction. Values that can be accepted: SipCredentials</td></tr>
                                </table>
                        responses:    
                            200:
                                description: An optional description of the response.
                                body: 
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <EdgeManagementSettings>
                                                <SbcSettings>
                                                    <TrunkGroupId>Trunkgroupidfortheaccounttraffic</TrunkGroupId>
                                                    <NodeGroupName>East Coast 01</NodeGroupName>
                                                </SbcSettings>
                                                <SipAuthentication>
                                                    <Enabled>true/false</Enabled>
                                                    <Status>COMPLETE/FAILED/PROCESSING</Status>
                                                    <Errors>
                                                        <Error>
                                                            <Code>26001</Code>
                                                            <Description>TGA database is not reachable.</Description>
                                                        </Error>
                                                        <Error>
                                                            <Code>27002</Code>
                                                            <Description>Amazon route 53 is not reachable.</Description>
                                                        </Error>
                                                    </Errors>
                                                </SipAuthentication>
                                                <ProductSpecificAccessRestrictions>
                                                   <AccessRestriction>
                                                       <RestrictedProduct>Termination</RestrictedProduct>
                                                       <RestrictedAccessTypes>
                                                           <RestrictedAccessType>SipCredentials</RestrictedAccessType>
                                                       </RestrictedAccessTypes>
                                                   </AccessRestriction>
                                                </ProductSpecificAccessRestrictions>
                                            </EdgeManagementSettings>
                            404:
                                description: |
                                    If the settings are not present for the EdgeManagement product a 404 NOT FOUND is returned with an explanatory payload.
                                body: 
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <EdgeManagementSettingsResponse>
                                                <ResponseStatus>
                                                    <Description>The resource does not exist</Description>
                                                </ResponseStatus>
                                            </EdgeManagementSettingsResponse>
                    post:
                        description: | 
                            This Edge Management settings resource can be PUT or POSTed to in order to establish the appropriate settings.
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0"?>
                                    <EdgeManagementSettings>
                                        <SbcSettings>
                                            <TrunkGroupId>Trunkgroupidfortheaccounttraffic</TrunkGroupId>
                                            <NodeGroupName>East Coast 01</NodeGroupName>
                                        </SbcSettings>
                                        <SipAuthentication>
                                            <Enabled>true</Enabled>
                                        </SipAuthentication>
                                        <ProductSpecificAccessRestrictions>
                                            <AccessRestriction>
                                                <RestrictedProduct>Termination</RestrictedProduct>
                                                <RestrictedAccessTypes>
                                                    <RestrictedAccessType>SipCredentials</RestrictedAccessType>
                                                </RestrictedAccessTypes>
                                            </AccessRestriction>
                                        </ProductSpecificAccessRestrictions>
                                    </EdgeManagementSettings>
                        responses:
                            200:
                                description: a 200 OK is returned on successful updating of the Edge Management Settings.  There is no payload returned with a 200 OK.
                            400:
                                description: a 400 BAD REQUEST will be returned with a descriptive payload if the XML describing the edge Management settings resource is incorrect or the account is not configured for Edge Management.  The error contains an error code and description.
                                body: 
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <EdgeManagementSettingsResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12602</ErrorCode>
                                                    <Description>TrunkGroupName is required when creating EdgeManagementSettings</Description>
                                                </ResponseStatus>
                                            </EdgeManagementSettingsResponse>
                    put:
                        description: | 
                            This Edge Management settings resource can be PUT or POSTed to in order to establish the appropriate settings.
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0"?>
                                    <EdgeManagementSettings>
                                        <SbcSettings>
                                            <TrunkGroupId>Trunkgroupidfortheaccounttraffic</TrunkGroupId>
                                            <NodeGroupName>East Coast 01</NodeGroupName>
                                        </SbcSettings>
                                        <SipAuthentication>
                                            <Enabled>true</Enabled>
                                        </SipAuthentication>
                                        <ProductSpecificAccessRestrictions>
                                            <AccessRestriction>
                                                <RestrictedProduct>Termination</RestrictedProduct>
                                                <RestrictedAccessTypes>
                                                    <RestrictedAccessType>SipCredentials</RestrictedAccessType>
                                                </RestrictedAccessTypes>
                                            </AccessRestriction>
                                        </ProductSpecificAccessRestrictions>
                                    </EdgeManagementSettings>
                        responses:
                            200:
                                description: a 200 OK is returned on successful updating of the Edge Management Settings.  There is no payload returned with a 200 OK.
                            400:
                                description: a 400 BAD REQUEST will be returned with a descriptive payload if the XML describing the edge Management settings resource is incorrect or the account is not configured for Edge Management.  The error contains an error code and description.
                                body: 
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <EdgeManagementSettingsResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12602</ErrorCode>
                                                    <Description>SbcSettings is required when creating EdgeManagementSettings</Description>
                                                </ResponseStatus>
                                            </EdgeManagementSettingsResponse>
                    /sipauthentication: 
                        description: |
                            The SIP authentication configuragtion on the account.
                        get:
                            description: Retrieve existing SIP authentication configuration on account.
                            responses:    
                                200:
                                    description: An optional description of the response.
                                    body: 
                                        application/xml:
                                            example: |
                                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                <SipAuthenticationResponse>
                                                    <SipAuthentication>
                                                        <Realm>cust27.auth.bandwidth.com</Realm>
                                                        <DefaultGroupName>10000105_27</DefaultGroupName>
                                                        <SBC>
                                                            <Zone>
                                                                <Id>1</Id>
                                                                <Name>CUST27_10000105_ZONE</Name>
                                                                <SipSigPort>
                                                                    <Index>1</Index>
                                                                    <PortNumber>1</PortNumber>
                                                                </SipSigPort>
                                                            </Zone>
                                                        </SBC>
                                                        <DNSRecords>
                                                            <DNSRecord>
                                                                <Type>A</Type>
                                                                <Name>cust27.auth.bandwidth.com</Name>
                                                                <Data>235.152.100.100</Data>
                                                                <TTL>300</TTL>
                                                            </DNSRecord>
                                                            <DNSRecord>
                                                                <Type>A</Type>
                                                                <Name>cust27.auth.bandwidth.com</Name>
                                                                <Data>235.152.100.200</Data>
                                                                <TTL>300</TTL>
                                                            </DNSRecord>
                                                            <DNSRecord>
                                                                <Type>SRV</Type>
                                                                <Name>_sip._udp.cust27.auth.bandwidth.com</Name>
                                                                <Data>5 50 5000 test.host1</Data>
                                                                <TTL>300</TTL>
                                                            </DNSRecord>
                                                            <DNSRecord>
                                                                <Type>SRV</Type>
                                                                <Name>_sip._udp.cust27.auth.bandwidth.com</Name>
                                                                <Data>5 50 5000 test.host2</Data>
                                                                <TTL>300</TTL>
                                                            </DNSRecord>
                                                        </DNSRecords>
                                                    </SipAuthentication>
                                                </SipAuthenticationResponse>
                                404:
                                    description: |
                                        If the configuration is not present a 404 NOT FOUND is returned with an explanatory payload.
                                    body: 
                                        application/xml:
                                            example: |
                                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                <SipAuthenticationResponse>
                                                    <ResponseStatus>
                                                        <Description>The resource does not exist</Description>
                                                    </ResponseStatus>
                                                </SipAuthenticationResponse>
            /virtualinventory: 
                description: This is a single line of descriptive text.  See other formats below
                get:
                    description: |
                        A sample description.  Long descriptions can be piped, and short ones can go on the line with the keyword 
                    queryParameters:
                        account:
                            type: string
                            required: true
                            description: the account that the user is valid for
                            default: 20
                        direction:
                            description: hardy har har
                            type: string
                            example: a_string
                        inclination:
                            description: another fing description
                            type: integer
                            example: 98764
                            maximum: 99999
                    responses:    # note that the responses cannot be generic.  4xx is unfortunately not a valid response tag
                        200:
                            description: An optional description of the response.
                            body: 
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <example>
                                            example content is piped content that will be provided as an example
                                            in this case of the Response
                                        </example> 
                        400:
                            description: |
                                The description can be used for discussing generic responses.
                                Note that descriptions anywhere can be piped content. Lines will be concatenated together.
                                *_Markup is allowed_*
                            body: 
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <example>
                                            example content is piped content that will be provided as an example
                                            in this case of the Response
                                        </example> 
                post:
                    description: Create a user
                    body:
                        application/xml:
                            example: |
                                <Users>
                                    <User>
                                        <Username>testcustomer</Username>
                                        <Password>test123</Password>
                                        <FirstName>Jane</FirstName>
                                        <LastName>Doe</LastName>
                                        <EmailAddress>janedoe@bandwidth.com</EmailAddress>
                                        <TelephoneNumber>9199999999</TelephoneNumber>
                                    </User>
                                </Users>
                    responses:
                        200:
                            body: 
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <UsersResponse>
                                            <Users>
                                                <User>
                                                    <Username>admin</Username>
                                                    <Roles>
                                                        <Role>
                                                            <RoleName>ROLE_ADMIN</RoleName>
                                                            <Permissions>
                                                                <Permission>
                                                                    <PermissionName>VIEW</PermissionName>
                                                                </Permission>
                                                                <Permission>
                                                                    <PermissionName>UPDATE</PermissionName>
                                                                </Permission>
                                                            </Permissions>
                                                        </Role>
                                                        <Role>
                                                            <RoleName>ROLE_BDR</RoleName>
                                                            <Permissions>
                                                                <Permission>
                                                                    <PermissionName>VIEW</PermissionName>
                                                                </Permission>
                                                            </Permissions>
                                                        </Role>
                                                    </Roles>
                                                </User>
                                            </Users>
                                        </UsersResponse>
                put:
                    description: |
                        A piped description that has 
                        more than one line and some 
                        * markup 
                    responses:
                        200:
                            body: 
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <UsersResponse>
                                            <Users>
                                                <User>
                                                    <Username>admin</Username>
                                                    <Roles>
                                                        <Role>
                                                            <RoleName>ROLE_ADMIN</RoleName>
                                                            <Permissions>
                                                                <Permission>
                                                                    <PermissionName>VIEW</PermissionName>
                                                                </Permission>
                                                                <Permission>
                                                                    <PermissionName>UPDATE</PermissionName>
                                                                </Permission>
                                                            </Permissions>
                                                        </Role>
                                                        <Role>
                                                            <RoleName>ROLE_BDR</RoleName>
                                                            <Permissions>
                                                                <Permission>
                                                                    <PermissionName>VIEW</PermissionName>
                                                                </Permission>
                                                            </Permissions>
                                                        </Role>
                                                    </Roles>
                                                </User>
                                            </Users>
                                        </UsersResponse>               
                #  The resource tree that follows the root can be placed here.
                # values in curly braces will appear as fillable parameters in the URL
                # remember to fix these / delete these until the files are really there.
                # /{example_ID}: #include example/example.raml
                # /resourcename: #include resourcename/resourcename.raml
            /dedicatedprivatenetworktopology: 
                description: | 
                    Enable a separate access network instance to deliver service in conjunction with the CLEC account.
                get:
                    description: A GET on the DedicatedPrivateNetworkTopology product indicates the support (or lack of support) for the DedicatedPrivateNetworkTopology capabilities for the specified account.
                    responses: 
                        200:
                            description: the 200 response returns with a small payload that indicates that the DedicatedPrivateNetworkTopology product is provisioned for the account.
                            body: 
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <AccountProductResponse>
                                            <Product>
                                                <Name>DedicatedPrivateNetworkTopology</Name>
                                            </Product>
                                        </AccountProductResponse>
                        404:
                            description: |
                                NOT FOUND
                                is returned if the DedicatedPrivateNetworkTopology Resource is not found.  An explanatory payload will be returned with explanation and an error code.
                            body: 
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <AccountProductResponse>
                                            <ResponseStatus>
                                                <ErrorCode>12017</ErrorCode>
                                                <Description>Account '138' does not have product 'DedicatedPrivateNetworkTopology'</Description>
                                            </ResponseStatus>
                                        </AccountProductResponse> 
                put:
                    description: | 
                        a PUT on an DedicatedPrivateNetworkTopology resource that already exists will succeed, but does not change the product assignment.
                    body:
                        application/xml:
                            example: |
                                <?xml version="1.0"?>
                                <Product>
                                    <Name>DedicatedPrivateNetworkTopology</Name>
                                </Product>
                    responses:
                        200:
                            description: 200 OK indicates that the DedicatedPrivateNetworkTopology capability is associated with the account. NO payload is returned with the 200 OK. If DedicatedPrivateNetworkTopology is not already associated with the account then a 404 is returned.
                /settings: 
                    description: |
                        The Dedicated Private Network (DPN) settings resource is used to define the attributes of the Dedicated Private Network Topology product to manage the connection between the CLEC and the DPN components.
                    get:
                        description: |
                            There are three primary settings that are provided as part of the Dedicated Private Network Topology product:
                                <ul>
                                    <li>the SBC settings for the SBC at the edge of the CLEC network that will be used to communicate with the DPN</li>
                                    <li> a set of IP addresses used for Origin traffic</li>
                                    <li> a set of IP addresses used for Term traffic</li>
                                </ul>
                        responses:    
                            200:
                                description: An optional description of the response.
                                body: 
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <DPNSettingsResponse>
                                                <DPNSettings>
                                                    <CLECSBCSettings>
                                                        <TrunkGroupId>TrunkGroupNewName</TrunkGroupId>
                                                        <NodeGroupName>East Coast 01</NodeGroupName>
                                                    </CLECSBCSettings>
                                                    <VoiceHostGroups>
                                                        <VoiceHostGroup>
                                                            <Host>
                                                                <HostName>10.10.10.48</HostName>
                                                                <Port>45454</Port>
                                                            </Host>
                                                            <Host>
                                                                <HostName>10.10.10.10</HostName>
                                                                <Port>0</Port>
                                                            </Host>
                                                        </VoiceHostGroup>
                                                    </VoiceHostGroups>
                                                    <TerminationHosts>
                                                        <TerminationHost>
                                                            <HostName>2.1.1.92</HostName>
                                                            <Port>0</Port>
                                                        </TerminationHost>
                                                        <TerminationHost>
                                                            <HostName>2.1.1.96/28</HostName>
                                                            <Port>6788</Port>
                                                        </TerminationHost>
                                                    </TerminationHosts>
                                                </DPNSettings>
                                            </DPNSettingsResponse>
                            404:
                                description: |
                                    If the settings are not present for the DPN product a 404 NOT FOUND is returned.
                                body: 
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <DPNSettingsResponse>
                                                <ResponseStatus>
                                                    <Description>The resource does not exist</Description>
                                                </ResponseStatus>
                                            </DPNSettingsResponse>
                    post:
                        description: | 
                            This DPN settings resource can be PUT or POSTed to in order to establish the appropriate settings.
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <DPNSettings>
                                        <VoiceHostGroups>
                                            <VoiceHostGroup>
                                                <Host>
                                                    <HostName>10.10.10.1</HostName>
                                                </Host>
                                                <Host>
                                                    <HostName>10.10.10.2</HostName>
                                                </Host>
                                            </VoiceHostGroup>
                                        </VoiceHostGroups>
                                        <TerminationHosts>
                                            <TerminationHost>
                                                <HostName>2.1.1.9</HostName>
                                                <Port>0</Port>
                                            </TerminationHost>
                                            <TerminationHost>
                                                <HostName>2.1.1.44/30</HostName>
                                                <Port>6788</Port>
                                            </TerminationHost>
                                        </TerminationHosts>
                                          <CLECSBCSettings>
                                            <TrunkGroupId>TrunkGroup</TrunkGroupId>
                                            <NodeGroupName>East Coast 01</NodeGroupName>
                                        </CLECSBCSettings>
                                    </DPNSettings>
                        responses:
                            200:
                                description: a 200 OK is returned on successful updating of the DPN Settings.  There is no payload returned with a 200 OK.
                            400:
                                description: a 400 BAD REQUEST will be returned with a descriptive payload if the XML describing the DPN settings resource is incorrect or the account is not configured for DPN.  The error contains an error code and description.
                                body: 
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <DPNSettingsResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12040</ErrorCode>
                                                    <Description>The supplied SBC configuration was not valid</Description>
                                                </ResponseStatus>
                                            </DPNSettingsResponse>
                    put:
                        description: |
                            This DPN settings resource can be PUT or POSTed to in order to establish the appropriate settings.
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <DPNSettings>
                                        <VoiceHostGroups>
                                            <VoiceHostGroup>
                                                <Host>
                                                    <HostName>10.10.10.1</HostName>
                                                </Host>
                                                <Host>
                                                    <HostName>10.10.10.2</HostName>
                                                </Host>
                                            </VoiceHostGroup>
                                        </VoiceHostGroups>
                                        <TerminationHosts>
                                            <TerminationHost>
                                                <HostName>2.1.1.9</HostName>
                                                <Port>0</Port>
                                            </TerminationHost>
                                            <TerminationHost>
                                                <HostName>2.1.1.44/30</HostName>
                                                <Port>6788</Port>
                                            </TerminationHost>
                                        </TerminationHosts>
                                          <CLECSBCSettings>
                                            <TrunkGroupId>TrunkGroup</TrunkGroupId>
                                            <NodeGroupName>East Coast 01</NodeGroupName>
                                        </CLECSBCSettings>
                                    </DPNSettings>
                        responses:
                            200:
                                description: a 200 OK is returned on successful updating of the DPN Settings.  There is no payload returned with a 200 OK.
                            400:
                                description: a 400 BAD REQUEST will be returned with a descriptive payload if the XML describing the edge DPN settings resource is incorrect or the account is not configured for DPN.  The error contains an error code and description.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <DPNSettingsResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12040</ErrorCode>
                                                    <Description>The supplied SBC configuration was not valid</Description>
                                                </ResponseStatus>
                                            </DPNSettingsResponse>
            /e911: 
                description: |
                    The E911 product allows E911 capabilities to the account.  The e911 resource is used to establish the Product as active for the identified account.
                get:
                    description: A GET on the E911 product indicates the support (or lack of support) for the E911 capabilities for the specified account.
                    responses:
                        200:
                            description: the 200 response returns with a small payload that indicates that the E911 product is provisioned for the account.
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <AccountProductResponse>
                                            <Product>
                                                <Name>E911</Name>
                                            </Product>
                                        </AccountProductResponse>
                        404:
                            description: |
                                NOT FOUND
                                is returned if the E911 Resource is not found.  An explanatory payload will be returned with explanation and an error code.
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <AccountProductResponse>
                                            <ResponseStatus>
                                                <ErrorCode>12017</ErrorCode>
                                                <Description>Account '138' does not have product 'E911'</Description>
                                            </ResponseStatus>
                                        </AccountProductResponse>
                put:
                    description: |
                        a PUT on a E911 resource that already exists will succeed, but does not change the E911 product.
                    body:
                        application/xml:
                            example: |
                                <?xml version="1.0"?>
                                <Product>
                                    <Name>E911</Name>
                                </Product>
                    responses:
                        200:
                            description: 200 OK indicates that the E911 capability is associated with the account. If E911 is not already associated with the account then a 404 is returned. NO payload is returned with the 200 OK
                        404:
                            description: |
                                NOT FOUND
                                If the E911 Resource is not found a 404 Not Found with an explanatory payload will be returned.
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <AccountProductResponse>
                                            <ResponseStatus>
                                                <ErrorCode>12017</ErrorCode>
                                                <Description>Account '123' does not have product 'E911'</Description>
                                            </ResponseStatus>
                                        </AccountProductResponse>
                /settings: 
                    description: |
                        The E911 settings resource is used to specialize the E911 product for the specific wholesale account, allowing the establishment of a specific relationship between IRIS and DASH at the account level.
                        The data retained as E911 settings is:<br>
                         - the user ID and password information that is used to access DASH E911 API for the identified account;<br>
                         - flag <b>AllowAlternateEndUserIdentifiers</b> to enable/disable the Alternate End User Identifier (AEUI) capability on the account.<br>
                         The specified credentials are account specific, and unique to the account.<br><br>
                        The password can be set but not retrieved.
                    get:
                        description: |
                            The GET returns the current settings, indicating the user ID, and the result from attempted authentication with the stored credentials.  If the Authentication fails subsequent attempts will be made using default credentials until the issue is resolved.
                        responses:
                            200:
                                description: The E911 settings element is returned.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <E911SettingsResponse>
                                                <E911Settings>
                                                    <DashUserId>[alphanumeric]</DashUserId>
                                                    <!-- failed if a 401 or 403 is http response code received from -->
                                                    <!-- the DASH API on the last attempt to authenticate with the -->
                                                    <!-- credentials, passed otherwise -->
                                                    <DashAuthenticationStatus>[passed|failed|unknown]</DashAuthenticationStatus>
                                                    <AllowAlternateEndUserIdentifiers>[true|false]</AllowAlternateEndUserIdentifiers>
                                                </E911Settings>
                                            </E911SettingsResponse>
                            404:
                                description: |
                                    NOT FOUND
                                    If the E911 product exists on the account, but settings are missing, then the 404 not found response is used.
                                    If the E911 product does not exist on the account then the 404 will indicate that the E911 products resource cannot be found.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <E911SettingsResponse>
                                                <ResponseStatus>
                                                    <!-- possibly a different Errorcode will be required -->
                                                    <ErrorCode>12030</ErrorCode>
                                                    <Description>E911 product settings have not been configured</Description>
                                                </ResponseStatus>
                                            </E911SettingsResponse>
                    post:
                        description: |
                            This resource can be PUT or POSTed to in order to establish the appropriate settings.
                            Some of the important values that are established as part of this termination are...
                            <table>
                            <tr><th>parameter</th><th>description</th></tr>
                            <tr><td>DashUserId</td><td>[Alphanumeric with symbols] the User ID to be used to access Dash for this IRIS account. 50 characters, ascii, without % symbol or whitespace.</td></tr>
                            <tr><td>DashPassword</td><td>[Alphanumeric] the Password to be used to access Dash for this IRIS account - 50 characters</td></tr>
                            <tr><td>AllowAlternateEndUserIdentifiers</td><td>[Boolean] Provides ability to enable/disable the Alternate End User Identifier (AEUI) capability on the account - true|false(default value)</td></tr>
                            </table>
                        body:
                            application/xml:
                                example: |
                                    <E911Settings>
                                        <DashUserId>[alphanumeric with symbols]</DashUserId>
                                        <DashPassword>[alphanumeric]</DashPassword>
                                        <AllowAlternateEndUserIdentifiers>true</AllowAlternateEndUserIdentifiers>
                                    </E911Settings>
                        responses:
                            200:
                                description: a 200 OK is returned on successful updating of the E911 Settings.  There is no payload returned with a 200 OK.
                            400:
                                description: a 400 BAD REQUEST will be returned with a descriptive payload if the XML describing the E911 settings resource is incorrect or other factors prevent execution of the POST  The error contains an error code and description.
                                body:
                                    application/xml:
                                        example: |
                                            <E911SettingsResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>******</ErrorCode>
                                                    <Description>Passwords may contain only alphanumeric and symbol characters</Description>
                                                </ResponseStatus>
                                            </E911SettingsResponse>
                    put:
                        description: |
                            This resource can be PUT or POSTed to in order to establish the appropriate settings.
                            Some of the important values that are established as part of this termination are...
                            <table>
                            <tr><th>parameter</th><th>description</th></tr>
                            <tr><td>DashUserId</td><td>[Alphanumeric with symbols] the User ID to be used to access Dash for this IRIS account</td></tr>
                            <tr><td>DashPassword</td><td>[Alphanumeric with symbols] the Password to be used to access Dash for this IRIS account</td></tr>
                            <tr><td>AllowAlternateEndUserIdentifiers</td><td>[Boolean] Provides ability to enable/disable the Alternate End User Identifier (AEUI) capability on the account - true|false(default value)</td></tr>
                            </table>
                        body:
                            application/xml:
                                example: |
                                    <E911Settings>
                                        <DashUserId>[alphanumeric with symbols]</DashUserId>
                                        <DashPassword>[alphanumeric with symbols]</DashPassword>
                                        <AllowAlternateEndUserIdentifiers>true</AllowAlternateEndUserIdentifiers>
                                    </E911Settings>
                        responses:
                            200:
                                description: a 200 OK is returned on successful updating of the E911 Settings.  There is no payload returned with a 200 OK.
                            400:
                                description: a 400 BAD REQUEST will be returned with a descriptive payload if the XML describing the E911 settings resource is incorrect or other factors prevent execution of the POST  The error contains an error code and description.
                                body:
                                    application/xml:
                                        example: |
                                            <E911SettingsResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>******</ErrorCode>
                                                    <Description>Passwords may contain only alphanumeric and symbol characters</Description>
                                                </ResponseStatus>
                                            </E911SettingsResponse>
        /reports: 
            description: |
                Bandwidth provides a reporting infrastructure that will allow the creation
                of pre-defined reports, and the subsequent API-based exposure of those
                reports to our customers to assist them in management of their
                business.<br>
                <br>
                The reports exposed via the reporting API are defined by the Bandwidth
                staff, and will grow and adapt over time to meet our customers changing
                needs. The basic structure of the resources in the reporting API reflects
                three levels of information:
                <ol>
                    <li>Reports: pre-defined templates for information that include:
                        <ul>
                            <li>a name</li>
                            <li>a description of the report in general terms</li>
                            <li>a set of parameters that are used to provide boundaries on
                            the information that is provided. &nbsp;These parameters
                            contain</li>
                            <li style="list-style: none; display: inline">
                                <ul>
                                    <li>The parameter name,</li>
                                    <li>a&nbsp;description of the parameter,</li>
                                    <li>a declaration of whether it is required or not,
                                    and&nbsp;</li>
                                    <li>the type of the parameter.</li>
                                    <li>a declaration of whether multi-selection is allowed or not.</li>
                                </ul>
                            </li>
                        </ul>
                    </li>
                    <li>Instances: the result of executing a report - a parameterized set
                    of data that results from the creation of a report with a set of
                    parameters.
                        <ul>
                            <li>They reflect the meta-data associated with actually
                            creating a report from a set of data. &nbsp;The instance is
                            used in managing the actual &nbsp;report that is made available
                            for download.</li>
                            <li>Instances contain:</li>
                            <li style="list-style: none; display: inline">
                                <ul>
                                    <li>An ID</li>
                                    <li>The ID of the Report that was used to generate the
                                    Instance</li>
                                    <li>An output format (currently PDF, XLS, or CSV)</li>
                                    <li>Data about the user that requested the report.</li>
                                    <li>A list of parameter values that was used to create
                                    the report</li>
                                    <li>An expiration date of the report.</li>
                                    <li>A status, indicating whether the report data is
                                    still being assembled, ready for download, or
                                    expired.</li>
                                </ul>
                            </li>
                            <li>Instances are specific to a report.</li>
                        </ul>
                    </li>
                    <li>Files: the actual data associated with a Report Instance.
                        <ul>
                            <li>Files are the items that are actually retrieved from the
                            server and delivered to the user on demand. &nbsp;The file is a
                            logical resource that reflects the downloadable data that is
                            described by the Instance</li>
                        </ul>
                    </li>
                </ol>
                The report resource of the API allow the management of reports in the Bandwidth Dashboard.
            get:
                description: | 
                    GET Retrieves a list of the report templates available for use within the Iris application. This list contains the basic description of the reports, including a report ID that can be used to access further details about the report, and thus facilitating the subsequent choice and creation of an instance of the report. Items of this list are sorted by display priority in ascending order and alphabetically by name within priority groups (display priority is displayed only for admin endpoint).
                responses:
                    200:
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <ReportsResponse>
                                        <Reports>
                                            <Report>
                                                <Name>Sample Report 1</Name>
                                                <Id>100020</Id>
                                                <JasperUri>/jasper/path/to/sample/report1</JasperUri>
                                                <Scope>ACCOUNT</Scope>
                                                <Description>Sample Report 1 Description</Description>
                                            </Report>
                                            <Report>
                                                <Name>Sample Report 2</Name>
                                                <Id>100021</Id>
                                                <JasperUri>/jasper/path/to/sample/report2</JasperUri>
                                                <Scope>ACCOUNT</Scope>
                                                <Description>Sample Report 2 Description</Description>
                                            </Report>
                                            <Report>
                                                <Name>Sample Report 3</Name>
                                                <Id>100022</Id>
                                                <JasperUri>/jasper/path/to/sample/report3</JasperUri>
                                                <Scope>ADMIN</Scope>
                                                <Description>Sample Report 3 Description</Description>
                                            </Report>
                                        </Reports>
                                    </ReportsResponse>
            /{reportid}: 
                get:
                    description: | 
                        A GET issued on a specific report (as identified by it's ID) will return all of the details of that report, allowing the API user to create an instance of that report.  Those details include:
                            <ul>
                                <li>The report name</li>
                                <li>a description of the report in general terms</li>
                                <li>a set of parameters that are used to provide boundaries on the information that is provided. &nbsp;These parameters contain</li>
                                <ul>
                                    <li>The parameter name,</li>
                                    <li>a&nbsp;description of the parameter,</li>
                                    <li>a declaration of whether it is required or not, </li>
                                    <li>is multiple vales allowed or not, </li>
                                    <li>the type of the parameter, which can be one of</li>
                                        <ul>
                                            <li>Account ID (autofilled)</li>
                                            <li>Site ID</li>
                                            <li>SipPeer ID</li>
                                            <li>String</li>
                                            <li>Integer</li>
                                            <li>Boolean</li>
                                            <li>Enum, with a list of possible values.</li>
                                        </ul>
                                    <li>the help info for describing parameter</li>
                                    </ul>
                                </ul>
                            </ul>
                    responses:
                        200:
                            description: Successful retrieval of report template details.
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <ReportResponse>
                                            <Report>
                                                <Id>123</Id>
                                                <Name>Sample Report 1</Name>
                                                <JasperUri>/jasper/path/to/sample/report1</JasperUri>
                                                <Scope>ACCOUNT</Scope>
                                                <Parameters>
                                                    <Parameter>
                                                        <Name>Report Parameter 1</Name>
                                                        <Type>String</Type>
                                                        <Required>true</Required>
                                                        <JasperId>jasperParam1</JasperId>
                                                        <Description>Report Parameter 1 Description</Description>
                                                        <MultiSelectAllowed>false</MultiSelectAllowed>
                                                        <HelpInformation>Report Parameter 1 Help Text</HelpInformation>
                                                    </Parameter>
                                                    <Parameter>
                                                        <Name>Report Parameter 2</Name>
                                                        <Type>Enum</Type>
                                                        <Required>false</Required>
                                                        <!--Contains a semicolon separated list of InternalNames-->
                                                        <ValueFilter>Value1;Value2;Value3</ValueFilter>
                                                        <Values>
                                                            <Value>
                                                                <!--A InternalName tag value should be used in report instance creation-->
                                                                <InternalName>Value1</InternalName>
                                                                <!--A DisplayName tag value is used only for UI purposes-->
                                                                <DisplayName>Display Value2</DisplayName>
                                                            </Value>
                                                            <Value>
                                                                <InternalName>Value2</InternalName>
                                                                <DisplayName>Value2</DisplayName>
                                                            </Value>
                                                            <Value>
                                                                <InternalName>Value3</InternalName>
                                                                <DisplayName>Display Value3</DisplayName>
                                                            </Value>
                                                        </Values>
                                                        <JasperId>jasperParam2</JasperId>
                                                        <Description>Report Parameter 2 Description</Description>
                                                        <MultiSelectAllowed>true</MultiSelectAllowed>
                                                        <HelpInformation>Report Parameter 2 Help Text</HelpInformation>
                                                    </Parameter>
                                                </Parameters>
                                            </Report>
                                        </ReportsResponse>
                        404:
                            description: A report template matching the provided ID could not be found.
                            body:
                                application/xml:
                                    example:
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <ReportResponse>
                                            <ResponseStatus>
                                                <ErrorCode>19000</ErrorCode>
                                                <Description>No report found with report ID of '123'</Description>
                                            </ResponseStatus>
                                        </ReportResponse>
                /instances: 
                    description: |
                        The report instance endpoints of the Iris API allow users to view and manage report instances for a specific report.
                        Report instances capture invocations of a report, including the specific set of parameters provided and any output
                        generated as a result.
                    get:
                        description: |
                            Retrieve report instances associated with a specific report, including the up-to-date report generation status.
                        responses:
                            200:
                                description: Successful retrieval of report instances.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <ReportInstancesResponse>
                                                <Instances>
                                                    <Instance>
                                                        <Id>100090</Id>
                                                        <ReportId>100020</ReportId>
                                                        <JasperId>aadbb201-1e1c-4f4d-920b-a18ec121da6d</JasperId>
                                                        <JasperExportId>703aef1d-8ca5-4265-8114-308c2ffa517c</JasperExportId>
                                                        <JasperSessionId>E8279C44E4E88B361282EC9AD4F7665A</JasperSessionId>
                                                        <ReportName>Sample Report</ReportName>
                                                        <OutputFormat>pdf</OutputFormat>
                                                        <RequestedByUserName>jbm</RequestedByUserName>
                                                        <RequestedAt>2015-05-18 14:03:04</RequestedAt>
                                                        <Parameters>
                                                            <Parameter>
                                                                <Name>AccountId</Name>
                                                                <Value>1</Value>
                                                            </Parameter>
                                                        </Parameters>
                                                        <JasperReportStatus>Expired</JasperReportStatus>
                                                        <Status>Expired</Status>
                                                    </Instance>
                                                    <Instance>
                                                        <Id>100098</Id>
                                                        <ReportId>100020</ReportId>
                                                        <JasperId>4ff4d77c-a2b6-4ab6-8dd7-193bf072b64e</JasperId>
                                                        <JasperExportId>61c444e3-b8d1-4299-92f8-0371ba45e123</JasperExportId>
                                                        <JasperSessionId>813885D097A3DF7B0CAC94475CEE0CAA</JasperSessionId>
                                                        <ReportName>Sample Report</ReportName>
                                                        <OutputFormat>html</OutputFormat>
                                                        <RequestedByUserName>jbm</RequestedByUserName>
                                                        <RequestedAt>2015-05-19 09:18:40</RequestedAt>
                                                        <Parameters>
                                                            <Parameter>
                                                                <Name>AccountId</Name>
                                                                <Value>1</Value>
                                                            </Parameter>
                                                            <Parameter>
                                                                <Name>SiteId</Name>
                                                                <Value>1</Value>
                                                            </Parameter>
                                                        </Parameters>
                                                        <JasperReportStatus>Expired</JasperReportStatus>
                                                        <Status>Expired</Status>
                                                    </Instance>
                                                    <Instance>
                                                        <Id>100102</Id>
                                                        <ReportId>100020</ReportId>
                                                        <JasperId>83a5fd11-801d-4ee7-9f0c-0ab83882be86</JasperId>
                                                        <JasperExportId>d8396a60-200c-4205-9609-ceca3d47dc7a</JasperExportId>
                                                        <JasperSessionId>21E6866B95AC144828178A2CF251F756</JasperSessionId>
                                                        <ReportName>Sample Report</ReportName>
                                                        <OutputFormat>pdf</OutputFormat>
                                                        <RequestedByUserName>jbm</RequestedByUserName>
                                                        <RequestedAt>2015-05-19 11:05:12</RequestedAt>
                                                        <Parameters>
                                                            <Parameter>
                                                                <Name>AccountId</Name>
                                                                <Value>1</Value>
                                                            </Parameter>
                                                        </Parameters>
                                                        <JasperReportStatus>Ready</JasperReportStatus>
                                                        <Status>Ready</Status>
                                                        <ExpiresAt>2015-06-15</ExpiresAt>
                                                    </Instance>
                                                </Instances>
                                            </ReportInstancesResponse>
                    post:
                        description: | 
                            POSTing to the instances resource of a specific report will create an instance of that report that pulls from data that is filtered by the supplied parameters.  Those parameter values must match the parameters that are required as defined by the report, as provided by issuing a GET on the report. <br><br>
                            The sequence of events is essentially to...
                            <ol>
                                <li>issue a GET on the desired report/report-id to retrieve the parameter and other details of the report</li>
                                <li>issue a POST on the /report/report-id/instances resource, using the parameter information retrieved in the initial call to define the data that is needed</li>
                            </ol>
                            The Location header will provide a link to the created report instance.  Note that the report instance itself contains only the metadata describing the instance.  A subsequent call to /report/report-id/instances/instance-id/file must be made to actually download the file.
                        body:
                            application/xml:
                                example: |
                                    <Instance>
                                        <OutputFormat>pdf</OutputFormat>
                                        <Parameters>
                                            <Parameter>
                                                <Name>Account</Name>
                                                <Value>1</Value>
                                            </Parameter>
                                            <Parameter>
                                                <Name>Sub-account</Name>
                                                <Value>1</Value>
                                            </Parameter>
                                            <Parameter>
                                                <Name>MultiValueEnum</Name>
                                                <Value>value1</Value>
                                                <Value>value2</Value>
                                            </Parameter>
                                        </Parameters>
                                        <ExpiresAt>2016-11-25</ExpiresAt>  <!-- the date (not longer than 30 days in the future) at the end of which the instance will expire, should be specified in YYYY-MM-DD format-->
                                    </Instance>
                        responses:
                            201:
                                description: Successful creation of report instance.
                                headers:
                                    Location:
                                        description: Contains URL of newly-created report.
                                        example: https://dashboard.bandwidth.com/api/accounts/123/reports/456/instances/789
                                body:
                                    application/xml:
                                        example: None
                            400:
                                body:
                                    application/xml:
                                        example: |
                                            <ReportInstanceResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>19032</ErrorCode>
                                                    <Description>Missing one or more required report parameters: AccountId</Description>
                                                </ResponseStatus>
                                            </ReportInstanceResponse>
                            503:
                                body:
                                    application/xml:
                                        example: |
                                            <ReportInstanceResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>19031</ErrorCode>
                                                    <Description>Error encountered processing request via external reporting service.  Please contact Bandwidth support for further assistance.</Description>
                                                </ResponseStatus>
                                            </ReportInstanceResponse>
                    /{instanceId}: 
                        description: Retrieve information on a specific instance of a specific report.
                        get:
                            description: | 
                                A GET on the specific instance will retrieve report instance details, including the current report instance status.  All of the information required to understand the nature and limits of the reported data are contained in the payload, including the general description information as well as the list of parameters and the values assigned to those parameters.
                            responses:
                                200:
                                    body:
                                        application/xml:
                                            example: |
                                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                <ReportInstanceResponse>
                                                        <Instance>
                                                            <Id>100102</Id>
                                                            <ReportId>100020</ReportId>
                                                            <JasperId>83a5fd11-801d-4ee7-9f0c-0ab83882be86</JasperId>
                                                            <JasperExportId>d8396a60-200c-4205-9609-ceca3d47dc7a</JasperExportId>
                                                            <JasperSessionId>21E6866B95AC144828178A2CF251F756</JasperSessionId>
                                                            <ReportName>Sample Report</ReportName>
                                                            <OutputFormat>pdf</OutputFormat>
                                                            <RequestedByUserName>jbm</RequestedByUserName>
                                                            <RequestedAt>2015-05-19 11:05:12</RequestedAt>
                                                            <Parameters>
                                                                <Parameter>
                                                                    <Name>AccountId</Name>
                                                                    <Value>1</Value>
                                                                </Parameter>
                                                            </Parameters>
                                                            <JasperReportStatus>Ready</JasperReportStatus>
                                                            <Status>Ready</Status>
                                                            <ExpiresAt>2016-06-15</ExpiresAt>
                                                        </Instance>
                                                </ReportInstanceResponse>
                                404:
                                    description: A report template matching the provided ID could not be found.
                                    body:
                                        application/xml:
                                            example: |
                                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                <ReportInstanceResponse>
                                                    <ResponseStatus>
                                                        <ErrorCode>19019</ErrorCode>
                                                        <Description>No report instance found for report 100020 with Id of '100103'</Description>
                                                    </ResponseStatus>
                                                </ReportInstanceResponse>
                        /file: 
                            description: The file resource reflects the actual downloadable information described by the Instance metadata.  Invoking an API call on the file resource will result in a download of the file containing the information, as long as the file is finished preparation and ready for download.
                            get:
                                description: Retrieve report instance output file, if output is available.
                                responses:
                                    200:
                                        description: Successful retrieval of report output.
                                        headers:
                                            Content-Disposition:
                                                description: |
                                                    Indicates the response body is a downloaded file, and provides the browser details suggesting how it might be handled.
                                                example: "attachment; filename=output.pdf"
                                    202:
                                        description: Report generation is still in progress.  Check the status of the report instance, and When the report instance status becomes "Ready",
                                        body:
                                            application/xml:
                                                example: |
                                                    <?xml version='1.0' encoding='UTF-8'?>
                                                    <ReportInstanceFileResponse>
                                                        <ResponseStatus>
                                                            <ErrorCode>19048</ErrorCode>
                                                            <Description>
                                                                Report generation in progress; Output not yet available
                                                            </Description>
                                                        </ResponseStatus>
                                                    </ReportInstanceFileResponse>
                                    404:
                                        description: A report instance matching the supplied identification information could not be found.
                                        body:
                                            application/xml:
                                                example: |
                                                    <?xml version='1.0' encoding='UTF-8'?>
                                                    <ReportInstanceFileResponse>
                                                        <ResponseStatus>
                                                            <ErrorCode>19019</ErrorCode>
                                                            <Description>
                                                                No report instance found for report 123 with Id of '456'
                                                            </Description>
                                                        </ResponseStatus>
                                                    </ReportInstanceFileResponse>
            /instances: 
                description: |
                    The report instance endpoints of the Iris API allow users to view and manage report instances for a specific
                    account.  Report instances capture invocations of a report, including the specific set of parameters provided and
                    any output generated as a result.
                get:
                    description: |
                        Retrieve report instances within the account scope, regardless of the report of which the instance is an instance of, including the up-to-date report generation status.  This is a convenience API call to make it easier to examine all Instances in scope.
                    responses:
                        200:
                            description: A valid list of instances is available.
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <ReportInstancesResponse>
                                            <Instances>
                                                <Instance>
                                                    <Id>100090</Id>
                                                    <ReportId>100020</ReportId>
                                                    <JasperId>aadbb201-1e1c-4f4d-920b-a18ec121da6d</JasperId>
                                                    <JasperExportId>703aef1d-8ca5-4265-8114-308c2ffa517c</JasperExportId>
                                                    <JasperSessionId>E8279C44E4E88B361282EC9AD4F7665A</JasperSessionId>
                                                    <ReportName>Sample Report</ReportName>
                                                    <OutputFormat>pdf</OutputFormat>
                                                    <RequestedByUserName>jbm</RequestedByUserName>
                                                    <RequestedAt>2015-05-18 14:03:04</RequestedAt>
                                                    <Parameters>
                                                        <Parameter>
                                                            <Name>AccountId</Name>
                                                            <Value>1</Value>
                                                        </Parameter>
                                                    </Parameters>
                                                    <JasperReportStatus>Expired</JasperReportStatus>
                                                    <Status>Expired</Status>
                                                </Instance>
                                                <Instance>
                                                    <Id>100098</Id>
                                                    <ReportId>100020</ReportId>
                                                    <JasperId>4ff4d77c-a2b6-4ab6-8dd7-193bf072b64e</JasperId>
                                                    <JasperExportId>61c444e3-b8d1-4299-92f8-0371ba45e123</JasperExportId>
                                                    <JasperSessionId>813885D097A3DF7B0CAC94475CEE0CAA</JasperSessionId>
                                                    <ReportName>Sample Report</ReportName>
                                                    <OutputFormat>html</OutputFormat>
                                                    <RequestedByUserName>jbm</RequestedByUserName>
                                                    <RequestedAt>2015-05-19 09:18:40</RequestedAt>
                                                    <Parameters>
                                                        <Parameter>
                                                            <Name>AccountId</Name>
                                                            <Value>1</Value>
                                                        </Parameter>
                                                        <Parameter>
                                                            <Name>SiteId</Name>
                                                            <Value>1</Value>
                                                        </Parameter>
                                                    </Parameters>
                                                    <JasperReportStatus>Expired</JasperReportStatus>
                                                    <Status>Expired</Status>
                                                </Instance>
                                                <Instance>
                                                    <Id>100102</Id>
                                                    <ReportId>100020</ReportId>
                                                    <JasperId>83a5fd11-801d-4ee7-9f0c-0ab83882be86</JasperId>
                                                    <JasperExportId>d8396a60-200c-4205-9609-ceca3d47dc7a</JasperExportId>
                                                    <JasperSessionId>21E6866B95AC144828178A2CF251F756</JasperSessionId>
                                                    <ReportName>Sample Report</ReportName>
                                                    <OutputFormat>pdf</OutputFormat>
                                                    <RequestedByUserName>jbm</RequestedByUserName>
                                                    <RequestedAt>2015-05-19 11:05:12</RequestedAt>
                                                    <Parameters>
                                                        <Parameter>
                                                            <Name>AccountId</Name>
                                                            <Value>1</Value>
                                                        </Parameter>
                                                    </Parameters>
                                                    <JasperReportStatus>Ready</JasperReportStatus>
                                                    <Status>Ready</Status>
                                                    <ExpiresAt>2016-06-15</ExpiresAt>
                                                </Instance>
                                            </Instances>
                                        </ReportInstancesResponse>
        /sipcredentials: 
            description: |
                This resource is used to manage SIP credentials for subscriber provisioning.
                SIP Credentials allow for the Authentication of SIP Messages presented to the Bandwidth Network.  These values are provisioned to the Network to allow the endpoints to participate in an Authentication Challenge (RFC 3261).  These values are compared (after processing) with a value received in the Authorization header of the SIP INVITE to determine whether the call will be allowed to proceed.
                The user is authenticated for access to the network using a composite-username, which is either a username string or a combination of a username and a domain separated with an '@'.  The other components of the authentication are MD5 hash values that are hashes of the composite username, the password, and either one or two instances of the Realm, to allow the network to recognize the two prevelent mechanisms for generating MD5 hashes.
                There are 4 components to the SIP Credentials payload...
                <ol>
                <li>The UserName (required) - a string identifying the user.</li>
                <li>The Domain (optional) - a string refining the identity of the user.  The Domain will be joined to the UserName with an '@' to create a composite username.  For example, the UserName 'bob' could be combined with the domain 'somewhere.com' to create a composite username 'bob@somewhere.com' </li> 
                <li>Hash1 (required) - a string representing a potential Hash values used to authenticate the client.  It is expected that the value will be computed from an MD5 Hash of 'composite-username:Realm:Password'.  The makeup of this hash is however transparent to the network.  It must align with a hash that the client is capable of creating</li>
                <li>Hash1 (optional)- a string representing a potential Hash value used to authenticate the client.  It is anticipated that the value will be computed from an MD5 Hash of 'composite-username@Realm:Realm:Password'.  The makeup of this hash is however transparent to the network.  It must align with a hash that the client is capable of creating.</li>
                </ol>
            get:
                description: |
                    GET is used to retrieve all SIP credentials for the account.
                queryParameters:
                        page:
                            description: |
                                An ID of the first element in a page.  This value will indicate the first value, not the count, of the initial entry in the page being requested.<br>
                                It can be an index of SIP credential or a combination of user name and domain in form {userName}@{domain}. The initial page is tagged with the ID '1'.
                            type: string
                            example: 3, user321@bw.com
                            default: 1
                            required: false
                        size:
                            description: The number of items to include in a page
                            type: integer
                            example: 5000
                            default: 500
                            required: false
                        usernamefragment:
                            description: The user name fragment. Min length - 3 characters.
                            type: string
                            example: user32
                            required: false
                        domainfragment:
                            description: The domain fragment. Min length - 3 characters.
                            type: string
                            example: bw.
                            required: false
                responses:
                    200:
                        description: |
                            OK - the SIP credentials retrieval request will return a list of the SIP credentials that are created on this account.
                        body:
                            application/xml:
                                example: 
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <SipCredentialsResponse>
                                        <Links>
                                            <first>Link=&lt;http://qa.bandwidth.com/iris/accounts/14/sipcredentials?size=500&amp;page=1&gt;;rel="first";
                                            </first>
                                        </Links>
                                        <SipCredentials>
                                            <SipCredential>
                                                <UserName>John</UserName>
                                                <Domain>bw.com</Domain>
                                                <Hash1>1g32gadgs433dd4</Hash1>
                                                <Hash1b>1g32gadgs433d24</Hash1b>
                                            </SipCredential>
                                            <SipCredential>
                                                <UserName>Mathew@bw.com</UserName>
                                                <Hash1>43543gggs43g324</Hash1>
                                            </SipCredential>
                                        </SipCredentials>
                                    </SipCredentialsResponse>
                    404:
                        description: |
                            Not Found - if the account specified does not exist or is locked or there are no SIP credentials associated with specified account it will result in a not found.
                        body:
                            application/xml:
                                example: 
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <SipCredentialsResponse>
                                        <ResponseStatus>
                                            <ErrorCode>23008</ErrorCode>
                                            <Description>There are no Sip credentials associated with the account with ID = 41</Description>
                                        </ResponseStatus>
                                    </SipCredentialsResponse>
            post:
                description: |
                    POST is used to create SIP credentials and associate its with the account.
                    The key data elements in the submission are -
                     <table style="text-align: left; width: 80%;"
                     border="1" cellpadding="2" cellspacing="2">
                      <tbody>
                        <tr>
                          <td>UserName</td>
                          <td>This is subscriber name or aggregated name and domain value(ex: John@bw.com). Field is required. Max length - 32 characters.</td>
                        </tr>
                        <tr>
                          <td>Domain</td>
                          <td>This is subscriber domain. Domain is optional and if present will be appended to the UserName with an '@'. Max length - 32 characters.</td>
                        </tr>
                        <tr>
                          <td>Hash1</td>
                          <td>This is hash value #1 in MD5 representation. Field is required. Max length - 64 characters.</td>
                        </tr>
                        <tr>
                          <td>Hash1b</td>
                          <td>This is hash value #2 in MD5 representation. Field is optional. Max length - 64 characters.</td>
                        </tr>
                      </tbody>
                    </table>
                body:
                    application/xml:
                        example: |
                            <SipCredentials>
                                <SipCredential>
                                    <UserName>John</UserName>
                                    <Domain>bw.com</Domain>
                                    <Hash1>1g32gadgs433dd4</Hash1>
                                    <Hash1b>1g32gadgs433d24</Hash1b>
                                </SipCredential>
                                <SipCredential>
                                    <UserName>Mathew@bw.com</UserName>
                                    <Hash1>43543gggs43g324</Hash1>
                                    <Hash1b>1g32gadgs433a34</Hash1b>
                                </SipCredential>
                            </SipCredentials>
                responses:
                    201:
                        description: |
                            Created - If there was at least one valid credential entry in specified list then such response will be returned.
                        body:
                            application/xml:
                                example: 
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <SipCredentialsResponse>
                                        <Errors>
                                            <Error>
                                                <ErrorCode>1003</ErrorCode>
                                                <Description>UserName is required</Description>
                                                <SipCredential>
                                                    <Domain>bw.com</Domain>
                                                    <Hash1>1g32gadgs433dd4</Hash1>
                                                    <Hash1b>1g32gadgs433d24</Hash1b>
                                                </SipCredential>
                                            </Error>
                                        </Errors>
                                        <ValidSipCredentials>
                                            <SipCredential>
                                                <UserName>Bill</UserName>
                                                <Domain>bw.com</Domain>
                                                <Hash1>43543gggs43g324</Hash1>
                                                <Hash1b>4562gadgs433454</Hash1b>
                                            </SipCredential>
                                        </ValidSipCredentials>
                                    </SipCredentialsResponse>
                    400:
                        description: |
                            Bad Request - If all credential entries in specified list are invalid it will result in bad request with list of errors.
                        body:
                            application/xml:
                                example: 
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <SipCredentialsResponse>
                                        <ResponseStatus>
                                            <Description>Please check your input parameters.</Description>
                                        </ResponseStatus>
                                        <Errors>
                                            <Error>
                                                <ErrorCode>1003</ErrorCode>
                                                <Description>UserName is required</Description>
                                                <SipCredential>
                                                    <Domain>bw.com</Domain>
                                                    <Hash1>1g32gadgs433dd4</Hash1>
                                                    <Hash1b>1g32gadgs433d24</Hash1b>
                                                </SipCredential>
                                            </Error>
                                            <Error>
                                                <ErrorCode>23009</ErrorCode>
                                                <Description>Sip credential Bill@bw.com does already exist on the account with ID = 41</Description>
                                                <SipCredential>
                                                    <UserName>Bill</UserName>
                                                    <Domain>bw.com</Domain>
                                                    <Hash1>43543gggs43g324</Hash1>
                                                    <Hash1b>4562gadgs433454</Hash1b>
                                                </SipCredential>
                                            </Error>
                                        </Errors>
                                    </SipCredentialsResponse>
            /{compositeUserName}: 
                description: |
                    This resource is used to manage single SIP credential for subscribers provisioning.<br>
                    The compositeUserName is an identifier comprised of the ```UserName```, and, if there is a ```Domain``` part to the overall ID for the user, an @ followed by the ```Domain``` segment.  This slightly convoluted approach was adopted to allow the Domain component of a user's identifier to be optional.
                get:
                    description: |
                        GET is used to retrieve SIP credential for the account by unique combination of user name and domain.
                        compositeUserName is comprised of the ```UserName```, and, if there is a ```Domain``` part, an @ followed by the <Domain>.  
                    responses:
                        200:
                            description: |
                                OK - will return full information about SIP credential on this account for specified user name and domain.
                            body:
                                application/xml:
                                    example: 
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <SipCredentialResponse>
                                            <SipCredential>
                                                <UserName>John</UserName>
                                                <Domain>bw.com</Domain>
                                                <Hash1>1g32gadgs433dd4</Hash1>
                                                <Hash1b>1g32gadgs433d24</Hash1b>
                                            </SipCredential>
                                        </SipCredentialResponse>
                                        <!-- OR for SipCredentilas with a pre-aggregated aggregated UserName and Domain, where the User and Domain parts are already contained in the UserName -->
                                        <SipCredentialResponse>
                                            <SipCredential>
                                                <UserName>Bill@bw.com</UserName>
                                                <Hash1>1g32gadgs433dd4</Hash1>
                                            </SipCredential>
                                        </SipCredentialResponse>
                        404:
                            description: |
                                Not Found - if the account specified does not exist or is locked or there are no SIP credential that corresponds to specified combination of user name and domain it will result in a not found.
                            body:
                                application/xml:
                                    example: 
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <SipCredentialResponse>
                                            <ResponseStatus>
                                                <ErrorCode>23007</ErrorCode>
                                                <Description>Sip credential Jack@bw.com was not found on the account with ID = 41</Description>
                                            </ResponseStatus>
                                        </SipCredentialResponse>
                put:
                    description: |
                        PUT is used to change single SIP credential.<br>
                        It is not possible to change the UserName or the Domain associated with the Hash Values.  To do so requires deletion of one set of credentials and addition of a new set of credentials.<br>
                        compositeUserName is comprised of the ```UserName```, and, if there is a ```Domain``` part, an @ followed by the ```Domain```. 
                        The key data elements in the submission are -
                         <table style="text-align: left; width: 80%;"
                         border="1" cellpadding="2" cellspacing="2">
                          <tbody>
                            <tr>
                              <td>Hash1</td>
                              <td>This is hash value #1 in MD5 representation. Field is required. Max length - 64 characters.</td>
                            </tr>
                            <tr>
                              <td>Hash1b</td>
                              <td>This is hash value #2 in MD5 representation. Field is optional. Max length - 64 characters.</td>
                            </tr>
                          </tbody>
                        </table>
                    body:
                        application/xml:
                            example: |
                                <SipCredential>
                                    <Hash1>1g32gadgs433dd4</Hash1>
                                    <Hash1b>1g32gadgs433d24</Hash1b>
                                </SipCredential>
                    responses:
                        200:
                            description: |
                                OK - the SIP credential was successfully updated.
                            body:
                                application/xml:
                                    example: 
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <SipCredentialResponse>
                                            <SipCredential>
                                                <UserName>Mathew</UserName>
                                                <Domain>bw.com</Domain>
                                                <Hash1>43533gggs43g324</Hash1>
                                                <Hash1b>4562gadgs423454</Hash1b>
                                            </SipCredential>
                                        </SipCredentialResponse>
                                        <!-- OR for SipCredentilas with aggregated UserName and Domain -->
                                        <SipCredentialResponse>
                                            <SipCredential>
                                                <UserName>Mathew@bw.com</UserName>
                                                <Hash1>43533gggs43g324</Hash1>
                                            </SipCredential>
                                        </SipCredentialResponse>
                        400:
                            description: |
                                Bad Request - the SIP credential was not updated.
                            body:
                                application/xml:
                                    example: 
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <SipCredentialResponse>
                                            <ResponseStatus>
                                                <ErrorCode>23004</ErrorCode>
                                                <Description>Unable to change the UserName or the Domain associated with the Hash Values. To do so requires deletion of one set of credentials and addition of a new set of credentials.</Description>
                                            </ResponseStatus>
                                        </SipCredentialResponse>
                        404:
                            description: |
                                Not Found - the SIP credential was not found on the account for specified combination of user name and domain.
                            body:
                                application/xml:
                                    example: 
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <SipCredentialResponse>
                                            <ResponseStatus>
                                                <ErrorCode>23007</ErrorCode>
                                                <Description>Sip credential Ross@bw.com was not found on the account with ID = 41</Description>
                                            </ResponseStatus>
                                        </SipCredentialResponse>
                delete:
                    description: |
                        DELETE is used to delete SIP credential.  compositeUserName is comprised of the ```UserName```, and, if there is a ```Domain``` part, an @ followed by the ```Domain```.  
                    responses:
                        200:
                            description: |
                                OK - the SIP credential was deleted successfully.
                        404:
                            description: |
                                Not Found - the SIP credential was not found on the account for specified combination of user name and domain.
                            body:
                                application/xml:
                                    example: 
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <SipCredentialResponse>
                                            <ResponseStatus>
                                                <ErrorCode>23007</ErrorCode>
                                                <Description>Sip credential Jim@bw.com was not found on the account with ID = 41</Description>
                                            </ResponseStatus>
                                        </SipCredentialResponse>
        /sites: 
            description: |
                Use this method to add or update a site to an existing account. <br>
                Each site creation or update must have the following input parameters:
                <table>
                    <tr>
                        <th>Parameter</th><th>Description</th>
                    </tr>
                    <tr>
                        <td>accountid</td><td>The numerical Account ID that you will be adding the site to.</td>
                    </tr>
                    <tr>
                        <td>Name</td><td>The name of the site. Max length restricted to 10 characters.</td>
                    </tr>
                    <tr>
                        <td>Description</td><td>Customer provided description of the site.</td>
                    </tr>
                    <tr>
                        <td>Address</td><td>Service Address for the site.</td>
                    </tr>
                    <tr>
                        <td>CustomerProvidedID</td><td>Customer can provide an optional id (max 10 digits). Note that the customer can use the same id across multiple orders.</td>
                    </tr>
                    <tr>
                        <td>CustomerName</td><td>Customer can provide an optional name</td>
                    </tr>
                    <tr>
                        <td>UcTrunkingConfiguration</td><td>For UC Trunking accounts the UcTrunkingConfiguration element describes the kind of UC trunking that is provided.  The <b>Type</b> parameter is one of Seats, Premise, or Cloud, and the <b>UsageCategory</b> parameter is one of UC250, UC500 or UC1000. </td>
                    </tr>
                </table>
            get:
                description: retrieve a list of all the sites associated with the account
                responses:
                    200:
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0"?>
                                    <SitesResponse>
                                        <Sites>
                                            <Site>
                                                <Id>399</Id>
                                                <Name>Testsite</Name>
                                                <Description>NewSite</Description>
                                            </Site>
                                            <Site>
                                                <Id>403</Id>
                                                <Name>GABESITEa</Name>
                                                <Description>Awesomeness</Description>
                                            </Site>
                                        </Sites>
                                    </SitesResponse>
            post:
                description: Add a site to the account
                body:
                    application/xml:
                        example: |
                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                            <Site>
                                <Name>Raleigh</Name>
                                <Description>Test Gateway</Description>
                                <CustomerName>BW</CustomerName>
                                <Address>
                                    <HouseNumber>6300</HouseNumber>
                                    <StreetName>Lee Hall</StreetName>
                                    <City>Raleigh</City>
                                    <StateCode>NC</StateCode>
                                    <Zip>27606</Zip>
                                    <AddressType>Service</AddressType>
                                </Address>
                            </Site>
                            <!-- and for a UC account ... -->
                            <Site>
                                <Name>Raleigh</Name>
                                <Description>Test Gateway</Description>
                                <CustomerName>BW</CustomerName>
                                <Address>
                                    <HouseNumber>6300</HouseNumber>
                                    <StreetName>Lee Hall</StreetName>
                                    <City>Raleigh</City>
                                    <StateCode>NC</StateCode>
                                    <Zip>27606</Zip>
                                    <AddressType>Service</AddressType>
                                </Address>
                                <UcTrunkingConfiguration>
                                    <Type>Seats</Type>
                                    <UsageCategory>UC500</UsageCategory>
                                </UcTrunkingConfiguration>
                            </Site>
                responses:
                    201:
                        description: The site has been successfully added to the account
                    400:
                        description: Information is missing from the body of the add site request
                        body:
                            application/xml:
                                example: |
                                    <SiteResponse>
                                        <ResponseStatus>
                                            <ErrorCode>1003</ErrorCode>
                                            <Description>Address is required</Description>
                                        </ResponseStatus>
                                    </SiteResponse>
            /{siteId}: 
                description: This method updates or deletes a site based on the id, as well as adds a SIP Peer to the given site.
                get:
                    description: retrieves the information associated with the site id
                    responses:
                        200:
                            description: site id successfully retrieved
                            body: 
                                application/xml:
                                    example: |
                                        <SiteResponse>
                                            <Site>
                                                <Id>3013</Id>
                                                <Name>Raleigh</Name>
                                                <Description>Test Gateway</Description>
                                                <CustomerName>BW</CustomerName>
                                                <Address>
                                                    <HouseNumber>6300</HouseNumber>
                                                    <StreetName>Example Street</StreetName>
                                                    <City>Raleigh</City>
                                                    <StateCode>NC</StateCode>
                                                    <Country>United States</Country>
                                                    <AddressType>Service</AddressType>
                                                </Address>
                                                <!-- Following appears only for sites on UC Trunking accounts. -->
                                                <UcTrunkingConfiguration>
                                                    <Type>Seats</Type>
                                                    <UsageCategory>UC500</UsageCategory>
                                                </UcTrunkingConfiguration>
                                            </Site>
                                        </SiteResponse>
                        404:
                            description: the site id entered does not exist
                            body:
                                application/xml:
                                    example: |
                                        <SiteResponse>
                                            <ResponseStatus>
                                                <ErrorCode>12016</ErrorCode>
                                                <Description>Site '3014' does not exist</Description>
                                            </ResponseStatus>
                                        </SiteResponse>
                put:
                    description: updates the contents of a site id
                    body:
                        application/xml:
                            example:
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <Site>
                                    <Name>Raleigh</Name>
                                    <Description>SIP gateway</Description>
                                    <CustomerName>BW</CustomerName>
                                    <CustomerProvidedId>1234567890</CustomerProvidedId>
                                    <Address>
                                        <HouseNumber>900</HouseNumber>
                                        <StreetName>Main Campus Drive</StreetName>
                                        <City>Raleigh</City>
                                        <StateCode>NC</StateCode>
                                        <Zip>27606</Zip>
                                        <AddressType>Service</AddressType>
                                    </Address>
                                    <!-- Following applies only to sites on UC Trunking accounts. -->
                                    <UcTrunkingConfiguration>
                                        <Type>Seats</Type>
                                        <UsageCategory>UC500</UsageCategory>
                                    </UcTrunkingConfiguration>
                                </Site>
                    responses:
                        200:
                            description: the site id has been successfully updated
                        400:
                            description: Information essential to the site id is missing
                            body:
                                application/xml:
                                    example:
                                        <?xml version="1.0"?>
                                        <SiteResponse>
                                            <ResponseStatus>
                                                <ErrorCode>1003</ErrorCode>
                                                <Description>Address is required</Description>
                                            </ResponseStatus>
                                        </SiteResponse>
                delete:
                    description: deletes the site - sites can only be deleted if there are no SIP Peers attached to it
                    responses:
                        200: 
                            description: the site has been successfully deleted
                        400:
                            description: DELETE request is invalid given the current state of the site
                            body:
                                application/xml:
                                    example:
                                        <?xml version="1.0"?>
                                        <SiteResponse>
                                            <ResponseStatus>
                                                <ErrorCode>12054</ErrorCode>
                                                <Description>
                                                    This site is currently locked for contract paperwork. Please contact support for further assistance.
                                                </Description>
                                            </ResponseStatus>
                                        </SiteResponse>
                /lock: 
                    description: Access and modify the current lock state of a site.
                    get:
                        description: Retrieves the current lock state of a site.
                        responses:
                            200:
                                description: site id successfully retrieved
                                body: 
                                    application/xml:
                                        example: |
                                            <SiteLockResponse>
                                                <Lock>
                                                    <Locked>true</Locked>
                                                </Lock>
                                            </SiteLockResponse>
                    put:
                        description: Modifies the lock state of a site.
                        body:
                            application/xml:
                                example:
                                    <?xml version="1.0" ?>
                                    <Lock>
                                        <Locked>false</Locked>
                                    </Lock>
                        responses:
                            200:
                                description: The site's lock state has been successfully updated.
                            400:
                                description: The request to modify the site's locked state was invalid.
                                body:
                                    application/xml:
                                        example:
                                            <?xml version="1.0" ?>
                                            <SiteLockResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12632</ErrorCode>
                                                    <Description>Invalid Locked field value 'not true' (expected 'true' or 'false').</Description>
                                                </ResponseStatus>
                                            </SiteLockResponse>
                /sippeers: 
                    description: |
                        The SIP Peer API is used to display and configure SIP Peers
                        The values for this payload are as follows:
                        <table border="1">
                        <tbody>
                            <tr>
                                <th>Element</th>
                                <th>Description</th>
                                <th>Example</th>
                            </tr>
                            <tr>
                                <td>SiteId</td>
                                <td>The internally allocated SIP Peer ID</td>
                                <td>12345</td>
                            </tr>
                            <tr>
                                <td>PeerName</td>
                                <td>Mandatory name for the SIP Peer (Max 10 chars)</td>
                                <td>Downtown Branch</td>
                            </tr>
                            <tr>
                                <td>Description</td>
                                <td>Optional description for the SIP Peer</td>
                                <td></td>
                            </tr>
                            <tr>
                                <td>IsDefaultPeer</td>
                                <td>Value is True or False. The Default SIP Peer is the default "destination" for any Telephone Numbers that are ordered for the Site in which the SIP Peer resides.&nbsp; Each site can have only 1 default SIP Peer. You can configure multiple SIP Peers on a Site</td>
                                <td></td>
                            </tr>
                            <tr>
                                <td>ShortMessagingProtocol</td>
                                <td>Used to specify the protocol used by the endpoints for exchanging SMS messages: allowed values are SIP and SMPP.&nbsp; The element is optional, with a default of SMPP.&nbsp; This element can be updated if SMS is enabled on the Account and SIP Peer.</td>
                                <td></td>
                            </tr>
                            <tr>
                                <td>HostName</td>
                                <td>The IP Address or Host Name of the address to be used for the SmsHosts, VoiceHosts or VoiceHostGroups addresses.</td>
                                <td></td>
                            </tr>
                            <tr>
                                <td>Port</td>
                                <td>Optional Port Number for Voice and Termination hosts. This is an optional parameter that has default values that are dependent on the Application.&nbsp; It is not valid for SMS.</td>
                                <td></td>
                            </tr>
                            <tr>
                                <td>VoiceHosts</td>
                                <td>These addresses, comprised of HostName and optional Port, are used by the Bandwidth network to send calls to for Origination services. The VoiceHosts list of IP addresses used for an active/standby address selection mechanism, where the first address is attempted, followed by the second address and so on.  Except under failure situations the first address in the list is preferred. Maximum of 10 hosts - can be IP address or Fully Qualified Domain Name</td>
                                <td></td>
                            </tr>
                            <tr>
                                <td>VoiceHostGroups</td>
                                <td>The VoiceHostGroups element is comprised of a list of up to five VoiceHostGroup elements, each of which is used to randomly distribute traffic amongst up to 10 IP addresses.  One of the VoiceHostGroups elements in the group is chosen at random to receive traffic, and then the calls are placed at random amongst the addresses in the group.  Once a group is chose, failover behavior is retained within the group.</td>
                                <td></td>
                            </tr>
                            <tr>
                                <td>VoiceHostGroup</td>
                                <td>A VoiceHostGroup is a list of IP Addresses (the Host element).  This traffic distribution model distributes traffic in a Random manner amongst the addresses in the group.</td>
                                <td></td>
                            </tr>
                            <tr>
                                <td>SmsHosts</td>
                                <td>Used for SMS traffic only – can be IP address of Fully Qualified Domain Name</td>
                                <td></td>
                            </tr>
                            <tr>
                                <td>TerminationHosts</td>
                                <td>These addresses, comprised of IP or Subnet(CIDR format) and optional Port, are used by the Bandwidth network to send calls to for Termination services. Maximum of 10 hosts - can be IP address or subnets. In case of subnet you should specify NetworkAddress of subnet as IP.</td>
                                <td>135.23.78.145 or
                                <br>
                                12.45.67.48/29
                                </td>
                            </tr>
                            <tr>
                                <td>CustomerTrafficAllowed</td>
                                <td>A TerminationHost can be configured to allow different customer traffic types.&nbsp; Allowed values are LITE, DOMESTIC and ALL. This is an optional parameter.</td>
                                <td></td>
                            </tr>
                            <tr>
                                <td>DataAllowed</td>
                                <td>True or False (Enables or Disables SMS messaging for a TerminationHost). Optional parameter.</td>
                                <td></td>
                            </tr>
                            <tr>
                                <td>Address</td>
                                <td>Billing or Service Address for the SIP Peer.&nbsp;
                                    This element is optional for accounts except for accounts with the UC
                                    Trunking Product.&nbsp; If the address element is provided the
                                    following fields can be provided, some of which are Mandatory:<br>
                                    &nbsp;&nbsp;&nbsp; HouseNumber - MANDATORY<br>
                                    &nbsp;&nbsp;&nbsp; HouseSuffix - OPTIONAL<br>
                                    &nbsp;&nbsp;&nbsp; PreDirectional - OPTIONAL<br>
                                    &nbsp;&nbsp;&nbsp; StreetName - MANDATORY<br>
                                    &nbsp;&nbsp;&nbsp; StreetSuffix - OPTIONAL<br>
                                    &nbsp;&nbsp;&nbsp; PostDirectional- OPTIONAL<br>
                                    &nbsp;&nbsp;&nbsp; AddressLine2- OPTIONAL<br>
                                    &nbsp;&nbsp;&nbsp; City - MANDATORY<br>
                                    &nbsp;&nbsp;&nbsp; StateCode - MANDATORY<br>
                                    &nbsp;&nbsp;&nbsp; Zip - MANDATORY<br>
                                    &nbsp;&nbsp;&nbsp; PlusFour - OPTIONAL<br>
                                    &nbsp;&nbsp;&nbsp; County - OPTIONAL<br>
                                    &nbsp;&nbsp;&nbsp; Country - OPTIONAL (Defaults to 'US')<br>
                                    &nbsp;&nbsp;&nbsp; AddressType - MANDATORY (Billing or
                                    Service)</td>
                                <td></td>
                            </tr>
                            <tr>
                              <td>CallingName</td>
                              <td>Determines whether the Calling Name Displayl service is applied to the Telephone Numbers associates with the SIP Peer</td>
                              <td></td>
                            </tr>
                            <tr>
                              <td>Display</td>
                              <td>Controls the Display of Calling Name information. If &lt;true> then the calling name information is displayed by default for all calls,</td>
                              <td></td>
                            </tr>
                            <tr>
                              <td>Enforced</td>
                              <td>Determines whether the Default Display behavior (Display) is enforced for all TNs associated with the SIP Peer.  If &lt;true> then no TN-level overrde is possible</td>
                              <td></td>
                            </tr>
                            <tr>
                              <td>FinalDestinationURI</td>
                              <td>Last attempt for routing of calls </td>
                              <td></td>
                            </tr>
                            <tr>
                              <td></td>
                              <td></td>
                              <td></td>
                            </tr>
                            </tbody>
                        </table>
                    get:
                        description: Retrieve information about a Sip Peer or set of Sip Peers
                        responses:
                            200:
                                description: A successful result that contains the response data
                                body: 
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <TNSipPeersResponse>
                                                <SipPeers>
                                                    <SipPeer xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="SipPeer">
                                                        <PeerId>304985</PeerId>
                                                        <PeerName>CNAM-TEST-778</PeerName>
                                                        <Description>description</Description>
                                                        <IsDefaultPeer>false</IsDefaultPeer>
                                                        <ShortMessagingProtocol>SMPP</ShortMessagingProtocol>
                                                        <VoiceHosts/>
                                                        <VoiceHostGroups/>
                                                        <SmsHosts/>
                                                        <TerminationHosts/>
                                                        <Address>
                                                            <HouseNumber>1600</HouseNumber>
                                                            <HouseSuffix/>
                                                            <PreDirectional/>
                                                            <StreetName>Pennsylvania Avenue Northwest</StreetName>
                                                            <StreetSuffix/>
                                                            <PostDirectional/>
                                                            <AddressLine2/>
                                                            <City>Washington</City>
                                                            <StateCode>DC</StateCode>
                                                            <Zip>20500</Zip>
                                                            <PlusFour/>
                                                            <County/>
                                                            <Country>United States</Country>
                                                            <AddressType>Service</AddressType>
                                                        </Address>
                                                        <CallingName>
                                                            <Display>false</Display>
                                                            <Enforced>false</Enforced>
                                                        </CallingName>
                                                    </SipPeer>
                                                </SipPeers>
                                            </TNSipPeersResponse>
                    post:
                        description: Create a Sip Peer
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <SipPeer>
                                        <PeerName>name</PeerName>
                                        <Description>description</Description>
                                        <IsDefaultPeer>false</IsDefaultPeer>
                                        <FinalDestinationUri>uri</FinalDestinationUri>
                                        <ShortMessagingProtocol>SMPP</ShortMessagingProtocol>
                                        <VoiceHosts>
                                            <Host>
                                                <HostName>10.10.10.1</HostName>
                                            </Host>
                                            <Host>
                                                <HostName>10.10.10.2</HostName>
                                            </Host>
                                        </VoiceHosts>
                                        <SmsHosts>
                                            <Host>
                                                <HostName>2.1.1.9</HostName>
                                            </Host>
                                        </SmsHosts>
                                        <TerminationHosts>
                                            <TerminationHost>
                                                <HostName>2.1.1.9</HostName>
                                                <Port>0</Port>
                                                <CustomerTrafficAllowed>DOMESTIC</CustomerTrafficAllowed>
                                                <DataAllowed>true</DataAllowed>
                                            </TerminationHost>
                                            <TerminationHost>
                                                <HostName>2.1.1.96/30</HostName>
                                                <Port>0</Port>
                                                <CustomerTrafficAllowed>DOMESTIC</CustomerTrafficAllowed>
                                                <DataAllowed>true</DataAllowed>
                                            </TerminationHost>
                                        </TerminationHosts>
                                          <Address>
                                              <HouseNumber>1600</HouseNumber>
                                              <HouseSuffix/>
                                              <PreDirectional/>
                                              <StreetName>Pennsylvania Avenue Northwest</StreetName>
                                              <StreetSuffix/>
                                              <PostDirectional/>
                                              <AddressLine2/>
                                              <City>Washington</City>
                                              <StateCode>DC</StateCode>
                                              <Zip>20500</Zip>
                                              <PlusFour/>
                                              <County/>
                                              <Country>United States</Country>
                                              <AddressType>Service</AddressType>
                                          </Address>
                                        <PremiseTrunks>PremiseTrunks</PremiseTrunks>
                                        <CallingName>
                                            <Display>true</Display>
                                            <Enforced>true</Enforced>
                                        </CallingName>
                                    </SipPeer>
                                    or alternatively, using VoiceHostGroups instead of VoiceHosts 
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <SipPeer>
                                        <PeerName>name</PeerName>
                                        <Description>description</Description>
                                        <IsDefaultPeer>false</IsDefaultPeer>
                                        <FinalDestinationUri>uri</FinalDestinationUri>
                                        <ShortMessagingProtocol>SMPP</ShortMessagingProtocol>
                                        <VoiceHostGroups>
                                            <VoiceHostGroup>
                                               <Host>
                                                   <HostName>10.10.10.1</HostName>
                                               </Host>
                                               <Host>
                                                   <HostName>10.10.10.2</HostName>
                                               </Host>
                                            </VoiceHostGroup>
                                        </VoiceHostGroups>
                                        <SmsHosts>
                                            <Host>
                                                <HostName>2.1.1.9</HostName>
                                            </Host>
                                        </SmsHosts>
                                        <TerminationHosts>
                                            <TerminationHost>
                                                <HostName>2.1.1.9</HostName>
                                                <Port>0</Port>
                                                <CustomerTrafficAllowed>DOMESTIC</CustomerTrafficAllowed>
                                                <DataAllowed>true</DataAllowed>
                                            </TerminationHost>
                                            <TerminationHost>
                                                <HostName>2.1.1.96/30</HostName>
                                                <Port>0</Port>
                                                <CustomerTrafficAllowed>DOMESTIC</CustomerTrafficAllowed>
                                                <DataAllowed>true</DataAllowed>
                                            </TerminationHost>
                                        </TerminationHosts>
                                    </SipPeer>
                        responses:
                            201:
                                description: Sip Peer created
                                body:
                                    application/xml:
                                        example: None
                            400:
                                description: |
                                    Bad Request. Possible errors in response:
                                       Possible errors in response:
                                       <ul>
                                            <li>13569 "A termination host with HostName = 2.1.1.9 is already in use"</li>
                                            <li>13562 "Must have either no hosts or SmsHosts and TerminationHosts"</li>
                                            <li>13509 "'wrong.ip' is not a valid host. Provide valid IP or domain name"</li>
                                            <li>13553 "Duplicate host (and port) in VoiceHosts"</li>
                                            <li>13510 "'wrong.url' is not a valid Destination URI"</li>
                                            <li>13522 "IsDefaultPeer cannot be false right now. The account requires at least one Default Sip Peer"</li>
                                            <li>13552 "A termination host with HostName = %s and Port = %s is already in use"</li>
                                            <li>12024 "Region with state '%s' and country '%s' does not exist"</li>
                                            <li>13576 "Account 9999999 has no CNAM product feature"</li>
                                            <li>13581 "Display option is missing"</li>
                                            <li>13582 "Enforce option is missing"</li>
                                            <li>13590 "The supplied CustomerTrafficAllowed and DataAllowed values on host %s:%s are not allowed for this sippeer"</li>
                                            <li>13591 "Termination Settings at the SIP Peer level are not allowed for accounts with the 'DedicatedPrivateNetworkTopology' product."</li>
                                            <li>13592 "Calling name 'Display' and 'Enforced' values can't be updated for 'DedicatedPrivateNetworkTopology' account.</li>
                                            <li>13593 "%s has invalid mask. Valid mask values: 20-32"</li>
                                            <li>13594 "%s is not valid host"</li>
                                            <li>13595 "The IP address provided: %s contains a non zero subnet portion. An equivalent IP address such as %s with a zero subnet value must be provided."</li>
                                       </ul>
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <SipPeerResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>13582</ErrorCode>
                                                    <Description>Enforce option is missing</Description>
                                                </ResponseStatus>
                                            </SipPeerResponse>
                            409:
                                description: Conflict - Sip Peer with such name already exists
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <SipPeerResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>13524</ErrorCode>
                                                    <Description>SipPeer name 'testDocSipPeers1' already exists for Account '9999999' and Site '45'</Description>
                                                </ResponseStatus>
                                            </SipPeerResponse>
                            503:
                                description: Service unavailable
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <SipPeerResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>13566</ErrorCode>
                                                    <Description>Our E911 service is unavaliable</Description>
                                                </ResponseStatus>
                                            </SipPeerResponse>
                    /{sippeerId}: 
                        description:  |
                            The SIPpeerID Resource deals with retrieving or updating a specific identified SIP Peer, identified by the SIP Peer ID.
                            The elements of the payload are described in the /sippeers resource.
                        get:
                            description: |
                                Retrieve a the data associated with a Sip Peer
                            responses:
                                200:
                                    description: A successful result that contains the response data
                                    body: 
                                        application/xml:
                                            example: |
                                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                <SipPeerResponse>
                                                    <SipPeer>
                                                        <PeerId>304985</PeerId>
                                                        <PeerName>CNAM-TEST-778</PeerName>
                                                        <Description>description</Description>
                                                        <IsDefaultPeer>false</IsDefaultPeer>
                                                        <ShortMessagingProtocol>SMPP</ShortMessagingProtocol>
                                                        <VoiceHosts/>
                                                        <VoiceHostGroups/>
                                                        <SmsHosts/>
                                                        <TerminationHosts/>
                                                        <Address>
                                                            <HouseNumber>1600</HouseNumber>
                                                            <HouseSuffix/>
                                                            <PreDirectional/>
                                                            <StreetName>Pennsylvania Avenue Northwest</StreetName>
                                                            <StreetSuffix/>
                                                            <PostDirectional/>
                                                            <AddressLine2/>
                                                            <City>Washington</City>
                                                            <StateCode>DC</StateCode>
                                                            <Zip>20500</Zip>
                                                            <PlusFour/>
                                                            <County/>
                                                            <Country>United States</Country>
                                                            <AddressType>Service</AddressType>
                                                        </Address>
                                                        <CallingName>
                                                            <Display>false</Display>
                                                            <Enforced>false</Enforced>
                                                        </CallingName>
                                                    </SipPeer>
                                                </SipPeerResponse>
                                400:
                                    description: Bad request - Sip Peer id is wrong
                                    body: 
                                        application/xml:
                                            example: |
                                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                <SipPeerResponse>
                                                    <ResponseStatus>
                                                        <ErrorCode>13563</ErrorCode>
                                                        <Description>Sip Peer '316167' account '9999999' and site '45' does not exist</Description>
                                                    </ResponseStatus>
                                                </SipPeerResponse>
                        put:
                            description: |
                                Update a Sip Peer
                                There are a few rules used to eliminate IP address collisions.  The primary restriction is on the ability to share Term IP addresses across IRIS structural elements. Essentially...
                                <ul><li>Term Addresses cannot be shared anywhere</li>
                                <li>SMS addresses can be shared, and can be different than Term IP Addresses </li>
                                <li>VoiceHost and VoiceHostGroup addresses can be shared between SIP Peers, and can be different than or the same as Term IP Addresses </li>
                                </ul>
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <SipPeer>
                                            <PeerName>name</PeerName>
                                            <Description>description</Description>
                                            <IsDefaultPeer>false</IsDefaultPeer>
                                            <ShortMessagingProtocol>SMPP</ShortMessagingProtocol>
                                            <VoiceHosts>
                                                <Host>
                                                    <HostName>10.10.10.1</HostName>
                                                </Host>
                                                <Host>
                                                    <HostName>10.10.10.2</HostName>
                                                </Host>
                                            </VoiceHosts>
                                            <VoiceHostGroups/>
                                            <SmsHosts>
                                                <Host>
                                                    <HostName>2.1.1.9</HostName>
                                                </Host>
                                            </SmsHosts>
                                            <TerminationHosts>
                                                <TerminationHost>
                                                    <HostName>2.1.1.9</HostName>
                                                    <Port>0</Port>
                                                    <CustomerTrafficAllowed>DOMESTIC</CustomerTrafficAllowed>
                                                    <DataAllowed>true</DataAllowed>
                                                </TerminationHost>
                                                <TerminationHost>
                                                    <HostName>2.1.1.96/30</HostName>
                                                    <Port>0</Port>
                                                    <CustomerTrafficAllowed>DOMESTIC</CustomerTrafficAllowed>
                                                    <DataAllowed>true</DataAllowed>
                                                </TerminationHost>
                                            </TerminationHosts>
                                            <CallingName>
                                                <Display>true</Display>
                                                <Enforced>true</Enforced>
                                            </CallingName>
                                        </SipPeer>
                            responses:
                                200:
                                    description: Sip Peer updated
                                    body: 
                                        application/xml:
                                            example: |
                                                None
                                400:
                                    description: |
                                        Bad Request. Possible errors in response:
                                        <ul>
                                           <li>13569 "A termination host with HostName = 2.1.1.9 is already in use"</li>
                                           <li>13562 "Must have either no hosts or SmsHosts and TerminationHosts"</li>
                                           <li>13509 "'wrong.ip' is not a valid host. Provide valid IP or domain name"</li>
                                           <li>13553 "Duplicate host (and port) in VoiceHosts"</li>
                                           <li>13510 "'wrong.url' is not a valid Destination URI"</li>
                                           <li>13522 "IsDefaultPeer cannot be false right now. The account requires at least one Default Sip Peer"</li>
                                           <li>13552 "A termination host with HostName = %s and Port = %s is already in use"</li>
                                           <li>12024 "Region with state '%s' and country '%s' does not exist"</li>
                                           <li>13576 "Account 9999999 has no CNAM product feature"</li>
                                           <li>13581 "Display option is missing"</li>
                                           <li>13582 "Enforce option is missing"</li>
                                           <li>13563 "Sip Peer '316167' account '9999999' and site '45' does not exist"</li>
                                           <li>13590 "The supplied CustomerTrafficAllowed and DataAllowed values on host %s:%s are not allowed for this sippeer"</li>
                                           <li>13591 "Termination Settings at the SIP Peer level are not allowed for accounts with the 'DedicatedPrivateNetworkTopology' product."</li>
                                           <li>13592 "Calling name 'Display' and 'Enforced' values can't be updated for 'DedicatedPrivateNetworkTopology' account.</li>
                                           <li>13593 "%s has invalid mask. Valid mask values: 24-32"</li>
                                           <li>13594 "%s is not valid host"</li>
                                           <li>13595 "The IP address provided: %s contains a non zero subnet portion. An equivalent IP address such as %s with a zero subnet value must be provided."</li>
                                        </ul>
                                    body:
                                        application/xml:
                                            example: |
                                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                <SipPeerResponse>
                                                    <ResponseStatus>
                                                        <ErrorCode>13582</ErrorCode>
                                                        <Description>Enforce option is missing</Description>
                                                    </ResponseStatus>
                                                </SipPeerResponse>
                        delete:
                            description: Delete a Sip Peer
                            responses:
                                200:
                                    description: Sip Peer deleted
                                    body:
                                        application/xml:
                                            example: |
                                                None
                                404:
                                    description: Sip Peer not found
                                    body:
                                        application/xml:
                                            example: |
                                                None
                        /tns: 
                            get:
                                description: Retrieve information about a Telephone number or set of Telephone numbers
                                queryParameters:
                                    includeAttributes:
                                        type: boolean
                                        description: If the value is false SipPeerTelephoneNumber will contain FullNumber tags only. This makes processing faster.
                                        required: false
                                        default: true
                                        example: "false"
                                responses:
                                    200:
                                        description: A successful result that contains the response data
                                        body:
                                            application/xml:
                                                example: |
                                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                    <SipPeerTelephoneNumbersResponse>
                                                        <SipPeerTelephoneNumbers>
                                                            <SipPeerTelephoneNumber>
                                                                <FullNumber>2052160148</FullNumber>
                                                                <CallingNameDisplay>true</CallingNameDisplay>
                                                                <TnAttributes>
                                                                    <TnAttribute>Protected</TnAttribute>
                                                                </TnAttributes>
                                                                <MessagingSettings>
                                                                    <SmsEnabled>true</SmsEnabled>
                                                                </MessagingSettings>
                                                            </SipPeerTelephoneNumber>
                                                            <SipPeerTelephoneNumber>
                                                                <FullNumber>2053161118</FullNumber>
                                                                <CallingNameDisplay>false</CallingNameDisplay>
                                                                <MessagingSettings>
                                                                    <SmsEnabled>true</SmsEnabled>
                                                                </MessagingSettings>
                                                            </SipPeerTelephoneNumber>
                                                            <SipPeerTelephoneNumber>
                                                                <FullNumber>2053160118</FullNumber>
                                                                <CallForward>2014563025</CallForward>
                                                                <CallingNameDisplay>false</CallingNameDisplay>
                                                            </SipPeerTelephoneNumber>
                                                        </SipPeerTelephoneNumbers>
                                                    </SipPeerTelephoneNumbersResponse>
                            post:
                                description: Moves an existing TN on the account to the specified SIP Peer, and sets the various TN-related options.  This API call remains unpublished externally.  /movetns is preferred for TN moving.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <SipPeerTelephoneNumber>
                                              <FullNumber>2052160156</FullNumber>
                                              <NumberFormat>10digit</NumberFormat>
                                              <RPIDFormat>10digit</RPIDFormat>
                                              <RewriteUser/>
                                              <CallForward>7042661720</CallForward>
                                              <CallingNameDisplay>true</CallingNameDisplay>
                                              <TnAttributes>
                                                  <TnAttribute>Protected</TnAttribute>
                                              </TnAttributes>
                                              <MessagingSettings>
                                                  <SmsEnabled>true</SmsEnabled>
                                              </MessagingSettings>
                                            </SipPeerTelephoneNumber>
                                responses:
                                    201:
                                        description: Telephone number installed on the indicated SIP Peer with indicated capabilties provisioned.
                                        body:
                                            application/xml:
                                                example: None
                                    400:
                                        description: |
                                            Bad Request. Possible errors in response:
                                            <ul>
                                               <li>13513 "Call Forwarding number '%s' is not a valid 10-digit telephone number"</li>
                                               <li>13514 "Number Format '%s' is invalid for telephone number '%s'"</li>
                                               <li>13515 "Rewrite User '%s' is invalid for telephone number '%s'"</li>
                                               <li>13516 "RPID Format '%s' is invalid for telephone number '%s'"</li>
                                               <li>13517 "Telephone number '%s' is not available"</li>
                                               <li>13518 "Telephone number '%s' is not available"</li>
                                               <li>13519 "There is an issue with telephone number '%s'. Please contact Customer Service"</li>
                                               <li>13575 "CallingNameDisplay '%s' is invalid. Valid values are: 'true', 'false'"</li>
                                               <li>13576 "Account '%s' has no [CallForwarding|CNAM] product feature"</li>
                                               <li>13583 "CNAM for '%s' is applied at the Location level and it is not applicable at the TN level."</li>
                                            </ul>
                                        body:
                                            application/xml:
                                                example: |
                                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                    <SipPeerTelephoneNumberResponse>
                                                        <ResponseStatus>
                                                            <ErrorCode>13513</ErrorCode>
                                                            <Description>Call Forwarding number '%s' is not a valid 10-digit telephone number</Description>
                                                        </ResponseStatus>
                                                    </SipPeerTelephoneNumberResponse>
                                    409:
                                        description: Conflict - Telephone number exists on Sip Peer
                                        body:
                                            application/xml:
                                                example: |
                                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                    <SipPeerTelephoneNumberResponse>
                                                        <ResponseStatus>
                                                            <ErrorCode>13526</ErrorCode>
                                                            <Description>Telephone number '%s' is already associated with SIP Peer '%s'</Description>
                                                        </ResponseStatus>
                                                    </SipPeerTelephoneNumberResponse>
                                    404:
                                        description: |
                                            Bad Request. Possible errors in response:
                                               13536 "Telephone number %s does not exist on Account %s, Site %s, and Sip Peer %s"
                                               13563 "Sip Peer '%s' account '%s' and site '%s' does not exist"
                                        body:
                                            application/xml:
                                                example: |
                                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                    <SipPeerTelephoneNumberResponse>
                                                        <ResponseStatus>
                                                            <ErrorCode>13536</ErrorCode>
                                                            <Description>Telephone number %s does not exist on Account %s, Site %s, and Sip Peer %s</Description>
                                                        </ResponseStatus>
                                                    </SipPeerTelephoneNumberResponse>
                            /{tn}: 
                                get:
                                    description: |
                                        Link for receiving information about telephone number.
                                        CallForward - Does this telephone number have call forwarding or not.
                                        CallingNameDisplay - Calling Name of the caller is available to the user or not on incoming calls.
                                        TnAttributes - Is this telephone number protected or not.
                                        MessagingSettings -  Does this telephone number have any messaging system configured.
                                    responses:
                                        200:
                                            description: |
                                                CallForward, CallingNameDisplay, TnAttributes and MessagingSettings are not required in the response
                                            body: 
                                                application/xml:
                                                    example: |
                                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                        <SipPeerTelephoneNumberResponse>
                                                            <SipPeerTelephoneNumber>
                                                                <FullNumber>5209072451</FullNumber>
                                                                <CallForward>7042661720</CallForward>
                                                                <CallingNameDisplay>true</CallingNameDisplay>
                                                                <TnAttributes>
                                                                    <TnAttribute>Protected</TnAttribute>
                                                                </TnAttributes>
                                                                <MessagingSettings>
                                                                    <SmsEnabled>true</SmsEnabled>
                                                                </MessagingSettings>
                                                            </SipPeerTelephoneNumber>
                                                        </SipPeerTelephoneNumberResponse>
                                put:
                                    description: | 
                                        This API can be used by the Bandwidth Dashboard or general API users to update the settings for TNs allocated to their account.
                                    body:
                                        application/xml:
                                            example: | 
                                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                <SipPeerTelephoneNumber>
                                                    <FullNumber>2052160156</FullNumber>
                                                    <NumberFormat>10digit</NumberFormat>
                                                    <RPIDFormat>10digit</RPIDFormat>
                                                    <RewriteUser>false</RewriteUser>
                                                    <CallForward>7042661720</CallForward>
                                                    <CallingNameDisplay>true</CallingNameDisplay>
                                                    <TnAttributes>
                                                        <TnAttribute>Protected</TnAttribute>
                                                    </TnAttributes>
                                                    <MessagingSettings>
                                                        <SmsEnabled>true</SmsEnabled>
                                                    </MessagingSettings>
                                                </SipPeerTelephoneNumber>
                                    responses:
                                        200:
                                            description: |
                                                There is no body response when request is successful
                                        400:
                                            description: |
                                                Bad Request. Possible errors in response:
                                                <ul>
                                                   <li>13513 "Call Forwarding number '%s' is not a valid 10-digit telephone number"</li>
                                                   <li>13514 "Number Format '%s' is invalid for telephone number '%s'"</li>
                                                   <li>13515 "Rewrite User '%s' is invalid for telephone number '%s'"</li>
                                                   <li>13516 "RPID Format '%s' is invalid for telephone number '%s'"</li>
                                                   <li>13517 "Telephone number '%s' is not available"</li>
                                                   <li>13518 "Telephone number '%s' is not available"</li>
                                                   <li>13519 "There is an issue with telephone number '%s'. Please contact Customer Service"</li>
                                                   <li>13575 "CallingNameDisplay '%s' is invalid. Valid values are: 'true', 'false'"</li>
                                                   <li>13576 "Account '%s' has no [CallForwarding|CNAM] product feature"</li>
                                                   <li>13583 "CNAM for '%s' is applied at the Location level and it is not applicable at the TN level."</li>
                                                   <li>13536 "Telephone number 7206083492 does not exist on Account 9999999, Site 45, and Sip Peer 305610"</li>
                                                </ul>
                                            body:
                                                application/xml:
                                                    example: |
                                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                        <SipPeerTelephoneNumberResponse>
                                                            <ResponseStatus>
                                                                <ErrorCode>13576</ErrorCode>
                                                                <Description>Account '9999999' has no 'CallForwarding' product feature</Description>
                                                            </ResponseStatus>
                                                        </SipPeerTelephoneNumberResponse>
                        /totaltns: 
                            get:
                                description: Retrieve count of Telephone numbers for Sip Peer
                                queryParameters:
                                   feature:
                                     displayName: feature
                                     description: Telephone number feature
                                     type: string
                                     enum: [CNAM, LIDB]
                                     required: false
                                     example: CNAM
                                     repeat: true
                                responses:
                                    200:
                                        description: A successful result that contains the response data
                                        body:
                                            application/xml:
                                                example: |
                                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                    <SipPeerTelephoneNumbersCountResponse>
                                                        <SipPeerTelephoneNumbersCount>
                                                            <SipPeerTelephoneNumbersCount>4</SipPeerTelephoneNumbersCount>
                                                            <CnamCount>4</CnamCount>
                                                            <LidbCount>0</LidbCount>
                                                        </SipPeerTelephoneNumbersCount>
                                                    </SipPeerTelephoneNumbersCountResponse>
                        /movetns: 
                            description: This method moves desired Telephone Numbers to the given SIP peer. 
                            post:
                                description: |
                                    The POST method moves all telephone numbers specified in the body to the given SIP peer.<br>
                                    The source SIP peer is determined by the Telephone Number, i.e. the PUT method can move multiple numbers from different source SIP peers.<br>
                                    The destination SIP peer is specified in the URL.<br>
                                    NOTE: only a maximum of 5000 Telephone Numbers can be moved in one operation.
                                body:
                                    application/xml:
                                        example: |
                                            <SipPeerTelephoneNumbers>
                                                <FullNumber>9199921234</FullNumber>
                                                    <!-- SNIP -->
                                                <FullNumber>9199998550</FullNumber>
                                            </SipPeerTelephoneNumbers>
                                responses:
                                    200:
                                        description: The request has been successfully received. 
                        /tftotals: 
                            description: Retrieves the total count of Toll-Free Telephone Numbers for the given SIP peer.
                            get:
                                description: Retrieves the total count of Toll-Free Telephone Numbers for the given SIP peer.
                                responses:
                                    200:
                                        body:
                                            application/xml:
                                                example: |
                                                    <SipPeerTollFreeTotalsResponse>
                                                        <TollFreeTotals>
                                                            <TotalCount>0</TotalCount>
                                                        </TollFreeTotals>
                                                    </SipPeerTollFreeTotalsResponse>
                        /bdrsummary: 
                            description: |
                                The SIP-Peer-level BDR Summary API provides resellers the ability to collect, from Iris, a complete set of usage information aggregated at the
                                SIP Peer level for the purpose of facilitating the reseller's customer billing efforts.
                            get:
                                description:
                                    Retrieve SIP-Peer-level BDR summary.
                                queryParameters:
                                    startDate:
                                        description: Start of date range (inclusive) for the data requested.  Must fall before endDate with a date range of no more than 32 days.
                                        type: string
                                        example: 2013-11-01
                                        required: true
                                    endDate:
                                        description: End of date range (inclusive) for the data requested.  Must be after startDate with a date range of no more than 32 days.
                                        type: string
                                        example: 2013-12-01
                                        required: true
                                responses:
                                    200:
                                        description: |
                                            An HTTP 200 (OK) is returned when the call to retrieve the BDR Summary was successful.
                                        body:
                                            application/xml:
                                                example: |
                                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                    <BdrSummaryResponse>
                                                        <BdrSummary>
                                                            <DateRange>
                                                                <StartDate>2013-01-01</StartDate>
                                                                <EndDate>2013-02-01</EndDate>
                                                            </DateRange>
                                                            <AllowedUsage>0</AllowedUsage>
                                                            <ExcessMinutes>0</ExcessMinutes>
                                                            <Seats>182</Seats>
                                                            <TollFreeNumbers>1</TollFreeNumbers>
                                                            <Calls>
                                                                <Domestic>0</Domestic>
                                                                <E911>0</E911>
                                                                <International>0</International>
                                                                <N11>0</N11>
                                                                <TollFree>0</TollFree>
                                                            </Calls>
                                                            <Minutes>
                                                                <Domestic>0</Domestic>
                                                                <E911>0</E911>
                                                                <International>0</International>
                                                                <N11>0</N11>
                                                                <TollFree>0</TollFree>
                                                            </Minutes>
                                                        </BdrSummary>
                                                    </BdrSummaryResponse>
                                    400:
                                        description: |
                                            An HTTP 400 (BAD REQUEST) is returned if request is invalid, e.g. if the account is one for which partner pricing information is not applicable.
                                        body:
                                            application/xml:
                                                example: |
                                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                    <BdrSummaryResponse>
                                                        <ResponseStatus>
                                                            <ErrorCode>12017</ErrorCode>
                                                            <Description>Account '1' does not have product 'UcTrunking'</Description>
                                                        </ResponseStatus>
                                                    </BdrSummaryResponse>
                        /totalSeats: 
                            description: |
                                Retrieves the total number of seats for a sippeer ID. <strong>Note: </strong> This option is only available for accounts that have UC Trunking.
                            get:
                                description: Retrieves the total number of seats.
                                responses:
                                    200:
                                        description: The total number of seats has been successfully retrieved.
                                        body:
                                            application/xml:
                                                example: |
                                                    <AccountTotalSeatsResponse>
                                                        <UcTrunkingSeats>
                                                            <TotalCount>2</TotalCount>
                                                        </UcTrunkingSeats>
                                                    </AccountTotalSeatsResponse>
                                    400:
                                        description: The account ID given does not have UC Trunking associated with it.
                                        body:
                                            application/xml:
                                                example: |
                                                    <AccountTotalSeatsResponse>
                                                        <ResponseStatus>
                                                            <ErrorCode>12017</ErrorCode>
                                                            <Description>Account '12346099' does not have product 'UcTrunking'</Description>
                                                        </ResponseStatus>
                                                    </AccountTotalSeatsResponse>
                        /products: 
                            description:  |
                                This API will expose products that are associated directly with the SIP Peer.
                                At this time all of these products are limited to Admin access, and not exposed to the normal user base
                                The current products that can be associated with a SIP Peer are: <br>
                                * Termination <br>
                                * EdgeManagement <br>
                                * Messaging <br>
                                * Origination <br>
                            get:
                                description: list the products associated with a SIP Peer
                                responses:
                                    200:
                                        description: There is at least one product associated with the SIP Peer. If there is no products associated with Sip Peer, empty list will be displayed.
                                        body:
                                            application/xml:
                                                example: |
                                                    <SipPeerProductResponse>
                                                        <Products>
                                                            <Product>
                                                                <Name>Termination</Name>
                                                            </Product>
                                                            <Product>
                                                                <Name>EdgeManagement</Name>
                                                            </Product>
                                                        </Products>
                                                    </SipPeerProductResponse>
                            /edgemanagement: 
                                description:  |
                                    These API calls are to allow SIP Peers to acquire SBC Settings that override the account-level SBC settings.
                                    That permits a SIP Peer to have a specific traffic shape that is suited to the purposes of the TNs on that SIP Peer.
                                get:
                                    description: |
                                        Retrieve SBC settings associated with a Sip Peer
                                    responses:
                                        200:
                                            description: A successful result that contains the response data
                                            body: 
                                                application/xml:
                                                    example: |
                                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                        <EdgeManagementResponse>
                                                            <EdgeManagementProduct>
                                                                <EdgeManagementSettings>
                                                                    <TrunkGroupId>SipPeerEMTrunkGroup</TrunkGroupId>
                                                                    <NodeGroupName>East Coast 01</NodeGroupName>
                                                                </EdgeManagementSettings>
                                                            </EdgeManagementProduct>
                                                        </EdgeManagementResponse>
                                        400:
                                            description: |
                                                            Bad Request. Possible errors in response:
                                                            <ul>
                                                               <li>13563 "Sip Peer '544545' account '12346159' and site '483' does not exist"</li>
                                                            </ul>
                                            body: 
                                                application/xml:
                                                    example: |
                                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                        <EdgeManagementResponse>
                                                            <ResponseStatus>
                                                                <ErrorCode>13563</ErrorCode>
                                                                <Description>Sip Peer '544545' account '12346159' and site '483' does not exist</Description>
                                                            </ResponseStatus>
                                                        </EdgeManagementResponse>
                                        404:
                                            description: Not Found - The SBC settings on Sip Peer does not exists
                                            body:
                                                application/xml:
                                                    example: |
                                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                        <EdgeManagementResponse>
                                                            <ResponseStatus>
                                                                <Description>The resource does not exist</Description>
                                                            </ResponseStatus>
                                                        </EdgeManagementResponse>
                                post:
                                    description: |
                                        Add SBC setting to Sip Peer
                                    body:
                                        application/xml:
                                            example: |
                                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                <EdgeManagementProduct>
                                                    <EdgeManagementSettings>
                                                        <TrunkGroupId>SipPeerEMTrunkGroup</TrunkGroupId>
                                                        <NodeGroupName>East Coast 01</NodeGroupName>
                                                    </EdgeManagementSettings>
                                                </EdgeManagementProduct>
                                    responses:
                                        201:
                                            description: SBC setting added
                                            body: 
                                                application/xml:
                                                    example: |
                                                        None
                                        400:
                                            description: |
                                                Bad Request. Possible errors in response:
                                                <ul>
                                                   <li>12041 "EdgeManagement product has not been configured"</li>
                                                </ul>
                                            body:
                                                application/xml:
                                                    example: |
                                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                        <EdgeManagementResponse>
                                                            <ResponseStatus>
                                                                <ErrorCode>12041</ErrorCode>
                                                                <Description>EdgeManagement product has not been configured</Description>
                                                            </ResponseStatus>
                                                        </EdgeManagementResponse>
                                put:
                                    description: |
                                        Update SBC setting to Sip Peer
                                    body:
                                        application/xml:
                                            example: |
                                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                <EdgeManagementProduct>
                                                    <EdgeManagementSettings>
                                                        <TrunkGroupId>SipPeerEMTrunkGroup</TrunkGroupId>
                                                        <NodeGroupName>East Coast 01</NodeGroupName>
                                                    </EdgeManagementSettings>
                                                </EdgeManagementProduct>
                                    responses:
                                        200:
                                            description: SBC setting updated
                                            body:
                                                application/xml:
                                                    example: |
                                                        None
                                        400:
                                            description: |
                                                Bad Request. Possible errors in response:
                                                <ul>
                                                   <li>12041 "EdgeManagement product has not been configured"</li>
                                                </ul>
                                            body:
                                                application/xml:
                                                    example: |
                                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                        <EdgeManagementResponse>
                                                            <ResponseStatus>
                                                                <ErrorCode>12041</ErrorCode>
                                                                <Description>EdgeManagement product has not been configured</Description>
                                                            </ResponseStatus>
                                                        </EdgeManagementResponse>
                                delete:
                                    description: Delete SBC settings from Sip Peer
                                    responses:
                                        200:
                                            description: SBC settings deleted
                                            body:
                                                application/xml:
                                                    example: |
                                                        None
                                        400:
                                            description: |
                                                            Bad Request. Possible errors in response:
                                                            <ul>
                                                               <li>13563 "Sip Peer '544545' account '12346159' and site '483' does not exist"</li>
                                                            </ul>
                                            body:
                                                application/xml:
                                                    example: |
                                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                        <EdgeManagementResponse>
                                                            <ResponseStatus>
                                                                <ErrorCode>13563</ErrorCode>
                                                                <Description>Sip Peer '544545' account '12346159' and site '483' does not exist</Description>
                                                            </ResponseStatus>
                                                        </EdgeManagementResponse>
                            /termination: 
                                description:  |
                                    These API calls are to allow the association of Termination Product Host IP addresses with a SIP Peer,
                                    and to manage the resources and attributes that are contained within the SIP Peer scope
                                get:
                                  description: get all sip peer gateway IPs and subnets
                                  responses:
                                    200:
                                      description: A successful result that contains the response data
                                      body:
                                        application/xml:
                                          example:
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <TerminationResponse>
                                                <TerminationProduct>
                                                    <TerminationHosts>
                                                        <TerminationHost>
                                                            <HostName>188.219.64.2</HostName>
                                                            <Port>0</Port>
                                                            <id>20</id>
                                                        </TerminationHost>
                                                        <TerminationHost>
                                                            <HostName>87.67.71.16/30</HostName>
                                                            <Port>0</Port>
                                                            <id>21</id>
                                                        </TerminationHost>
                                                    </TerminationHosts>
                                                </TerminationProduct>
                                            </TerminationResponse>
                                    500:
                                      body:
                                        application/xml:
                                          example:
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <SipPeerGatewayIpsResponse>
                                                <ResponseStatus>
                                                    <Description>Some error description</Description>
                                                </ResponseStatus>
                                            </SipPeerGatewayIpsResponse>
                                /hosts:
                                    get:
                                        description: get all sip peer gateway IPs and subnets
                                        responses:
                                            200:
                                              description: A successful result that contains the response data
                                              body:
                                                application/xml:
                                                  example:
                                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                    <TerminationHosts>
                                                        <TerminationHost>
                                                            <HostName>212.240.169.208</HostName>
                                                            <Port>0</Port>
                                                            <id>21</id>
                                                        </TerminationHost>
                                                        <TerminationHost>
                                                            <HostName>87.67.71.16/30</HostName>
                                                            <Port>0</Port>
                                                            <id>22</id>
                                                        </TerminationHost>
                                                    </TerminationHosts>
                                    post:
                                      description: post sip peer gateway IP or subnet
                                      body:
                                          application/xml:
                                              example:
                                                  <?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
                                                  <TerminationHost>
                                                    <HostName>251.180.7.30/30</HostName>
                                                    <Port>0</Port>
                                                  </TerminationHost>
                                      responses:
                                          201:
                                              description: sip peer gateway IP has been created
                                              body:
                                                  application/xml:
                                                      example:
                                                          <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                          <SipPeerGatewayIpResponse>
                                                            <SipPeerGatewayIp>
                                                                <HostName>251.180.7.30/30</HostName>
                                                                <Port>0</Port>
                                                                <id>22</id>
                                                            </SipPeerGatewayIp>
                                                          </SipPeerGatewayIpResponse>
                                    /{gatewayId}:
                                        get:
                                            description: get sip peer gateway IP or subnet by id
                                            responses:
                                              200:
                                                description: A successful result that contains the response data
                                                body:
                                                  application/xml:
                                                    example:
                                                      <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                      <SipPeerGatewayIpResponse>
                                                        <SipPeerGatewayIp>
                                                            <HostName>87.67.71.16/30</HostName>
                                                            <Port>0</Port>
                                                            <id>23</id>
                                                        </SipPeerGatewayIp>
                                                      </SipPeerGatewayIpResponse>
                                              404:
                                                  description: sip peer gateway ip was not found
                                                  body:
                                                      application/xml:
                                                          example: |
                                                              None
                                        delete:
                                            description: delete a sip peer gateway ip
                                            responses:
                                                200:
                                                    description: sip peer gateway ip was deleted
                                                    body:
                                                        application/xml:
                                                            example: |
                                                                None
                                                404:
                                                    description: sip peer gateway ip was not found
                                                    body:
                                                        application/xml:
                                                            example: |
                                                                None
                                        /settings:
                                            post:
                                              description: post gateway attribute
                                              body:
                                                  application/xml:
                                                      example:
                                                          <?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
                                                          <TerminationAttribute>
                                                            <type>TRACE</type>
                                                            <value>true</value>
                                                            <profileId>25</profileId>
                                                            <effectiveDate>2014-11-13T17:48:33</effectiveDate>
                                                            <inEffectiveDate>2014-12-13T17:48:33</inEffectiveDate>
                                                          </TerminationAttribute>
                                            get:
                                              description: get all gateway attributes
                                              responses:
                                                200:
                                                  body:
                                                    application/xml:
                                                      example:
                                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                        <SipPeerGatewayAttributesResponse>
                                                            <SipPeerGatewayAttributes>
                                                                <GatewayId>10</GatewayId>
                                                                <GatewayAttributes>
                                                                    <GatewayAttribute>
                                                                        <id>8</id>
                                                                        <type>TRACE</type>
                                                                        <value>true</value>
                                                                        <effectiveDate>2014-11-13T17:48:33</effectiveDate>
                                                                        <inEffectiveDate>2014-12-13T17:48:33</inEffectiveDate>
                                                                    </GatewayAttribute>
                                                                </GatewayAttributes>
                                                            </SipPeerGatewayAttributes>
                                                        </SipPeerGatewayAttributesResponse>
                                            /{attributeId}:
                                                get:
                                                    description: get gateway attribute by id
                                                    responses:
                                                      200:
                                                        body:
                                                          application/xml:
                                                            example:
                                                              <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                              <SipPeerGatewayAttributeResponse>
                                                                <SipPeerGatewayAttribute>
                                                                    <GatewayId>25</GatewayId>
                                                                    <GatewayAttribute>
                                                                        <id>21</id>
                                                                        <type>TRACE</type>
                                                                        <value>true</value>
                                                                        <effectiveDate>2014-11-13T17:48:33</effectiveDate>
                                                                        <inEffectiveDate>2014-12-13T17:48:33</inEffectiveDate>
                                                                    </GatewayAttribute>
                                                                </SipPeerGatewayAttribute>
                                                              </SipPeerGatewayAttributeResponse>
                                                put:
                                                    description: update gateway attribute
                                                    body:
                                                      application/xml:
                                                          example:
                                                              <?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
                                                              <TerminationAttribute>
                                                                <id>22</id>
                                                                <type>TRACE</type>
                                                                <value>false</value>
                                                                <effectiveDate>2014-11-13T17:48:33</effectiveDate>
                                                                <inEffectiveDate>2014-12-13T17:48:33</inEffectiveDate>
                                                              </TerminationAttribute>
                                                delete:
                                                    description: delete gateway attribute
                                                    responses:
                                                        200:
                                                            description: gateway attribute was deleted
                                                            body:
                                                                application/xml:
                                                                    example: |
                                                                        None
                                                        404:
                                                            description: gateway attribute was not found
                                                            body:
                                                                application/xml:
                                                                    example: |
                                                                        None
                            /origination/settings: 
                                get:
                                    description: |
                                        Retrieve origination settings for sippeer
                                    responses:
                                        200:
                                            description: A successful result that contains the response data
                                            body:
                                                application/xml:
                                                    example: |
                                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                        <SipPeerOriginationSettingsResponse>
                                                          <SipPeerOriginationSettings>
                                                            <HttpSettings>
                                                              <VoiceV2ProxyPeerId>500166</VoiceV2ProxyPeerId>
                                                              <HttpVoiceV2AppId>469ebbac-4459-4d98-bc19-a038960e787f</HttpVoiceV2AppId>
                                                            </HttpSettings>
                                                          </SipPeerOriginationSettings>
                                                        </SipPeerOriginationSettingsResponse>
                                post:
                                    description: |
                                        Set sippeer origination settings
                                    body:
                                        application/xml:
                                            example: |
                                                <?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
                                                <SipPeerOriginationSettings>
                                                  <HttpSettings>
                                                    <VoiceV2ProxyPeerId>500166</VoiceV2ProxyPeerId>
                                                    <HttpVoiceV2AppId>469ebbac-4459-4d98-bc19-a038960e787f</HttpVoiceV2AppId>
                                                  </HttpSettings>
                                                </SipPeerOriginationSettings>
                                    responses:
                                        201:
                                            description: setting were successfully added
                                            body:
                                                application/xml:
                                                    example: |
                                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                        <SipPeerOriginationSettingsResponse>
                                                          <SipPeerOriginationSettings>
                                                            <HttpSettings>
                                                              <VoiceV2ProxyPeerId>500166</VoiceV2ProxyPeerId>
                                                              <HttpVoiceV2AppId>469ebbac-4459-4d98-bc19-a038960e787f</HttpVoiceV2AppId>
                                                            </HttpSettings>
                                                          </SipPeerOriginationSettings>
                                                        </SipPeerOriginationSettingsResponse>
                                        400:
                                            description: |
                                                Bad Request. Possible errors in response:
                                                <ul>
                                                   <li>Account level settings don`t exist</li>
                                                </ul>
                                            body:
                                                application/xml:
                                                    example: |
                                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                        <SipPeerSmsFeatureResponse>
                                                            <ResponseStatus>
                                                                <ErrorCode>13609</ErrorCode>
                                                                <Description>Can't create sip peer http protocol sms feature without account level http settings.</Description>
                                                            </ResponseStatus>
                                                        </SipPeerSmsFeatureResponse>
                                put:
                                    description: update origination settings
                                    body:
                                        application/json:
                                            example: |
                                                <?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
                                                <SipPeerOriginationSettings>
                                                  <HttpSettings>
                                                    <VoiceV2ProxyPeerId>500165</VoiceV2ProxyPeerId>
                                                    <HttpVoiceV2AppId>867b923b-8a92-4579-b29b-405f165b8124</HttpVoiceV2AppId>
                                                  </HttpSettings>
                                                </SipPeerOriginationSettings>
                                    responses:
                                        200:
                                            description: settings were successfully updated
                            /messaging/features/sms: 
                                get:
                                    description: |
                                        Retrieve sms feature settings for sippeer
                                    responses:
                                        200:
                                            description: A successful result that contains the response data
                                            body:
                                                application/xml:
                                                    example: |
                                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                        <SipPeerSmsFeatureResponse>
                                                            <SipPeerSmsFeature>
                                                                <SipPeerSmsFeatureSettings>
                                                                    <TollFree>true</TollFree>
                                                                    <ShortCode>true</ShortCode>
                                                                    <Protocol>SMPP</Protocol>
                                                                    <Zone1>true</Zone1>
                                                                    <Zone2>true</Zone2>
                                                                    <Zone3>true</Zone3>
                                                                    <Zone4>true</Zone4>
                                                                    <Zone5>true</Zone5>
                                                                </SipPeerSmsFeatureSettings>
                                                                <SmppHosts>
                                                                    <SmppHost>
                                                                        <HostName>54.10.88.146</HostName>
                                                                        <HostId>18</HostId>
                                                                        <Priority>0</Priority>
                                                                        <ConnectionType>RECEIVER_ONLY</ConnectionType>
                                                                    </SmppHost>
                                                                </SmppHosts>
                                                            </SipPeerSmsFeature>
                                                        </SipPeerSmsFeatureResponse>
                                post:
                                    description: |
                                        Set sms feature settings
                                    body:
                                        application/xml:
                                            example: |
                                                <?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
                                                <SipPeerSmsFeature>
                                                    <SipPeerSmsFeatureSettings>
                                                        <TollFree>true</TollFree>
                                                        <ShortCode>true</ShortCode>
                                                        <Protocol>SMPP</Protocol>
                                                        <Zone1>true</Zone1>
                                                        <Zone2>true</Zone2>
                                                        <Zone3>true</Zone3>
                                                        <Zone4>true</Zone4>
                                                        <Zone5>true</Zone5>
                                                    </SipPeerSmsFeatureSettings>
                                                    <SmppHosts>
                                                        <SmppHost>
                                                            <HostName>54.10.88.146</HostName>
                                                            <Priority>0</Priority>
                                                            <ConnectionType>RECEIVER_ONLY</ConnectionType>
                                                        </SmppHost>
                                                    </SmppHosts>
                                                </SipPeerSmsFeature>
                                    responses:
                                        201:
                                            description: setting were successfully added
                                            body:
                                                application/xml:
                                                    example: |
                                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                        <SipPeerSmsFeatureResponse>
                                                            <SipPeerSmsFeature>
                                                                <SipPeerSmsFeatureSettings>
                                                                    <TollFree>true</TollFree>
                                                                    <ShortCode>true</ShortCode>
                                                                    <Protocol>SMPP</Protocol>
                                                                    <Zone1>true</Zone1>
                                                                    <Zone2>true</Zone2>
                                                                    <Zone3>true</Zone3>
                                                                    <Zone4>true</Zone4>
                                                                    <Zone5>true</Zone5>
                                                                </SipPeerSmsFeatureSettings>
                                                                <SmppHosts>
                                                                    <SmppHost>
                                                                        <HostName>54.10.88.146</HostName>
                                                                        <HostId>18</HostId>
                                                                        <Priority>0</Priority>
                                                                        <ConnectionType>RECEIVER_ONLY</ConnectionType>
                                                                    </SmppHost>
                                                                </SmppHosts>
                                                            </SipPeerSmsFeature>
                                                        </SipPeerSmsFeatureResponse>
                                        400:
                                            description: |
                                                Bad Request. Possible errors in response:
                                                <ul>
                                                   <li>Account level settings don`t exist</li>
                                                </ul>
                                            body:
                                                application/xml:
                                                    example: |
                                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                        <SipPeerSmsFeatureResponse>
                                                            <ResponseStatus>
                                                                <ErrorCode>13609</ErrorCode>
                                                                <Description>Can't create sip peer http protocol sms feature without account level http settings.</Description>
                                                            </ResponseStatus>
                                                        </SipPeerSmsFeatureResponse>
                                put:
                                    description: update sms feature settings
                                    body:
                                        application/json:
                                            example: |
                                                <?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
                                                <SipPeerSmsFeature>
                                                    <SipPeerSmsFeatureSettings>
                                                        <TollFree>false</TollFree>
                                                        <ShortCode>true</ShortCode>
                                                        <Protocol>SMPP</Protocol>
                                                        <Zone1>true</Zone1>
                                                        <Zone2>false</Zone2>
                                                        <Zone3>false</Zone3>
                                                        <Zone4>false</Zone4>
                                                        <Zone5>false</Zone5>
                                                    </SipPeerSmsFeatureSettings>
                                                    <SmppHosts>
                                                        <SmppHost>
                                                            <HostName>235.133.23.79</HostName>
                                                            <HostId>6</HostId>
                                                            <Priority>0</Priority>
                                                            <ConnectionType>TRANSCEIVER</ConnectionType>
                                                        </SmppHost>
                                                    </SmppHosts>
                                                </SipPeerSmsFeature>
                                    responses:
                                        200:
                                            description: settings were successfully updated
                                delete:
                                    description: delete sms settings
                                    responses:
                                        200:
                                            description: settings were deleted
                                        404:
                                            description: sms settings were not found
                                /smpp/hosts: 
                                    get:
                                        description: |
                                            Retrieve smpp hosts
                                        responses:
                                            200:
                                                description: A successful result that contains the response data
                                                body:
                                                    application/xml:
                                                        example: |
                                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                            <SmsSmppHostsResponse>
                                                              <SmsHosts>
                                                                <SmsHost>
                                                                  <HostName>36.162.214.238</HostName>
                                                                  <HostId>7</HostId>
                                                                  <Priority>0</Priority>
                                                                  <ConnectionType>RECEIVER_ONLY</ConnectionType>
                                                                </SmsHost>
                                                                <SmsHost>
                                                                  <HostName>249.34.239.161</HostName>
                                                                  <HostId>8</HostId>
                                                                  <Priority>0</Priority>
                                                                  <ConnectionType>RECEIVER_ONLY</ConnectionType>
                                                                </SmsHost>
                                                                <SmsHost>
                                                                  <HostName>3.196.122.33</HostName>
                                                                  <HostId>9</HostId>
                                                                  <Priority>0</Priority>
                                                                  <ConnectionType>RECEIVER_ONLY</ConnectionType>
                                                                </SmsHost>
                                                              </SmsHosts>
                                                            </SmsSmppHostsResponse>
                                    post:
                                        description: |
                                            Add smpp host
                                        body:
                                            application/xml:
                                                example: |
                                                    <?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
                                                    <SmsHost>
                                                      <HostName>3.196.122.33</HostName>
                                                      <Priority>0</Priority>
                                                      <ConnectionType>RECEIVER_ONLY</ConnectionType>
                                                    </SmsHost>
                                        responses:
                                            201:
                                                description: host was successfully added
                                                body:
                                                    application/xml:
                                                        example: |
                                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                            <SmsSmppHostResponse>
                                                              <SmsHost>
                                                                <HostName>3.196.122.33</HostName>
                                                                <HostId>9</HostId>
                                                                <Priority>0</Priority>
                                                                <ConnectionType>RECEIVER_ONLY</ConnectionType>
                                                              </SmsHost>
                                                            </SmsSmppHostResponse>
                                    /{id}: 
                                        get:
                                            description: |
                                              Retrieve smpp host
                                            responses:
                                              200:
                                                description: A successful result that contains the response data
                                                body:
                                                  application/xml:
                                                    example: |
                                                      <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                      <SmsSmppHostResponse>
                                                          <SmsHost>
                                                              <HostName>249.34.239.161</HostName>
                                                              <HostId>8</HostId>
                                                              <Priority>0</Priority>
                                                              <ConnectionType>SENDER_ONLY</ConnectionType>
                                                          </SmsHost>
                                                      </SmsSmppHostResponse>
                                        put:
                                            description:  |
                                              update smpp host
                                            body:
                                              application/json:
                                                example: |
                                                  <?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
                                                  <SmsHost>
                                                    <HostName>149.16.232.238</HostName>
                                                    <HostId>8</HostId>
                                                    <Priority>0</Priority>
                                                    <ConnectionType>SENDER_ONLY</ConnectionType>
                                                  </SmsHost>
                                            responses:
                                              200:
                                                description: host was successfully updated
                                              400:
                                                  body:
                                                    application/json:
                                                      example: |
                                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                        <SmsSmppHostResponse>
                                                          <ResponseStatus>
                                                            <Description>Host ip or port can't be changed</Description>
                                                          </ResponseStatus>
                                                        </SmsSmppHostResponse>
                                        delete:
                                          description: delete smpp host
                                          responses:
                                            200:
                                              description: smpp host was deleted
                                            404:
                                              description: smpp host was not found
                            /messaging/features/mms: 
                                get:
                                    description: |
                                        Retrieve mms feature settings for sippeer
                                    responses:
                                        200:
                                            description: A successful result that contains the response data
                                            body:
                                                application/xml:
                                                    example: |
                                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                        <MmsFeatureResponse>
                                                          <MmsFeature>
                                                            <MmsSettings>
                                                              <protocol>HTTP</protocol>
                                                            </MmsSettings>
                                                            <Protocols>
                                                              <HTTP>
                                                                <HttpSettings>
                                                                  <proxyPeerId>500017</proxyPeerId>
                                                                </HttpSettings>
                                                              </HTTP>
                                                            </Protocols>
                                                          </MmsFeature>
                                                        </MmsFeatureResponse>
                                post:
                                    description: |
                                        Set mms feature settings
                                    body:
                                        application/xml:
                                            example: |
                                                <?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
                                                <MmsFeature>
                                                  <MmsSettings>
                                                    <protocol>MM4</protocol>
                                                  </MmsSettings>
                                                  <Protocols>
                                                    <MM4>
                                                      <MmsMM4TermHosts>
                                                        <TermHosts>
                                                          <TermHost>
                                                            <HostName>206.107.248.58</HostName>
                                                          </TermHost>
                                                        </TermHosts>
                                                      </MmsMM4TermHosts>
                                                      <MmsMM4OrigHosts>
                                                        <OrigHosts>
                                                          <OrigHost>
                                                            <HostName>30.239.72.55</HostName>
                                                            <Port>8726</Port>
                                                            <Priority>0</Priority>
                                                          </OrigHost>
                                                        </OrigHosts>
                                                      </MmsMM4OrigHosts>
                                                    </MM4>
                                                  </Protocols>
                                                </MmsFeature>
                                    responses:
                                        201:
                                            description: setting was successfully added
                                            body:
                                                application/xml:
                                                    example: |
                                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                        <MmsFeatureResponse>
                                                          <MmsFeature>
                                                            <MmsSettings>
                                                              <protocol>MM4</protocol>
                                                            </MmsSettings>
                                                            <Protocols>
                                                              <MM4>
                                                                <MmsMM4TermHosts>
                                                                  <TermHosts>
                                                                    <TermHost>
                                                                      <HostId>1</HostId>
                                                                      <HostName>206.107.248.58</HostName>
                                                                    </TermHost>
                                                                  </TermHosts>
                                                                </MmsMM4TermHosts>
                                                                <MmsMM4OrigHosts>
                                                                  <OrigHosts>
                                                                    <OrigHost>
                                                                      <HostName>30.239.72.55</HostName>
                                                                      <Port>8726</Port>
                                                                      <HostId>1</HostId>
                                                                      <Priority>0</Priority>
                                                                    </OrigHost>
                                                                  </OrigHosts>
                                                                </MmsMM4OrigHosts>
                                                              </MM4>
                                                            </Protocols>
                                                          </MmsFeature>
                                                        </MmsFeatureResponse>
                                        400:
                                            description: |
                                                Bad Request. Possible errors in response:
                                                <ul>
                                                   <li>Pauload contains two protocol</li>
                                                </ul>
                                            body:
                                                application/xml:
                                                    example: |
                                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                        <MmsFeatureResponse>
                                                          <ResponseStatus>
                                                            <ErrorCode>13606</ErrorCode>
                                                            <Description>Messaging feature may have only one protocol assigned.</Description>
                                                          </ResponseStatus>
                                                        </MmsFeatureResponse>
                                put:
                                    description: update mms feature settings
                                    body:
                                        application/json:
                                            example: |
                                                <?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
                                                <MmsFeature>
                                                  <MmsSettings>
                                                    <protocol>HTTP</protocol>
                                                  </MmsSettings>
                                                  <Protocols>
                                                    <HTTP>
                                                      <HttpSettings>
                                                        <proxyPeerId>500017</proxyPeerId>
                                                      </HttpSettings>
                                                    </HTTP>
                                                  </Protocols>
                                                </MmsFeature>
                                    responses:
                                        200:
                                            description: settings were successfully updated
                                delete:
                                    description: delete mms settings
                                    responses:
                                        200:
                                            description: settings were deleted
                                        404:
                                            description: mms settings were not found
                                /settings:
                                  get:
                                      description: |
                                          Retrieve mms feature settings for sippeer
                                      responses:
                                          200:
                                              description: A successful result that contains the response data
                                              body:
                                                  application/xml:
                                                      example: |
                                                          <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                          <MmsFeatureMmsSettingsResponse>
                                                            <MmsSettings>
                                                              <protocol>MM4</protocol>
                                                            </MmsSettings>
                                                          </MmsFeatureMmsSettingsResponse>
                            /messaging/applicationSettings: 
                                get:
                                    description: |
                                        Retrieve sipper application settings
                                    responses:
                                        200:
                                            description: A successful result that contains the response data
                                            body:
                                                application/xml:
                                                    example: |
                                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                        <ApplicationsSettingsResponse>
                                                          <ApplicationsSettings>
                                                            <HttpMessagingV2AppId>4a4ca6c1-156b-4fca-84e9-34e35e2afc32</HttpMessagingV2AppId>
                                                          </ApplicationsSettings>
                                                        </ApplicationsSettingsResponse>
                                put:
                                    description: create/update/delete application settings for sippeer (use value 'REMOVE' to unassing application)
                                    body:
                                        application/json:
                                            example: |
                                                <?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
                                                <ApplicationsSettings>
                                                  <HttpMessagingV2AppId>c3b0f805-06ab-4d36-8bf4-8baff7623398</HttpMessagingV2AppId>
                                                </ApplicationsSettings>
                                    responses:
                                        200:
                                            description: settings were successfully created/updated
                                            body:
                                              application/xml:
                                                  example: |
                                                      <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                      <ApplicationsSettingsResponse>
                                                        <ApplicationsSettings>
                                                          <HttpMessagingV2AppId>c3b0f805-06ab-4d36-8bf4-8baff7623398</HttpMessagingV2AppId>
                                                        </ApplicationsSettings>
                                                      </ApplicationsSettingsResponse>
                /partnerpricing: 
                    description: |
                        The site-level partner pricing API provides resellers the ability to override account-level details regarding the marked-up prices they charge
                        their own customers for the services Bandwidth provides.  This information is required to calculate the federal, state, and local taxes on behalf
                        of the reseller, and create an invoice resellers can pass along to their customers.<br /><br />
                        When present, site-level partner pricing information allows site-specific partner pricing values to be configured for a reseller, overriding
                        account-level pricing values.  When a zero value is passed in, the account-level partner pricing value is used instead.
                    get:
                        description:
                            Retrieve site-level partner pricing information.
                        responses:
                            200:
                                description:
                                    An HTTP 200 (OK) is returned when the call to retrieve partner pricing details was successful.
                                body: 
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <PartnerPricingResponse>
                                                <PartnerPricing>
                                                    <Seat>
                                                        <SeatActivation>0.05</SeatActivation>
                                                        <SeatRecurring>
                                                            <UC250>0.02</UC250>
                                                            <UC500>0.03</UC500>
                                                            <UC1000>0.04</UC1000>
                                                        </SeatRecurring>
                                                    </Seat>
                                                    <TollFree>
                                                        <Activation>0.05</Activation>
                                                        <Recurring>0.06</Recurring>
                                                        <PerMinute>0.07</PerMinute>
                                                    </TollFree>
                                                    <E911>
                                                        <Activation>0.08</Activation>
                                                        <Recurring>0.09</Recurring>
                                                    </E911>
                                                    <N11Cost>1.00</N11Cost>
                                                    <CNAM>
                                                        <Activation>1.01</Activation>
                                                        <Recurring>1.02</Recurring>
                                                    </CNAM>
                                                    <DLDA>
                                                        <Activation>1.03</Activation>
                                                        <Recurring>1.04</Recurring>
                                                    </DLDA>
                                                    <OveragePerMinute>1.05</OveragePerMinute>
                                                    <Port>1.06</Port>
                                                    <Disconnection>1.07</Disconnection>
                                                    <TrunkActivation>1.08</TrunkActivation>
                                                    <CloudTrunkRecurring>1.09</CloudTrunkRecurring>
                                                    <PremiseTrunkRecurring>2.00</PremiseTrunkRecurring>
                                                    <Number>
                                                        <Activation>2.01</Activation>
                                                        <Recurring>2.02</Recurring>
                                                    </Number>
                                                    <Countries>
                                                        <Country>
                                                            <Name>Canada</Name>
                                                            <PerMinute>2.14</PerMinute>
                                                        </Country>
                                                        <Country>
                                                            <Name>United States</Name>
                                                            <PerMinute>2.13</PerMinute>
                                                        </Country>
                                                    </Countries>
                                                </PartnerPricing>
                                            </PartnerPricingResponse>
                            400:
                                description: |
                                    An HTTP 400 (BAD REQUEST) is returned if request is invalid, e.g. if the account is one for which partner pricing information is not applicable.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <PartnerPricingResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12017</ErrorCode>
                                                    <Description>Account '1234' does not have product 'UcTrunking'</Description>
                                                </ResponseStatus>
                                            </PartnerPricingResponse>
                    put:
                        description: |
                            Updates the partner pricing information for the site with the values provided.
                        body:
                            application/xml:
                                example: |
                                    <PartnerPricing>
                                        <Seat>
                                            <SeatActivation>0.05</SeatActivation>
                                            <SeatRecurring>
                                                <UC250>0.02</UC250>
                                                <UC500>0.03</UC500>
                                                <UC1000>0.04</UC1000>
                                            </SeatRecurring>
                                        </Seat>
                                        <TollFree>
                                            <Activation>0.05</Activation>
                                            <Recurring>0.06</Recurring>
                                            <PerMinute>0.07</PerMinute>
                                        </TollFree>
                                        <E911>
                                            <Activation>0.08</Activation>
                                            <Recurring>0.09</Recurring>
                                        </E911>
                                        <N11Cost>1.00</N11Cost>
                                        <CNAM>
                                            <Activation>1.01</Activation>
                                            <Recurring>1.02</Recurring>
                                        </CNAM>
                                        <DLDA>
                                            <Activation>1.03</Activation>
                                            <Recurring>1.04</Recurring>
                                        </DLDA>
                                        <OveragePerMinute>1.05</OveragePerMinute>
                                        <Port>1.06</Port>
                                        <Disconnection>1.07</Disconnection>
                                        <TrunkActivation>1.08</TrunkActivation>
                                        <CloudTrunkRecurring>1.09</CloudTrunkRecurring>
                                        <PremiseTrunkRecurring>2.00</PremiseTrunkRecurring>
                                        <Number>
                                            <Activation>2.01</Activation>
                                            <Recurring>2.02</Recurring>
                                        </Number>
                                        <Countries>
                                            <Country>
                                                <Name>Canada</Name>
                                                <PerMinute>2.14</PerMinute>
                                            </Country>
                                            <Country>
                                                <Name>United States</Name>
                                                <PerMinute>2.13</PerMinute>
                                            </Country>
                                        </Countries>
                                    </PartnerPricing>
                        responses:
                            200:
                                description:
                                    An HTTP 200 (OK) is returned when the call to update partner pricing details was successful.
                            400:
                                description:
                                    An HTTP 400 (BAD REQUEST) is returned if request is invalid, e.g. if the account is one for which partner pricing information is not applicable.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <PartnerPricingResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12017</ErrorCode>
                                                    <Description>Account '1234' does not have product 'UcTrunking'</Description>
                                                </ResponseStatus>
                                            </PartnerPricingResponse>
                /inserviceNumbers: 
                    description: Retrieves all the telephone numbers currently in service for the given site.
                    get:
                        description: |
                            Retrieves all the telephone numbers currently in service for the given site.
                            <br>There are multiple parameters to search and sort the in-service numbers:
                            <ul>
                                <li>LATA</li>
                                <li>Tier</li>
                                <li>Rate center</li>
                                <li>Area code</li>
                                <li>Npa-Nxx</li>
                                <li>State</li>
                                <li>City</li>
                                <li>Start Date</li>
                                <li>End date</li>
                            </ul>
                        queryParameters:
                            page:
                                description: The first in-service number displayed on the page. "1" is used as a convention for the first number on the list.
                                type: string
                                default: 1
                                example: 4352721845
                            size:
                                description: The count of in-service numbers displayed on the page.
                                type: integer
                                example: 30
                                default: 300
                            lata:
                                description: A maximum five-digit number.
                                type: integer
                                example: 371
                            tier:
                                type: integer
                                example: 0
                            rateCenter:
                                type: string
                                example: ST GEORGE
                            city:
                                type: string
                                example: Raleigh
                            state:
                                description: A two-letter representation of the State
                                type: string
                                example: NC
                            areaCode:
                                type: string
                                example: 435
                            npaNxx:
                                type: string
                                example: 435215
                            npaNxxx:
                                type: string
                                example: 4352154
                            startdate:
                                description: startdate and enddate must be together
                                type: date 
                                example: 12-01-01
                            enddate:
                                description: startdate and enddate must be together
                                type: date
                                example: 14-01-01
                        responses:
                            200:
                                description: the numbers have been successfully retrieved
                                body:
                                    application/xml:
                                        example: |
                                            <TNs>
                                                <TotalCount>54</TotalCount>
                                                <Links>
                                                    <first>
                                                        <!---- SNIP ---->
                                                    </first>
                                                    <next>
                                                        <!---- SNIP ---->
                                                    </next>
                                                </Links>
                                                <TelephoneNumbers>
                                                    <Count>3</Count>
                                                    <TelephoneNumber>4352154855</TelephoneNumber>
                                                                <!---- SNIP ---->
                                                    <TelephoneNumber>4352161523</TelephoneNumber>
                                                </TelephoneNumbers>
                                            </TNs>
                /orders: 
                    description: The "orders" resource interacts with the orders assigned to a particular site of a particular account. 
                    get:
                        description: The GET method retrieves all the orders associated with the given site.
                        queryParameters:
                            size:
                                description: Sets the amount of responses per page.
                                example: 30
                                required: true
                                type: integer
                            page:
                                description: The first orders ID to show on the page. "1" is used as a convention for the first page.
                                type: integer
                                example: 1
                                required: true
                        responses:
                            200:
                                body:
                                    application/xml:
                                        example: |
                                            <ResponseSelectWrapper>
                                                <ListOrderIdUserIdDate>
                                                    <TotalCount>47</TotalCount>
                                                    <Links>
                                                        <first>
                                                            Link=<http://api.qa.inetwork.com/iris/accounts/12346099/sites/743/orders?page=1&size=30>;rel="first";
                                                        </first>
                                                        <next>
                                                            Link=<http://api.qa.inetwork.com/iris/accounts/12346099/sites/743/orders?page=fa7bc01a-cb4d-4eae-9621-560020f45105&size=30>;rel="next";
                                                        </next>
                                                    </Links>
                                                    <OrderIdUserIdDate>
                                                        <CountOfTNs>1</CountOfTNs>
                                                        <userId>jbm</userId>
                                                        <lastModifiedDate>2014-01-06T19:09:44.027Z</lastModifiedDate>
                                                        <OrderType>new_number</OrderType>
                                                        <OrderDate>2014-01-06T19:09:43.695Z</OrderDate>
                                                        <orderId>13c97416-9eee-4da3-aff8-ba85d1297ef2</orderId>
                                                        <OrderStatus>COMPLETE</OrderStatus>
                                                        <TelephoneNumberDetails>
                                                            <States>
                                                                <StateWithCount>
                                                                    <State>VA</State>
                                                                    <Count>1</Count>
                                                                </StateWithCount>
                                                            </States>
                                                            <RateCenters>
                                                                <RateCenterWithCount>
                                                                    <Count>1</Count>
                                                                    <RateCenter>GLOUCESTER</RateCenter>
                                                                </RateCenterWithCount>
                                                            </RateCenters>
                                                            <Cities>
                                                                <CityWithCount>
                                                                    <City>GLOUCESTER</City>
                                                                    <Count>1</Count>
                                                                </CityWithCount>
                                                            </Cities>
                                                            <Tiers>
                                                                <TierWithCount>
                                                                    <Tier>0</Tier>
                                                                    <Count>1</Count>
                                                                </TierWithCount>
                                                            </Tiers>
                                                            <Vendors>
                                                                <VendorWithCount>
                                                                    <VendorId>49</VendorId>
                                                                    <VendorName>Bandwidth CLEC</VendorName>
                                                                    <Count>1</Count>
                                                                </VendorWithCount>
                                                            </Vendors>
                                                        </TelephoneNumberDetails>
                                                    </OrderIdUserIdDate>
                                                </ListOrderIdUserIdDate>
                                            </ResponseSelectWrapper>
                            404:
                                description: |
                                    Orders cannot be found for that site. Possible explanations:
                                    <ul>
                                        <li>There are no orders associated with that site.</li>
                                        <li>The given parameters are invalid.</li>
                                    </ul>
                                body:
                                    application/xml:
                                        example:
                                            <Links>
                                                <first>
                                                    Link=<http://api.qa.inetwork.com/iris/accounts/12346099/sites/3013/orders?page=1&size=300>;rel="first";
                                                </first>
                                            </Links>
                    /{orderid}: 
                        description: The "order id" resource interacts with specific orders from an account's site. 
                        get:
                            responses:
                                200:
                                    body:
                                        application/xml:
                                            example:
                                                <OrderResponse>
                                                    <CompletedQuantity>1</CompletedQuantity>
                                                    <CreatedByUser>jbm</CreatedByUser>
                                                    <LastModifiedDate>2014-01-06T19:09:44.027Z</LastModifiedDate>
                                                    <OrderCompleteDate>2014-01-06T19:09:44.041Z</OrderCompleteDate>
                                                    <Order>
                                                        <CustomerOrderId>123456789</CustomerOrderId>
                                                        <Name>Area Code Order</Name>
                                                        <OrderCreateDate>2014-01-06T19:09:43.695Z</OrderCreateDate>
                                                        <PeerId>303716</PeerId>
                                                        <siteId>743</siteId>
                                                        <BackOrderRequested>false</BackOrderRequested>
                                                        <AreaCodeSearchAndOrderType>
                                                            <AreaCode>804</AreaCode>
                                                            <Quantity>1</Quantity>
                                                        </AreaCodeSearchAndOrderType>
                                                        <PartialAllowed>true</PartialAllowed>
                                                        <SiteId>743</SiteId>
                                                    </Order>
                                                    <OrderStatus>COMPLETE</OrderStatus>
                                                    <CompletedNumbers>
                                                        <TelephoneNumber>
                                                            <FullNumber>8042105666</FullNumber>
                                                        </TelephoneNumber>
                                                    </CompletedNumbers>
                                                    <FailedQuantity>0</FailedQuantity>
                                                </OrderResponse>
                        /tns: 
                            description: Retrieves the Telephone Numbers associated by the given order ID
                            get:
                                description: Retrieves the Telephone Numbers associated by the given order ID
                                responses:
                                    200:
                                        body:
                                            application/xml:
                                                example: |
                                                    <TelephoneNumbers>
                                                        <Count>1</Count>
                                                        <TelephoneNumber>8042105666</TelephoneNumber>
                                                    </TelephoneNumbers>
                /portins: 
                    description: Retrieves the port-in requests for the given site ID.
                    get:
                        description: Retrieves the port-in requests for the given site ID.
                        queryParameters:
                            page:
                                description: The port-in ID of the first order of the page. "1" is used as a convention for the first port-in in the site ID.
                                type: string
                                required: true
                                default: 1
                                example: ca8065d1-ec1a-43da-af40-1dcee43becb5
                            size:
                                description: The number of port-ins retrieved. 
                                type: integer
                                required: true
                                default: 300
                                example: 30
                            status:
                                description: Displays the port-ins with the given status.
                                type: string
                                example: completed
                        responses:
                            200:
                                description: The port-ins have been successfully retrieved.
                                body:
                                    application/xml:
                                        example: |
                                            <LNPResponseWrapper>
                                                <TotalCount>7</TotalCount>
                                                <Links>
                                                    <first>
                                                        <! --- SNIP --- >
                                                    </first>
                                                    <next>
                                                        <! --- SNIP --- >
                                                    </next>
                                                </Links>
                                                <lnpPortInfoForGivenStatus>
                                                    <CountOfTNs>1</CountOfTNs>
                                                    <userId>jbm</userId>
                                                    <OrderId>ca8065d1-ec1a-43da-af40-1dcee43becb5</OrderId>
                                                    <OrderType>port_in</OrderType>
                                                    <BillingTelephoneNumber>9192803466</BillingTelephoneNumber>
                                                    <lastModifiedDate>2014-05-20T14:43:19.222Z</lastModifiedDate>
                                                    <LNPLosingCarrierId>1537</LNPLosingCarrierId>
                                                    <LNPLosingCarrierName>Mock Carrier</LNPLosingCarrierName>
                                                    <OrderDate>2014-05-20T14:43:32.828Z</OrderDate>
                                                    <ProcessingStatus>CANCELLED</ProcessingStatus>
                                                    <RequestedFOCDate>2015-05-15T20:00:00.000Z</RequestedFOCDate>
                                                    <VendorId>49</VendorId>
                                                    <VendorName>Bandwidth CLEC</VendorName>
                                                </lnpPortInfoForGivenStatus>
                                            </LNPResponseWrapper>
                /tftotals: 
                    description: Retrieves the total count of Toll-Free Telephone Numbers for the given site.
                    get:
                        description: Retrieves the total count of Toll-Free Telephone Numbers for the given site.
                        responses:
                            200:
                                body:
                                    application/xml:
                                        example: |
                                            <SipPeerTollFreeTotalsResponse>
                                                <TollFreeTotals>
                                                    <TotalCount>0</TotalCount>
                                                </TollFreeTotals>
                                            </SipPeerTollFreeTotalsResponse>
                /totaltns: 
                    get:
                        description: Retrieve count of Telephone numbers for the indicated site
                        responses:
                            200:
                                description: The total count of Telephone Numbers associated with the site.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <SiteTNsResponse>
                                                <SiteTNs>
                                                    <TotalCount>26</TotalCount>
                                                </SiteTNs>
                                            </SiteTNsResponse>
                /bdrsummary: 
                    description: |
                        The site-level BDR Summary API provides resellers the ability to collect, from Iris, a complete set of usage information aggregated at the site
                        level for the purpose of facilitating the reseller's customer billing efforts.
                    get:
                        description:
                            Retrieve site-level BDR summary.
                        queryParameters:
                            startDate:
                                description: Start of date range (inclusive) for the data requested.  Must fall before endDate with a date range of no more than 32 days.
                                type: string
                                example: 2013-11-01
                                required: true
                            endDate:
                                description: End of date range (inclusive) for the data requested.  Must be after startDate with a date range of no more than 32 days.
                                type: string
                                example: 2013-12-01
                                required: true
                        responses:
                            200:
                                description: |
                                    An HTTP 200 (OK) is returned when the call to retrieve the BDR Summary was successful.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <BdrSummaryResponse>
                                                <BdrSummary>
                                                    <DateRange>
                                                        <StartDate>2013-01-01</StartDate>
                                                        <EndDate>2013-02-01</EndDate>
                                                    </DateRange>
                                                    <AllowedUsage>0</AllowedUsage>
                                                    <ExcessMinutes>0</ExcessMinutes>
                                                    <Seats>182</Seats>
                                                    <TollFreeNumbers>1</TollFreeNumbers>
                                                    <Calls>
                                                        <Domestic>0</Domestic>
                                                        <E911>0</E911>
                                                        <International>0</International>
                                                        <N11>0</N11>
                                                        <TollFree>0</TollFree>
                                                    </Calls>
                                                    <Minutes>
                                                        <Domestic>0</Domestic>
                                                        <E911>0</E911>
                                                        <International>0</International>
                                                        <N11>0</N11>
                                                        <TollFree>0</TollFree>
                                                    </Minutes>
                                                </BdrSummary>
                                            </BdrSummaryResponse>
                            400:
                                description: |
                                    An HTTP 400 (BAD REQUEST) is returned if request is invalid, e.g. if the account is not a UC Trunking account.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <BdrSummaryResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12017</ErrorCode>
                                                    <Description>Account '1' does not have product 'UcTrunking'</Description>
                                                </ResponseStatus>
                                            </BdrSummaryResponse>
                /totalSeats: 
                    description: |
                        Retrieves the total number of seats for an site ID. <strong>Note: </strong> This option is only available for accounts that have UC Trunking.
                    get:
                        description: Retrieves the total number of seats.
                        responses:
                            200:
                                description: The total number of seats has been successfully retrieved.
                                body:
                                    application/xml:
                                        example: |
                                            <AccountTotalSeatsResponse>
                                                <UcTrunkingSeats>
                                                    <TotalCount>16</TotalCount>
                                                </UcTrunkingSeats>
                                            </AccountTotalSeatsResponse>
                            400:
                                description: The account ID given does not have UC Trunking associated with it.
                                body:
                                    application/xml:
                                        example: |
                                            <AccountTotalSeatsResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12017</ErrorCode>
                                                    <Description>Account '12346099' does not have product 'UcTrunking'</Description>
                                                </ResponseStatus>
                                            </AccountTotalSeatsResponse>
                /billingId: 
                    description: Access and modify the current billing ID of a site.
                    get:
                        description: Retrieves the current billing ID of a site.
                        responses:
                            200:
                                description: site id successfully retrieved
                                body: 
                                    application/xml:
                                        example: |
                                            <SiteBillingIdResponse>
                                                <BillingId>
                                                    <IdValue>true</IdValue>
                                                </BillingId>
                                            </SiteBillingIdResponse>
                    put:
                        description: Modifies the billing ID of a site.
                        body:
                            application/xml:
                                example:
                                    <?xml version="1.0" ?>
                                    <BillingId>
                                        <IdValue>false</IdValue>
                                    </BillingId>
                        responses:
                            200:
                                description: The site's billing ID has been successfully updated.
                            400:
                                description: The request to modify the site's billing ID was invalid.
                                body:
                                    application/xml:
                                        example:
                                            <?xml version="1.0" ?>
                                            <SiteBillingIdResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12632</ErrorCode>
                                                    <Description>Invalid BillingId->IdValue (expected numeric value).</Description>
                                                </ResponseStatus>
                                            </SiteBillingIdResponse>
                /contract: 
                    description: Access and modify the current contract of a site.
                    get:
                        description: Retrieves the current billing ID of a site.
                        responses:
                            200:
                                description: contract successfully retrieved
                                body: 
                                    application/xml:
                                        example: |
                                            <SiteContractResponse>
                                                <Contract>
                                                    <SalesRepresentative>
                                                        <Id>12345</Id>
                                                        <FirstName>John</FirstName>
                                                        <LastName>Doe</LastName>
                                                        <Email>noreply@bandwidth.com</Email>
                                                        <PhoneNumber>9195555555</PhoneNumber>
                                                    </SalesRepresentative>
                                                    <ContactPerson>
                                                        <FirstName>Jane</FirstName>
                                                        <LastName>Doe</LastName>
                                                        <Email>jbs@bandwidth.com</Email>
                                                        <PhoneNumber>9195555555</PhoneNumber>
                                                    </ContactPerson>
                                                </Contract>
                                            </SiteContractResponse>
                            404:
                                description: the billing ID does not exist
                                body:
                                    application/xml:
                                        example: |
                                            <SiteContractResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12057</ErrorCode>
                                                    <Description>Contract for site id '332' does not exist</Description>
                                                </ResponseStatus>
                                            </SiteContractResponse>
                    put:
                        description: Updates the contract of a site.
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" ?>
                                    <Contract>
                                        <ContactPerson>
                                            <FirstName>Jane</FirstName>
                                            <LastName>Doe</LastName>
                                            <Email>jbs@bandwidth.com</Email>
                                            <PhoneNumber>9195555555</PhoneNumber>
                                        </ContactPerson>
                                        <SalesRepresentative>
                                            <Id>12345</Id>
                                            <FirstName>John</FirstName>
                                            <LastName>Doe</LastName>
                                            <Email>noreply@bandwidth.com</Email>
                                            <PhoneNumber>9195555555</PhoneNumber>
                                        </SalesRepresentative>
                                    </Contract>
                        responses:
                            200:
                                description: 
                                    An HTTP 200 (OK) is returned if the site's contract has been successfully updated.
                            400:
                                description: 
                                    An HTTP 400 (BAD REQUEST) is returned if the request to modify the site's contract was invalid, e.g. the Contact Person is omitted.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" ?>
                                            <SiteContractResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12051</ErrorCode>
                                                    <Description>The following fields are required for Agent accounts: ContactPerson->Email</Description>
                                                </ResponseStatus>
                                            </SiteContractResponse>
                    delete:
                        description: Deletes the contract from a locked site.
                        responses:
                            200:
                                description: 
                                    An HTTP 200 (OK) is returned if the site's contract has been successfully deleted.
                            404:
                                description: 
                                    An HTTP 404 (NOT FOUND) is returned if the site's contract does not exist
                            408:
                                description: 
                                    An HTTP 408 (CONFLICT) is returned if the request to modify the site's contract can not be completed in the site's current state. The site must be unlocked to perform this operation.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" ?>
                                            <SiteContractResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12058</ErrorCode>
                                                    <Description>
                                                        This site is currently unlocked, and the requested operation can only be completed on a locked site. Please contact support for further assistance.
                                                    </Description>
                                                </ResponseStatus>
                                            </SiteContractResponse>
        /subscriptions: 
            description:   |
                The *+subscriptions+* resource is used to create e-mail or callback subscriptions. The subscriptions will notify the user about events
                concerning specific orders or orders of a specific type.<br>
                E-mail subscriptions can be configured to sent emails immediately after an event occurred or on daily basis as a digest with all events
                of the previous day. Callback notifications will always be send immediately.
            get:
                description: |
                    GET is used to retrieve all subscriptions for the account (including email and callback subscriptions).
                    The returned information reflects the subscription as it has been defined, and for callback subscriptions will reflect the status of the latest attempt to place the callback.  The <Status> element will indicate if an error is being encountered when the Bandwidth Dashboard attempts to place the callback.
                responses:
                    200:
                        description: The subscriptions retrieval request will return a list of the subscriptions that are created on this account.
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <SubscriptionsResponse>
                                            <Subscriptions>
                                                <Subscription>
                                                    <SubscriptionId>0b3aa54d-0ce5-4f5b-bd75-1c30967b197f</SubscriptionId>
                                                    <OrderType>orders</OrderType>
                                                    <EmailSubscription>
                                                        <Email>bwtest@gmail.com</Email>
                                                        <DigestRequested>NONE</DigestRequested>
                                                    </EmailSubscription>
                                                </Subscription>
                                                <Subscription>
                                                    <SubscriptionId>ddf05927-780f-4f8f-89ab-e581f52f5f20</SubscriptionId>
                                                    <CallbackSubscription>
                                                        <URL>"https://company.com/iriscallback"</URL>
                                                        <Expiry>30000</Expiry>
                                                        <Status>some message containing status code and response body of last callback</Status>
                                                        <CallbackCredentials>
                                                            <BasicAuthentication>
                                                                <Username>iris</Username>
                                                            </BasicAuthentication>
                                                        </CallbackCredentials>
                                                    </CallbackSubscription>
                                                </Subscription>
                                            </Subscriptions>
                                        </SubscriptionsResponse>
                    400:
                        description: if the account specified does not exist or is locked it will result in a bad request
            post:
                description: |
                    A POST on the /subscriptions resource is used to request a new subscription for an account.<br>
                    The POST creates a new e-mail or callback subscription. A well-formed POST will create a subscription resource, and return a
                    subscription ID as part of the location header. The ID is used to uniquely identify the subscription.
                    The user should submit the desired e-mail address for notifications and the frequency with which he wants to get the updates:
                    DAILY (for daily digests) or NONE (immediately after events). OrderId is optional. If OrderId is specified only notifications will
                    be sent for events related to that order. If OrderId is omitted, notifications will be sent related to events of all orders of the specified type.<br>
                    For email subscriptions use a body like this:<br>
                    ```
                    <Subscription>
                        <OrderType> [ portins | portouts | orders | disconnects | dldas | lsrorders | e911s | tnoptions | externalTns] </OrderType> <!-- required -->
                        <OrderId> [ UUID ] </OrderId> <!-- optional, if provided notifications will only be sent for events regarding this specific order, if omitted notifications regarding events for all orders of the specified type will be sent -->
                        <EmailSubscription>
                            <Email> [ email address] </Email>
                            <DigestRequested> [ NONE | DAILY ] </DigestRequested> <!-- required -->
                        </EmailSubscription>
                    </Subscription>
                    ```
                    For callback subscriptions use a body like this:<br>
                    ```
                    <Subscription>
                        <OrderType> [portins | portouts | orders | disconnects | dldas | lsrorders | e911s | tnoptions | externalTns] </OrderType> <!-- same rules and values as above -->
                        <OrderId> [UUID]</OrderId> <!-- same rules and value as above -->
                        <CallbackSubscription>
                            <URL> [valid publically addressable URL] </URL> <!-- the URL that notifications should get POSTed to, HTTPS is highly recommended -->
                            <Expiry> [time in seconds] </Expiry> <!-- the number of seconds after which to expire this subscription -->
                            <CallbackCredentials> <!-- optional, but recommended; these credentials will be used to when authenticating with the notification receiving server -->
                                <BasicAuthentication> <!-- optional, the endpoint may be secured with BASIC auth -->
                                    <Username> [username] </Username> <!-- max 100 characters -->
                                    <Password> [password] </Password> <!-- the password will be stored encrypted and never returned via the API -->
                                </BasicAuthentication>
                                <!-- optional, a BASE64 encoded public key matching the notification receiving server -->
                                <PublicKey>LS0tLS1CRUdJTiBDRVJUSUZJ [...] kQgQ0VSVElGSUNBVEUtLS0tLQ0K</PublicKey>
                            </CallbackCredentials>
                        </CallbackSubscription>
                    </Subscription>
                    ```
                    The credentials used to impose security on the callbacks are defined in the <CallbackCredentials> element.  The Basic authentication is straightforward, but the <PublicKey> requires a little more explanation.  Please see the document to the left on Mutual Authentication for CallBacks.<p>
                    When an event happens that had been subscribed to with a callback subscription (order update, note added to order), the following payload
                    will be POSTed to the URL of the callback subscription.<br>More detail can be found in the API documentation for the fictitious endpoint /callbacks
                    ```xml
                    <Notification>
                        <SubscriptionId>...</SubscriptionId>
                        <OrderType>portins | portouts | orders | disconnects | dldas | lsrorders | e911s| tnoptions | externalTns</OrderType>
                        <OrderId>...</OrderId>
                        <!-- for order update events -->
                        <Status>COMPLETE | FAILED | PARTIAL | EXCEPTION ... </Status>
                        <!-- for order update events -->
                        <Message>...</Message>
                        <!-- for note events -->
                        <Note>...</Note>
                        <!-- for portins/portouts/orders/disconnects OrderTypes -->
                        <CompletedTelephoneNumbers>
                            <TelephoneNumber> ... </TelephoneNumber>
                            <!-- ... -->
                        </CompletedTelephoneNumbers>
                    </Notification>
                    ```
                body:
                    application/xml:
                        example: |
                            <!-- for an email subscription -->
                            <?xml version="1.0"?>
                            <Subscription>
                                <OrderType>portins</OrderType>
                                <OrderId>e75dc861-95ed-427e-8688-976132a69549</OrderId>
                                <EmailSubscription>
                                    <Email>newtest@gmail.com</Email>
                                    <DigestRequested>DAILY</DigestRequested>
                                </EmailSubscription>
                            </Subscription>
                            <!-- and for a callback subscription -->
                            <Subscription>
                                <OrderType>orders</OrderType>
                                <CallbackSubscription>
                                    <URL>"http://yourhost:8080/path/to/resource"</URL>
                                    <User>bandwidth-dashboard-user-id</User>
                                    <Expiry>12000</Expiry>
                                    <CallbackCredentials>
                                        <BasicAuthentication>
                                            <Username>superuser</Username>
                                            <Password>s3cure</Password>
                                        </BasicAuthentication>
                                        <PublicKey>LS0tLS1CRUdJTiBDRVJUSU [...] kQgQ0VSVElGSUNBVEUtLS0tLQ0K</PublicKey>
                                    </CallbackCredentials>
                                </CallbackSubscription>
                            </Subscription>
                responses:
                    201:
                        description: if the subscription is successfully created a CREATED response code will be returned
                    400:
                        description: if the account specified does not exist or is locked it will result in a bad request
                    404:
                        description: if the subscription validation failed (e.g. invalid URL, invalid expiration date, invalid public key)
                    409:
                        description: if the subscription for this subscription target already exits it will result in a CONFLICT response
            /{subscriptionid}: 
                description: Allows to retrieve information about the specific subscription or delete the subscription.
                get:
                    description: |
                      Retrieves the information associated with the subscription ID.
                      The returned information reflects the subscription as it has been defined, and for callback subscriptions will reflect the status of the latest attempt to place the callback.  The <status> element will indicate if an error is being encountered when the Bandwidth Dashboard attempts to place the callback.
                    responses:
                        200:
                            description: A subscrption as been retrieved. The information is returned.
                            body:
                                application/xml:
                                    example: |
                                        <SubscriptionsResponse>
                                            <Subscriptions>
                                                <Subscription>
                                                    <SubscriptionId>257f9be6-2e81-47bb-afd9-b8c184e9e246</SubscriptionId>
                                                    <OrderType>portouts</OrderType>
                                                    <EmailSubscription>
                                                        <Email>newtest@gmail.com</Email>
                                                        <DigestRequested>DAILY</DigestRequested>
                                                    </EmailSubscription>
                                                </Subscription>
                                            </Subscriptions>
                                        </SubscriptionsResponse>
                                        <!-- *** or *** -->
                                        <Subscription>
                                            <SubscriptionId>991a60d7-a612-48a5-a86e-326b51997cac</SubscriptionId>
                                            <OrderType>portins</OrderType>
                                            <CallbackSubscription>
                                                <URL>http://customer.com:8087/path/BandwidthHandler</URL>
                                                <Expiry>4283455101</Expiry>
                                                <Status>200 OK</Status>
                                            </CallbackSubscription>
                                        </Subscription>
                put:
                    description: |
                        Updates the subscription. This can be be used to update various values (expiry, email address, url, credentials...).
                        Note that the initial state changes for an order may happen very quickly, so subscribing to an
                        order once the system creates it needs to account for the fact that the initial state may be
                        different based on timing factors. It is recommended that the application creating the
                        subscription check the order status after the subscription is created to ensure the correct initial
                        condition. <br>
                        The same rules around valid or possible values as for POSTs apply.
                    body:
                        application/xml:
                            example:
                                <Subscription>
                                    <OrderType> [portins | portouts | orders | disconnects | dldas | lsrorders | e911s | tnoptions | externalTns] </OrderType>
                                    <OrderId> [UUID] </OrderId>
                                    <CallbackSubscription>
                                        <URL> [valid publically addressable URL] </URL>
                                        <Expiry> [time in seconds] </Expiry>
                                        <CallbackCredentials>
                                            <BasicAuthentication>
                                                <Username> [username] </Username>
                                                <Password> [password] </Password>
                                            </BasicAuthentication>
                                            <PublicKey> [BASE64 encoded public key] </PublicKey>
                                        </CallbackCredentials>
                                    </CallbackSubscription>
                                </Subscription>
                    responses:
                        200:
                            description: Subscription was successfully updated
                        400:
                            description: Subscription values failed validation
                        404:
                            description: Subscription does not exist
                delete:
                    description: |
                        Deletes the specified subscription. Note that deleting subscriptions is only supported on a one-by-one basis.
                        Deleting all subscriptions associated with an order requires GETting all of those subscriptions, then deleting them one by one.
                    responses:
                        200:
                            description: subscription has been successfully deleted
                        404:
                            description: subscription does not exist
        /tnoptions: 
            description: |
                The tnoptions Resource represents the requests made to the Bandwidth Dashboard API to add or otherwise manage a request to assign line features to the telephone number.This API allows the creation and observation of a <b>"TN Option"</b> work order that causes an update of a address information in a network Database. <br>
            get:
                description: |
                    Retrieve a list of the TN Option orders that are associated with the account.
                queryParameters:
                    status:
                        description: The status of the TN Option order being searched for.
                        type: string
                        example: PROCESSING
                        enum: [RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED]
                        repeat: true
                    tn:
                        description: A Telephone Number (TN) that is referenced in the order
                        type: string
                        example: 9199918388
                    customerOrderId:
                        description: The Customer Order ID is an ID assigned by the account owner to provide a reference number for the TN Option order.
                        type: string
                        example: ABCCorp12345
                    modifiedDateFrom:
                        description: For Date-based searches, the starting date of a date range that will be used to find TN Option Orders that were modified within the date range.  It is in the form yyyy-MM-dd.
                        type: string
                        example: 2013-10-22
                    modifiedDateTo:
                        description: For Date-based searches, the ending date of a date range that will be used to find TN Option Orders that were modified within the date range.  It is in the form yyyy-MM-dd.
                        type: string
                        example: 2013-10-25
                    createdDateFrom:
                        description: Checks the order's creation date against this value. Orders that have a creation date after this date will be included. Format is yyyy-MM-dd
                        type: string
                        example: 2013-10-22
                    createdDateTo:
                        description: Checks the order's creation date against this value. Orders that have a creation date before this date will be included. Format is yyyy-MM-dd
                        type: string
                        example: 2013-10-25
                    lastModifiedAfter:
                        description: Checks the order's last modified date against this value. Orders that have a modification date after this date will be included. Format is yyyy-MM-dd
                        type: string
                        example: 2013-10-25
                    lastModifiedBy:
                        description: This is the user-name of the user that last modified the TN Option Order.
                        type: string
                        example: smckinnon
                    orderIdFragment:
                        description: This search parameter represents the internal Bandwidth Dashboard ID that has been assigned to the TN Option Order.  This parameter is the first few characters of the internal ID - the entire ID does not need to be specified.
                        type: string
                        example: ed1c0bed-e2
                    orderDetails:
                        description: If set to true, a list of order details will be displayed instead the summary information.
                        type: boolean
                        default: false
                responses:
                    200:
                        description: |
                            The descriptive payload for the TN Option Orders query provides a broad range of information about the TN Option Orders found by the query, including the data associated with the order, the state of the order, and details about the order if it was successful.
                        body:
                            application/xml:
                                example: 
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <TnOptionOrders>
                                        <TotalCount>2</TotalCount>
                                        <TnOptionOrderSummary>
                                            <accountId>14</accountId>
                                            <CountOfTNs>2</CountOfTNs>
                                            <userId>jbm</userId>
                                            <lastModifiedDate>2016-01-15T12:01:14.363Z</lastModifiedDate>
                                            <OrderDate>2016-01-15T12:01:14.324Z</OrderDate>
                                            <OrderType>tn_option</OrderType>
                                            <OrderStatus>FAILED</OrderStatus>
                                            <OrderId>ddbdc72e-dc27-490c-904e-d0c11291b095</OrderId>
                                        </TnOptionOrderSummary>
                                        <TnOptionOrderSummary>
                                            <accountId>14</accountId>
                                            <CountOfTNs>3</CountOfTNs>
                                            <userId>jbm</userId>
                                            <lastModifiedDate>2016-01-15T11:22:58.969Z</lastModifiedDate>
                                            <OrderDate>2016-01-15T11:22:58.789Z</OrderDate>
                                            <OrderType>tn_option</OrderType>
                                            <OrderStatus>COMPLETE</OrderStatus>
                                            <OrderId>409033ee-88ec-43e3-85f3-538f30733963</OrderId>
                                        </TnOptionOrderSummary>
                                    </TnOptionOrders>
                                            OR
                                    <TnOptionOrders>
                                        <TotalCount>2</TotalCount>
                                        <TnOptionOrder>
                                            <OrderCreateDate>2016-01-15T12:01:14.324Z</OrderCreateDate>
                                            <AccountId>14</AccountId>
                                            <CreatedByUser>jbm</CreatedByUser>
                                            <OrderId>ddbdc72e-dc27-490c-904e-d0c11291b095</OrderId>
                                            <LastModifiedDate>2016-01-15T12:01:14.363Z</LastModifiedDate>
                                            <ProcessingStatus>FAILED</ProcessingStatus>
                                            <TnOptionGroups>
                                                <TnOptionGroup>
                                                    <NumberFormat>10digit</NumberFormat>
                                                    <RPIDFormat>10digit</RPIDFormat>
                                                    <RewriteUser>testUser1</RewriteUser>
                                                    <CallForward>6042661720</CallForward>
                                                    <CallingNameDisplay>on</CallingNameDisplay>
                                                    <Protected>true</Protected>
                                                    <Sms>on</Sms>
                                                    <FinalDestinationURI>sip:+12345678901@1.2.3.4:5060</FinalDestinationURI>
                                                    <TelephoneNumbers>
                                                        <TelephoneNumber>2018551020</TelephoneNumber>
                                                    </TelephoneNumbers>
                                                </TnOptionGroup>
                                                <TnOptionGroup>
                                                    <CallingNameDisplay>off</CallingNameDisplay>
                                                    <Protected>false</Protected>
                                                    <Sms>off</Sms>
                                                    <TelephoneNumbers>
                                                        <TelephoneNumber>2018551025</TelephoneNumber>
                                                    </TelephoneNumbers>
                                                </TnOptionGroup>
                                            </TnOptionGroups>
                                            <ErrorList>
                                                <Error>
                                                    <Code>5076</Code>
                                                    <Description>Telephone number is not available.</Description>
                                                    <TelephoneNumber>2018551025</TelephoneNumber>
                                                </Error>
                                                <Error>
                                                    <Code>5076</Code>
                                                    <Description>Telephone number is not available.</Description>
                                                    <TelephoneNumber>2018551020</TelephoneNumber>
                                                </Error>
                                            </ErrorList>
                                        </TnOptionOrder>
                                        <TnOptionOrder>
                                            <OrderCreateDate>2016-01-15T11:22:58.789Z</OrderCreateDate>
                                            <AccountId>14</AccountId>
                                            <CreatedByUser>jbm</CreatedByUser>
                                            <OrderId>409033ee-88ec-43e3-85f3-538f30733963</OrderId>
                                            <LastModifiedDate>2016-01-15T11:22:58.969Z</LastModifiedDate>
                                            <ProcessingStatus>COMPLETE</ProcessingStatus>
                                            <TnOptionGroups>
                                                <TnOptionGroup>
                                                    <CallingNameDisplay>on</CallingNameDisplay>
                                                    <TelephoneNumbers>
                                                        <TelephoneNumber>2174101601</TelephoneNumber>
                                                    </TelephoneNumbers>
                                                </TnOptionGroup>
                                                <TnOptionGroup>
                                                    <CallingNameDisplay>off</CallingNameDisplay>
                                                    <TelephoneNumbers>
                                                        <TelephoneNumber>2174101602</TelephoneNumber>
                                                    </TelephoneNumbers>
                                                </TnOptionGroup>
                                                <TnOptionGroup>
                                                    <CallingNameDisplay>systemdefault</CallingNameDisplay>
                                                    <TelephoneNumbers>
                                                        <TelephoneNumber>2174101603</TelephoneNumber>
                                                    </TelephoneNumbers>
                                                </TnOptionGroup>
                                            </TnOptionGroups>
                                            <ErrorList/>
                                        </TnOptionOrder>
                                    </TnOptionOrders>
                    404:
                        description: Not Found.  If any errors are found in the processing of the query string a 404 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored.
            post:
                description: |
                    Create TN Option order to assign line features to the telephone number.
                    The key data elements in the submission are -
                     <table style="text-align: left; width: 80%;"
                     border="1" cellpadding="2" cellspacing="2">
                      <tbody>
                        <tr>
                          <td>TnOptionGroups</td>
                          <td>A list of TnOptionGroups.</td>
                        </tr>
                        <tr>
                          <td>TnOptionGroup</td>
                          <td>Contains list of telephone numbers and set of TN options you want to assign to all TNs in the list.</td>
                        </tr>
                      </tbody>
                    </table>
                    There are TN Option values:
                    <ul>
                    <li> TelephoneNumber - [ 10digit ] </li>
                    <li> CallingNameDisplay - [ on | off | <i>unchanged</i> | <i>systemdefault</i> ] </li>
                    <li> NumberFormat - [ 10digit | 11digit | e164 | <i>unchanged</i> | <i>systemdefault</i> ] </li>
                    <li> RPIDFormat - [ 10digit | 11digit | e164 | <i>unchanged</i> | <i>systemdefault</i> ] </li>
                    <li> RewriteUser - [ string | <i>unchanged</i> | <i>systemdefault</i>] </li>
                    <li> CallForward - [ 10digit | <i>unchanged</i> | <i>systemdefault</i>] </li>
                    <li> Protected - [ true | false | <i>unchanged</i> | <i>systemdefault</i>] </li>
                    <li> Sms - [ on | off | <i>unchanged</i>] </li>
                    <li> FinalDestinationURI - [ string | <i>unchanged</i> | <i>systemdefault</i>] </li>
                    <ul>
                      <li>a 10 digit telephone number, or</li>
                      <li>a SIP URI ( without the sip: prefix )
                        <ul>
                          <li>in the form address-string@host IP:port, where </li>
                          <li>the host IP is an IPv4 address in the standard numerical n.n.n.n. form, and </li>
                          <li>the port is numeric, and optional</li>
                          <li>containing [a-z,A-Z,0-9], with ':', '.' and '@' to delimit the components of the overall string, and</li>
                          <li>less than 60 characters long.</li>
                        </ul>
                      </li>
                    </ul>
                    </ul>
                    Where:
                    <ul>
                    <li type="square"> <i>systemdefault</i> - implies that the element profile value should be removed so that the TN changes back to the default system behavior;</li>
                    <li type="square"> <i>unchanged</i> - the value should remain unchanged - implies a read before write model.</li>
                    <li type="square"><u>Leaving the element out of the payload is equivalent to <i>unchanged</i>.</u></li>
                    </ul>
                body:
                    application/xml:
                        example: |
                             <TnOptionOrder>
                                 <TnOptionGroups>
                                     <TnOptionGroup>
                                         <NumberFormat>10digit</NumberFormat>
                                         <RPIDFormat>10digit</RPIDFormat>
                                         <RewriteUser>testUser1</RewriteUser>
                                         <CallForward>6042661720</CallForward>
                                         <CallingNameDisplay>on</CallingNameDisplay>
                                         <Protected>true</Protected>
                                         <Sms>on</Sms>
                                         <FinalDestinationURI>sip:+12345678901@1.2.3.4:5060</FinalDestinationURI>
                                         <TelephoneNumbers>
                                             <TelephoneNumber>2018551020</TelephoneNumber>
                                         </TelephoneNumbers>
                                     </TnOptionGroup>
                                     <TnOptionGroup>
                                         <CallingNameDisplay>off</CallingNameDisplay>
                                         <Protected>false</Protected>
                                         <Sms>off</Sms>
                                         <TelephoneNumbers>
                                             <TelephoneNumber>2018551025</TelephoneNumber>
                                         </TelephoneNumbers>
                                     </TnOptionGroup>
                                 </TnOptionGroups>
                             </TnOptionOrder>
                responses:
                    201:
                        description: |
                            Created <br> A 201 response indicates that an order has been created.
                        body:
                            application/xml:
                                example: 
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <TnOptionOrderResponse>
                                        <TnOptionOrder>
                                            <OrderCreateDate>2016-01-15T12:01:14.324Z</OrderCreateDate>
                                            <AccountId>14</AccountId>
                                            <CreatedByUser>jbm</CreatedByUser>
                                            <OrderId>ddbdc72e-dc27-490c-904e-d0c11291b095</OrderId>
                                            <LastModifiedDate>2016-01-15T12:01:14.324Z</LastModifiedDate>
                                            <ProcessingStatus>RECEIVED</ProcessingStatus>
                                            <TnOptionGroups>
                                                <TnOptionGroup>
                                                    <NumberFormat>10digit</NumberFormat>
                                                    <RPIDFormat>10digit</RPIDFormat>
                                                    <RewriteUser>testUser1</RewriteUser>
                                                    <CallForward>6042661720</CallForward>
                                                    <CallingNameDisplay>on</CallingNameDisplay>
                                                    <Protected>true</Protected>
                                                    <Sms>on</Sms>
                                                    <TelephoneNumbers>
                                                        <TelephoneNumber>2018551020</TelephoneNumber>
                                                    </TelephoneNumbers>
                                                </TnOptionGroup>
                                                <TnOptionGroup>
                                                    <CallingNameDisplay>off</CallingNameDisplay>
                                                    <Protected>false</Protected>
                                                    <Sms>off</Sms>
                                                    <TelephoneNumbers>
                                                        <TelephoneNumber>2018551025</TelephoneNumber>
                                                    </TelephoneNumbers>
                                                </TnOptionGroup>
                                            </TnOptionGroups>
                                            <ErrorList/>
                                        </TnOptionOrder>
                                    </TnOptionOrderResponse>
                    400:
                        description: |
                            Bad Request <br> A 400 response Indicates that the order could not be created.
                            Error text and an error code will be provided in the ErrorList element.
                        body:
                            application/xml:
                                example: 
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <TnOptionOrderResponse>
                                        <ResponseStatus>
                                            <ErrorCode>5081</ErrorCode>
                                            <Description>Number Format 'wrong' is invalid.</Description>
                                        </ResponseStatus>
                                    </TnOptionOrderResponse>
            /{orderid}: 
                description: |
                    This API returns data about the specific TN Option Order specified as the resource
                get:
                    description: |
                        Retrieve information about a TN Option Order with specified ID.
                    responses:
                        200:
                            description: |
                                The descriptive payload for the TN Option Orders query provides a broad range of information about the TN Option Order identified in the URL.  Included amongst the information is:
                                <ul>
                                <li>ErrorList - the errors discovered with codes and explanations</li>
                                <li>ProcessingStatus(RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED) - the overall status of the order</li>
                                </ul>
                            body:
                                application/xml:
                                    example: 
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <TnOptionOrder>
                                            <OrderCreateDate>2016-01-15T11:22:58.789Z</OrderCreateDate>
                                            <AccountId>14</AccountId>
                                            <CreatedByUser>jbm</CreatedByUser>
                                            <OrderId>409033ee-88ec-43e3-85f3-538f30733963</OrderId>
                                            <LastModifiedDate>2016-01-15T11:22:58.969Z</LastModifiedDate>
                                            <ProcessingStatus>COMPLETE</ProcessingStatus>
                                            <TnOptionGroups>
                                                <TnOptionGroup>
                                                    <CallingNameDisplay>on</CallingNameDisplay>
                                                    <TelephoneNumbers>
                                                        <TelephoneNumber>2174101601</TelephoneNumber>
                                                    </TelephoneNumbers>
                                                </TnOptionGroup>
                                                <TnOptionGroup>
                                                    <CallingNameDisplay>off</CallingNameDisplay>
                                                    <TelephoneNumbers>
                                                        <TelephoneNumber>2174101602</TelephoneNumber>
                                                    </TelephoneNumbers>
                                                </TnOptionGroup>
                                                <TnOptionGroup>
                                                    <CallingNameDisplay>systemdefault</CallingNameDisplay>
                                                    <FinalDestinationURI>sip:+12345678901@1.2.3.4:5060</FinalDestinationURI>
                                                    <TelephoneNumbers>
                                                        <TelephoneNumber>2174101603</TelephoneNumber>
                                                    </TelephoneNumbers>
                                                </TnOptionGroup>
                                            </TnOptionGroups>
                                            <ErrorList/>
                                        </TnOptionOrder>
                        404:
                            description: NOT FOUND - the order id does not exist in the system
                            body:
                                application/xml:
                                    example: 
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <TnOptionOrderReportResponse>
                                            <ResponseStatus>
                                                <Description>The resource does not exist</Description>
                                            </ResponseStatus>
                                        </TnOptionOrderReportResponse>
                /history: 
                    description: |
                        The history API returns the various events that have impacted the specified TN Option order.
                    get:
                        description: |
                            Retrieve the history information associated with an order
                        responses:    
                            200:
                                description: |
                                    The history payload is a set of history records, each of which contains:
                                        <table style="text-align: left; width: 80%;" border="1" cellpadding="2" cellspacing="2">
                                            <tbody>
                                                <tr>
                                                    <td>OrderModifiedDate</td>
                                                    <td>The date that the order history event happened</td>
                                                </tr>
                                                <tr>
                                                    <td>Status</td>
                                                    <td>The new state of the TN Option order - RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED </td>
                                                </tr>
                                                <tr>
                                                    <td>Note</td>
                                                    <td>A Note or additional information included with the state change </td>
                                               </tr>
                                               <tr>
                                                    <td>Author</td>
                                                    <td>The user id that implemented the state change</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                body: 
                                    application/xml:
                                        example: 
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <OrderHistoryWrapper>
                                                <OrderHistory>
                                                    <OrderDate>2016-01-15T11:22:58.789Z</OrderDate>
                                                    <Note>Tn Option order has been received by the system</Note>
                                                    <Author>jbm</Author>
                                                    <Status>RECEIVED</Status>
                                                </OrderHistory>
                                                <OrderHistory>
                                                    <OrderDate>2016-01-15T11:22:58.831Z</OrderDate>
                                                    <Note>Tn Option order processing has started</Note>
                                                    <Author>jbm</Author>
                                                    <Status>PROCESSING</Status>
                                                </OrderHistory>
                                                <OrderHistory>
                                                    <OrderDate>2016-01-15T11:22:58.969Z</OrderDate>
                                                    <Note>Tn Option order is complete</Note>
                                                    <Author>jbm</Author>
                                                    <Status>COMPLETE</Status>
                                                </OrderHistory>
                                            </OrderHistoryWrapper>
                /adminparameters: 
                    # this file is shared between 6 order types - 
                    #  - orders
                    #  - portins
                    #  - portouts
                    #  - LSR orders
                    #  - E911 orders
                    #  - TN Option orders
                    # 
                    description: |
                        The /adminparameters resource contains two pieces of information...
                        <ul>
                          <li>The "activity state" of the order - a classification of what the state the order is in from the perspective of the Bandwidth staff member.</li>
                          <ul>
                            <li>Quiet - the order is automaticly progressing through the work flow and nothing needs to be done.  This is the default state</li>
                            <li>Changed - something has changed in the order, and should be examined by a staff member</li>
                            <li>Seen - the order has been examined by the staff member, and if required, action is being taken</li>
                            <li>Responded - a response has been provided to the customer</li>
                          </ul>
                          <li>The name or handle of the Bandwidth staff member that is caring for the order</li>
                        </ul>
                        This resource is used by Bandwidth in managing multiple types of orders. <br><br> There is only one instance of the adminparameters resource associated with an order.  The resource is assigned when it is needed, so an order that is flowing through the workflow without errors will likely not have an instance of adminparameters.
                    put:
                        description: Updates the admin parameters associated with an order.  Removing an element will result in resetting the element to the default value.
                        body:
                            application/xml:
                                example:
                                    <?xml version="1.0"?>
                                    <AdminParameters>
                                        <!-- Optional - Default value is Quiet-->
                                        <ActivityState>Changed</ActivityState>
                                        <!-- Optional -->
                                        <BandwidthPrime>James T Kirk</BandwidthPrime>
                                    </AdminParameters>
                        responses:
                            201:
                                description: CREATED - the admin parameters resource has been created and populated as directed.
                            200:
                                description: OK - The previously created resource has been updated as directed.
                            404:
                                description: Bad Request - some error is present in the payload, and the the Admin Parameters have not been changed.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AdminParametersResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>15517</ErrorCode>
                                                    <Description>Invalid 'activityState'. Valid values are changed, seen, responded, quiet</Description>
                                                </ResponseStatus>
                                            </AdminParametersResponse>        
                    get:
                        description: Retrieve the admin parameters associated with an order.
                        responses:
                            200:
                                description: OK - there are admin parameters associated with the order, and they have been returned in the response.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AdminParametersResponse>
                                                <AdminParameters>
                                                    <ActivityState>responded</ActivityState>
                                                    <BandwidthPrime>James T Kirk</BandwidthPrime>
                                                </AdminParameters>
                                            </AdminParametersResponse>                    
                            404:
                                description: NOT FOUND - No admin parameters have been associated with this order id (or the orderid cannot be found in the system).  For a valid orderid this is interpreted as a "Quiet" <ActivityState>.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AdminParametersResponse>
                                                <ResponseStatus>
                                                    <Description>The resource does not exist</Description>
                                                </ResponseStatus>
                                            </AdminParametersResponse>     
                    delete:
                        description: Remove the admin parameters associated with an order
                        responses:
                            200:
                                description: OK - the admin parameters have been removed from the order
                            400:
                                description: BAD REQUEST - typically this means that the order-id is incorrect.
                                body:
                                    application/xml:
                                        example:
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <AdminParametersResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>5035</ErrorCode>
                                                    <Description>port_in order f58f47a5-f9f5-4dd2-8687-a615b2fe86cd9 not found.</Description>
                                                </ResponseStatus>
                                            </AdminParametersResponse>
        /tnreservation: 
            description: |
                Reserves a telephone number
                or retrieves an account's telephone number reservation information
                .
            get:
                description: Retrieves an account's telephone number reservations
                responses:
                    200:
                        description: An account's information has been successfully retrieved
                        body:
                            application/xml:
                                example: |
                                    <ReservationsResponse>
                                        <Reservations>
                                            <Count>1</Count>
                                            <Reservation>
                                                <ReservationId>0559244b-11e3-474f-a4fe-303f0d19c296</ReservationId>
                                                <AccountId>12346099</AccountId>
                                                <ReservationExpires>1690</ReservationExpires>
                                                <ReservedTn>4354776010</ReservedTn>
                                            </Reservation>
                                        </Reservations>
                                    </ReservationsResponse>
            post:
                description: Reserves a telephone number or a set of telephone numbers for a default time of 4 hours. A successful reservation returns a location header that can be used to retrieve the reservation at a later time.
                body:
                    application/xml:
                        example: |
                            <Reservation>
                                <ReservedTn>4354770625</ReservedTn>
                            </Reservation>
                responses:
                    201:
                        description: The TN or set of TNs have been successfully reserved, with the link to the reservation in the Location Header.
                    400:
                        description: The Telephone Number requested is not available.
                        body:
                            application/xml:
                                example: |
                                    <ReservationResponse>
                                        <ResponseStatus>
                                            <ErrorCode>5041</ErrorCode>
                                            <Description>Reservation failed: telephone number 4354776010 is not available.</Description>
                                        </ResponseStatus>
                                    </ReservationResponse>
            /{reservationid}: 
                description: Retrieves a TN reservation's information and deletes an existing reservation.
                get:
                    description: Retrieves a TN reservation's information.
                    responses:
                        200:
                            description: A reservation's information has been successfully retrieved.
                            body:
                                application/xml:
                                    example: |
                                        <ReservationResponse>
                                            <Reservation>
                                                <ReservationId>f342904f-b03a-4499-bac0-e8f43a2664a1</ReservationId>
                                                <AccountId>12346099</AccountId>
                                                <ReservationExpires>1492</ReservationExpires>
                                                <ReservedTn>4354776010</ReservedTn>
                                            </Reservation>
                                        </ReservationResponse>
                delete:
                    description: Deletes a TN reservation.
                    responses:
                        200:
                            description: A reservation has been successfully deleted.
        /trunkgroups: 
            description: |
                This resource is used to retrieve sbc trunk groups on account.
            get:
                description: Retrieves an account's trunk groups.
                queryParameters:
                    status:
                        description: The status of the trunk groups being searched for.
                        type: string
                        example: SAVED
                        enum: [SAVED, UPDATE_NOT_DEPLOYED, IN_PROGRESS, DEPLOYED_SUCCESS, DEPLOYED_FAILED, UPDATE_FAILED, UNDEPLOY_FAILED]
                        required: false
                responses:
                    200:
                        description: An account's trunk groups have been successfully retrieved.
                        body:
                            application/xml:
                                example: |
                                    <TrunkGroupsResponse>
                                        <TrunkGroups>
                                            <TrunkGroup>
                                                <Id>NOC_111DMD46OYPX41J2_TG</Id>
                                                <Status>SAVED</Status>
                                            </TrunkGroup>
                                        </TrunkGroups>
                                    </TrunkGroupsResponse>
        /unhub: 
            description: |
                Api for migration from DPN to CLEC account. Supports 4 action : pre-flight, remove, roll-back, cleanup.
            get:
                description:  |
                    The GET returns the current unhub settings, indicating current state of unhub process.
                responses:
                    200:
                        description: The Unhub settings element is returned.
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <UnHubResponse>
                                        <UnHub>
                                            <State>pre-flight</State>
                                            <CLECSBCSettings>
                                                <TrunkGroupId>TrunkGroupNewName</TrunkGroupId>
                                                <NodeGroupName>East Coast 01</NodeGroupName>
                                            </CLECSBCSettings>
                                        </UnHub>
                                    </UnHubResponse>
                    404:
                        description: |
                            If the settings are not present a 404 NOT FOUND is returned.
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <UnHubResponse>
                                        <ResponseStatus>
                                            <Description>The resource does not exist</Description>
                                        </ResponseStatus>
                                    </UnHubResponse>
            post:
                description: |
                    This Unhub settings resource can be PUT or POSTed to in order to establish the appropriate settings.
                body:
                    application/xml:
                        example: |
                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                            <UnHub>
                                <Action>pre-flight</Action>
                                <CLECSBCSettings>
                                    <TrunkGroupId>TrunkGroupNewName</TrunkGroupId>
                                    <NodeGroupName>East Coast 01</NodeGroupName>
                                </CLECSBCSettings>
                            </UnHub>
                responses:
                    200:
                        description: a 200 OK is returned on successful updating of the Unhub Settings.  There is no payload returned with a 200 OK.
                    400:
                        description: a 400 BAD REQUEST will be returned with a descriptive payload if the XML describing the DPN settings resource is incorrect or the account is not configured for DPN.  The error contains an error code and description.
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <UnHubResponse>
                                        <ResponseStatus>
                                            <ErrorCode>12791</ErrorCode>
                                            <Description>Dehubing still in progress. Please wait until it will be completed.</Description>
                                        </ResponseStatus>
                                    </UnHubResponse>
            put:
                description: |
                    This Unhub settings resource can be PUT or POSTed to in order to establish the appropriate settings.
                body:
                    application/xml:
                        example: |
                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                            <UnHub>
                                <Action>remove</Action>
                            </UnHub>
                responses:
                    200:
                        description: a 200 OK is returned on successful updating of the Unhub Settings.  There is no payload returned with a 200 OK.
                    400:
                        description: a 400 BAD REQUEST will be returned with a descriptive payload if the XML describing the edge DPN settings resource is incorrect or the account is not configured for DPN.  The error contains an error code and description.
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <UnHubResponse>
                                        <ResponseStatus>
                                            <ErrorCode>12791</ErrorCode>
                                            <Description>Dehubing still in progress. Please wait until it will be completed.</Description>
                                        </ResponseStatus>
                                    </UnHubResponse>
        /users: 
            post:
                description: Adds a user to an existing account. Note that the POST method simply assigns the specified account to an <strong>existing</strong> user. The POST does not create a user from scratch.
                body:
                    application/xml:
                        example: |
                            <Users>
                                <User>
                                    <Username>testcustomer</Username>
                                    <Password>newpassword</Password>
                                    <FirstName>Jane</FirstName>
                                    <LastName>Doe</LastName>
                                    <EmailAddress>janedoe@bandwidth.com</EmailAddress>
                                    <TelephoneNumber>9199999999</TelephoneNumber>
                                    <Roles>
                                        <Role>
                                            <RoleName>role_api_search</RoleName>
                                            <Permissions>
                                                <Permission>
                                                    <PermissionName>view</PermissionName>
                                                </Permission>
                                            </Permissions>
                                        </Role>
                                        <Role>
                                            <RoleName>role_api_ordering</RoleName>
                                            <Permissions>
                                                <Permission>
                                                    <PermissionName>view</PermissionName>
                                                </Permission>
                                                <Permission>
                                                    <PermissionName>update</PermissionName>
                                                </Permission>
                                            </Permissions>
                                        </Role>
                                    </Roles>
                                </User>
                            </Users>
                responses:
                    201:
                        description: The user has been successfully created.
                    404:
                        description: The user does not exist.
                        body:
                            application/xml:
                                example: |
                                    <UsersResponse>
                                        <ResponseStatus>
                                            <ErrorCode>12000</ErrorCode>
                                            <Description>User 'testnotcustomer' does not exist</Description>
                                        </ResponseStatus>
                                    </UsersResponse>
                    409:
                        description: The user already exists in the account.
                        body:
                            application/xml:
                                example: |
                                    <UsersResponse>
                                        <ResponseStatus>
                                            <ErrorCode>12005</ErrorCode>
                                            <Description>User 'testcustomer' is already assigned to account '12346099'</Description>
                                        </ResponseStatus>
                                    </UsersResponse>
            get:
                description: Retrieves a list of users as specified by the account ID.
                body:
                    application/xml:
                        example: |
                            <?xml version="1.0"?>
                            <UsersResponse>
                                <Users>
                                    <User>
                                        <Username>testcustomer</Username>
                                        <FirstName>Jane</FirstName>
                                        <LastName>Doe</LastName>
                                        <EmailAddress>janedoe@bandwidth.com</EmailAddress>
                                        <TelephoneNumber>9199999999</TelephoneNumber>
                                        <Roles>
                                            <Role>
                                                <RoleName>ROLE_API_ORDERING</RoleName>
                                                <Permissions>
                                                    <Permission>
                                                        <PermissionName>VIEW</PermissionName>
                                                    </Permission>
                                                    <Permission>
                                                        <PermissionName>UPDATE</PermissionName>
                                                    </Permission>
                                                </Permissions>
                                            </Role>
                                                        <! --- SNIP --- >
                                            <Role>
                                                <RoleName>ROLE_API_SEARCH</RoleName>
                                                <Permissions>
                                                    <Permission>
                                                        <PermissionName>VIEW</PermissionName>
                                                    </Permission>
                                                </Permissions>
                                            </Role>
                                        </Roles>
                                    </User>
                                    <User>
                                                        <! --- SNIP --- >
                                    </User>
                                </Users>
                            </UsersResponse>
            /{userid}: 
                description: The {user ID} method either returns the information associated with the user, adds roles to the user, or deletes the user. 
                get:
                    description: Retrieves the information associated with the user.
                    responses:
                        200:
                            description: The information has been successfully received and displayed in the payload.
                            body:
                                application/xml:
                                    example: |
                                        <UserResponse>
                                            <User>
                                                <Username>mowoc</Username>
                                                <FirstName>Michael</FirstName>
                                                <LastName>Owoc</LastName>
                                                <EmailAddress>mowoc@bandwidth.com</EmailAddress>
                                                <TelephoneNumber>9199999999</TelephoneNumber>
                                                <Roles>
                                                    <Role>
                                                        <RoleName>ROLE_ADMIN</RoleName>
                                                        <Permissions>
                                                            <Permission>
                                                                <PermissionName>VIEW</PermissionName>
                                                            </Permission>
                                                        </Permissions>
                                                    </Role>
                                                </Roles>
                                            </User>
                                        </UserResponse>
                put:
                    description: |
                        Add a role to a userid. 
                        <i>However</i>, if the user ID has a role that isn't <u>explicitly</u> stated in the PUT payload, that role will be removed from the user ID. 
                        <strong>For this reason</strong>, adding a role to a user ID is best done in the roles sublevel. Avoid adding roles at this level unless you wish to <strong>completely change</strong> all roles for the user ID.
                    body:
                        application/xml:
                            example: |
                                <User>
                                    <Username>testcustomer</Username>
                                    <Password>newpassword</Password>
                                    <FirstName>Jane</FirstName>
                                    <LastName>Doe</LastName>
                                    <EmailAddress>janedoe@bandwidth.com</EmailAddress>
                                    <TelephoneNumber>9199999999</TelephoneNumber>
                                    <Roles>
                                        <Role>
                                            <RoleName>role_admin</RoleName>
                                                <Permissions>
                                                    <Permission>
                                                            <PermissionName>view</PermissionName>
                                                    </Permission>
                                                    <Permission>
                                                            <PermissionName>update</PermissionName>
                                                        </Permission>
                                                </Permissions>
                                            </Role>
                                    </Roles>
                                </User>
                    responses:
                        200:
                            description: The role has been successfully added. If the role already existed, it will still return 200, but nothing will be changed to the existing role.
                delete:
                    description: Deletes the user.
                    responses:
                        200:
                            description: The user has been successfully deleted.
                /roles: 
                    description: The roles resource interacts with the roles of the user, adding and retrieving roles.
                    get:
                        description: Retrieves the list of roles associated with the user ID.
                        responses:
                            200:
                                description: The list of roles has been successfully received and displayed in the payload.
                                body:
                                    application/xml:
                                        example: |
                                            <RolesResponse>
                                                <Roles>
                                                    <Role>
                                                        <RoleName>ROLE_ADMIN</RoleName>
                                                        <Permissions>
                                                            <Permission>
                                                                <PermissionName>VIEW</PermissionName>
                                                            </Permission>
                                                        </Permissions>
                                                    </Role>
                                                </Roles>
                                            </RolesResponse>
                    post:
                        description: Adds a role to the user ID.
                        body:
                            application/xml:
                                example: |
                                    <Roles>
                                        <Role>
                                            <RoleName>ROLE_API_ORDERING</RoleName>
                                            <Permissions>
                                                <Permission>
                                                    <PermissionName>VIEW</PermissionName>
                                                </Permission>
                                            </Permissions>
                                        </Role>
                                    </Roles>
                        responses:
                            201:
                                description: The roles have been successfully added to the user as described in the payload
                            409:
                                description: The role as described in the payload already exists for the user.
                                body:
                                    application/xml:
                                        example: |
                                            <PermissionsResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12004</ErrorCode>
                                                    <Description>For account '12346099' user 'mowoc' already has permission 'UPDATE' for role 'ROLE_API_ORDERING'</Description>
                                                </ResponseStatus>
                                            </PermissionsResponse>
                    /{roleId}: 
                        description: The {role ID} resource interacts with the specific role associated with the user ID; this resource can update the permissions, retrieve the information, as well as delete the role.
                        get:
                            description: Retrieves the information associated with the Role ID.
                            responses:
                                200:
                                    description: The information has been successfully received and displayed in the payload.
                                    body:
                                        application/xml:
                                            example: |
                                                <RolesResponse>
                                                    <Roles>
                                                        <Role>
                                                            <RoleName>ROLE_API_ORDERING</RoleName>
                                                            <Permissions>
                                                                <Permission>
                                                                    <PermissionName>VIEW</PermissionName>
                                                                </Permission>
                                                            </Permissions>
                                                        </Role>
                                                        <Role>
                                                            <RoleName>ROLE_ADMIN</RoleName>
                                                            <Permissions>
                                                                <Permission>
                                                                    <PermissionName>VIEW</PermissionName>
                                                                </Permission>
                                                            </Permissions>
                                                        </Role>
                                                    </Roles>
                                                </RolesResponse>
                        put:
                            description: |
                                Add a permission to a userid.<br>
                                <strong>However</strong>, if the user ID has a permission that isn't <u>explicitly</u> stated in the PUT payload, that permission will be removed from the user ID. 
                                <strong>For this reason</strong>, adding a permission to a user ID is best done in the permissions sublevel. Avoid adding permissions at this level unless you wish to <strong>completely change</strong> all permissions for the user ID.
                            body:
                                application/xml:
                                    example: |
                                        <Role>
                                            <RoleName>ROLE_API_ORDERING</RoleName>
                                            <Permissions>
                                                <Permission>
                                                    <PermissionName>VIEW</PermissionName>
                                                </Permission>
                                            </Permissions>
                                        </Role>
                            responses:
                                200:
                                    description: The permissions have been successfully updated.
                        delete:
                            description: Deletes the role.
                            responses:
                                200:
                                    description: The role has been successfully deleted.
                        /permissions: 
                            description: The permissions resource interacts with the permissions of the user, adding and retrieving permissions.
                            get:
                                description: Retrieves the list of permissions associated with the user ID.
                                responses:
                                    200:
                                        description: The list of permissions has been successfully received and displayed in the payload.
                                        body:
                                            application/xml:
                                                example: |
                                                    <PermissionsResponse>
                                                        <Permissions>
                                                            <Permission>
                                                                <PermissionName>VIEW</PermissionName>
                                                            </Permission>
                                                        </Permissions>
                                                    </PermissionsResponse>
                            post:
                                description: Adds a role to the user ID.
                                body:
                                    application/xml:
                                        example: |
                                            <Roles>
                                                <Role>
                                                    <RoleName>ROLE_API_ORDERING</RoleName>
                                                    <Permissions>
                                                        <Permission>
                                                            <PermissionName>VIEW</PermissionName>
                                                        </Permission>
                                                    </Permissions>
                                                </Role>
                                            </Roles>
                                responses:
                                    201:
                                        description: The permissions have been successfully added to the user as described in the payload
                                    409:
                                        description: The permission as described in the payload already exists for the user.
                                        body:
                                            application/xml:
                                                example: |
                                                    <PermissionsResponse>
                                                        <ResponseStatus>
                                                            <ErrorCode>12004</ErrorCode>
                                                            <Description>For account '12346099' user 'mowoc' already has permission 'UPDATE' for role 'ROLE_API_ORDERING'</Description>
                                                        </ResponseStatus>
                                                    </PermissionsResponse>
                            /{permissionId}: 
                                description: The {permission ID} resource interacts with the specific permission associated with the user ID; this resource can retrieve the information as well as delete the permission.
                                get:
                                    description: Retrieves the information associated with the permission ID.
                                    responses:
                                        200:
                                            description: The information has been successfully received and displayed in the payload.
                                            body:
                                                application/xml:
                                                    example: |
                                                        <PermissionResponse>
                                                            <Permission>
                                                                <PermissionName>VIEW</PermissionName>
                                                            </Permission>
                                                        </PermissionResponse>
                                delete:
                                    description: Deletes the permission.
                                    responses:
                                        200:
                                            description: The permission has been successfully deleted.
/aeuis: 
    description: |
        This resource is used to manage alternate end user identifiers (AEUIs).
    get:
        description: |
            GET is used to retrieve all Alternate end user identifiers.
        queryParameters:
                page:
                    description: An ID of the first element in a page.  This value will indicate the first value, not the count, of the initial entry in the page being requested.<br>
                        It can be an acid of alternate end user identifier. The initial page is tagged with the ID '1'.
                    type: string
                    example: 3, customIdentifier
                    default: 1
                    required: false
                size:
                    description: The number of items to include in a page.
                    type: integer
                    example: 5000
                    default: 500
                    required: false
                accountId:
                    description: The internal account id assigned to the customer AEUIs are associated with.
                    type: integer
                    example: 5000125
                    required: true
                aeui:
                    description: The Alternate end user identifier associated with callback using E911 order.
                    type: string
                    example: someAcid
                    required: false
                callback:
                    description: Callback telephone number associated with AEUI using E911 oder.
                    type: string
                    example: 8042105760
                    required: false
                pidfloenabledonly:
                    description: This parameter allows to retrieve PIDF-LO enabled only AEUIs.
                    type: boolean
                    default: false
                    required: false
        responses:
            200:
                description: |
                    OK - the AEUIs retrieval request will return a list of all AEUIs.
                body:
                    application/xml:
                        example: 
                            <AlternateEndUserIdentifiersResponse>
                                <TotalCount>2</TotalCount>
                                <Links>
                                    <first>Link=&lt;http://localhost:8080/iris/aeuis?accountId=14&amp;page=1&amp;size=500&gt;;rel="first";</first>
                                </Links>
                                <AlternateEndUserIdentifiers>
                                    <AlternateEndUserIdentifier>
                                        <Identifier>DavidAcid</Identifier>
                                        <CallbackNumber>8042105760</CallbackNumber>
                                    </AlternateEndUserIdentifier>
                                    <AlternateEndUserIdentifier>
                                        <Identifier>JohnAcid</Identifier>
                                        <CallbackNumber>8042105618</CallbackNumber>
                                    </AlternateEndUserIdentifier>
                                </AlternateEndUserIdentifiers>
                            </AlternateEndUserIdentifiersResponse>
            404:
                description: |
                    Not Found - if the account specified does not exist or is locked or there are no AEUIs for specified search criteria it will result in a "NOT FOUND" response.
                body:
                    application/xml:
                        example: 
                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                            <AlternateEndUserIdentifiersResponse>
                                <ResponseStatus>
                                    <ErrorCode>12087</ErrorCode>
                                    <Description>Alternate End User Identifiers were not found.</Description>
                                </ResponseStatus>
                            </AlternateEndUserIdentifiersResponse>
/tns: 
    description: Telephone Numbers (TNs) are similarly central to Bandwidth Dashboard provisioning.  TNs can be queried on a system-wide basis, returning information based on a wide range of search parameters.<br> The results will be restricted to the account(s) that the requesting user has access to.
    get:
        description: | 
            Retrieve information about one or more Telephone Numbers (TNs), where the TNs are chosen based on the search parameters provided in the API Call. 
        queryParameters:
            page:
                description: An ID of the first element in a page.  This value will indicate the first value, not the count, of the initial entry in the page being requested.  Note in the example that the page is the TN that begins the page. The initial page is tagged with the ID '1'
                type: string
                example: 9199918388
                default: 1
                required: true
            size:
                description: The number of items to include in a page
                type: integer
                example: 250
                default: 500
                required: true
            accountId:
                description: The internal account id assigned to the customer that "owns" the TN
                type: integer
                example: 5000125
            status:
                description: | 
                    A status value to filter the TNs returned in the payload.  Values that can be accepted include:
                    <ul>
                        <li>Available</li>
                        <li>InService</li>
                        <li>Aging</li>
                        <li>Backordered</li>
                        <li>Obsolete (future)</li>
                    </ul>
                type: string
                enum: [Available,InService,Aging,Backordered,Obsolete]
                example: Available
            fullNumber:
                description: A 10 Digit TN
                type: string
                example: 9199918388
            tier:
                description: A service tier indicating the the vendor class that the TN is associated with.  Tier indicates whether the TN is on-net, domestic offnet, Canadian, etc.
                type: integer
                example: 5       
            lata:
                description: The LATA (Local Access Transport Area) that the TN is served from, typically 3 digits (5 in FLA)
                type: integer
                example: 423
            rateCenter:
                description: The Rate Center designation that the number is served from.  If not combined with a State search the results will span states.
                type: string
                example: RALEIGH
            npa:
                description: The first 3 digits of a 10 Digit NA Telephone Number, the Area Code.
                type: string
                example: 919
            npaNxx:
                description: The first 6 digits of a 10 Digit NA Telephone Number.
                type: string
                example: 919991
            npaNxxX:
                description: The first 7 digits of a 10 Digit NA Telephone Number.
                type: string
                example: 9199918
            state:
                description: A 2 character State or Province designation - TX for Texas for example
                type: string
                example: TX
            city:
                description: The geographic city most likely to serve the Telephone Number.  City and other geographic data is determined statistically, and is not as reliable as Rate Center information for pinpointing the service location of a TN
                example: CARY
            host:
                description: An IP address or subnet (CIDR format) associated with the TN. Filter for subnet applies by exact match.
                type: string
                example: 47.16.211.63 or 69.22.181.68/30
        responses:    
            200:
                description: |
                    The descriptive payload for the TNs query provides information about the TN(s) that were found in the Query. Information about the City, State, LATA, Rate Center, Tier, Vendor, Status, Owning Account and Last Modified Date is provided for each TN in the payload.
                    Links to assist in pagination are also provided.
                body: 
                    application/xml:
                        example: |
                            <?xml version="1.0"?>
                            <TelephoneNumbersResponse>
                                <TelephoneNumberCount>5</TelephoneNumberCount>
                                <Links>
                                    <first>Link=&lt;https://dashboard.bandwidth.com:443/v1.0/tns?account=9500012&amp;page=1&amp;size=500&gt;;rel="first";</first>
                                    <next>Link=&lt;https://dashboard.bandwidth.com:443/v1.0/tns?account=9500012&amp;page=2012082912&amp;size=500&gt;;rel="next";</next>
                                </Links>
                                <TelephoneNumbers>
                                    <TelephoneNumber>
                                        <City>CARY</City>
                                        <Lata>426</Lata>
                                        <State>NC</State>
                                        <FullNumber>9192381138</FullNumber>
                                        <Tier>0</Tier>
                                        <VendorId>49</VendorId>
                                        <VendorName>Bandwidth CLEC</VendorName>
                                        <RateCenter>CARY</RateCenter>
                                        <Status>Inservice</Status>
                                        <AccountId>9900008</AccountId>
                                        <LastModified>2013-12-05T05:58:27.000Z</LastModified>
                                    </TelephoneNumber>
                                    <TelephoneNumber>
                                        <City>CARY</City>
                                        <Lata>426</Lata>
                                        <State>NC</State>
                                        <FullNumber>9192381139</FullNumber>
                                        <Tier>0</Tier>
                                        <VendorId>49</VendorId>
                                        <VendorName>Bandwidth CLEC</VendorName>
                                        <RateCenter>CARY</RateCenter>
                                        <Status>Inservice</Status>
                                        <AccountId>9900000</AccountId>
                                        <LastModified>2013-12-05T05:58:27.000Z</LastModified>
                                    </TelephoneNumber>
                                    <TelephoneNumber>
                                        <City>CARY</City>
                                        <Lata>426</Lata>
                                        <State>NC</State>
                                        <FullNumber>9192381141</FullNumber>
                                        <Tier>0</Tier>
                                        <VendorId>49</VendorId>
                                        <VendorName>Bandwidth CLEC</VendorName>
                                        <RateCenter>CARY</RateCenter>
                                        <Status>Inservice</Status>
                                        <AccountId>9900000</AccountId>
                                        <LastModified>2013-12-05T05:58:27.000Z</LastModified>
                                    </TelephoneNumber>
                                    <TelephoneNumber>
                                        <City>CARY</City>
                                        <Lata>426</Lata>
                                        <State>NC</State>
                                        <FullNumber>9192381142</FullNumber>
                                        <Tier>0</Tier>
                                        <VendorId>49</VendorId>
                                        <VendorName>Bandwidth CLEC</VendorName>
                                        <RateCenter>CARY</RateCenter>
                                        <Status>Inservice</Status>
                                        <AccountId>9900000</AccountId>
                                        <LastModified>2013-12-05T05:58:27.000Z</LastModified>
                                    </TelephoneNumber>
                                    <TelephoneNumber>
                                        <City>CARY</City>
                                        <Lata>426</Lata>
                                        <State>NC</State>
                                        <FullNumber>9192381144</FullNumber>
                                        <Tier>0</Tier>
                                        <VendorId>49</VendorId>
                                        <VendorName>Bandwidth CLEC</VendorName>
                                        <RateCenter>CARY</RateCenter>
                                        <Status>Aging</Status>
                                        <AccountId>753</AccountId>
                                        <LastModified>2013-12-05T05:58:27.000Z</LastModified>
                                    </TelephoneNumber>
                                </TelephoneNumbers>
                            </TelephoneNumbersResponse>
            400:
                description: |
                    Bad Request - any syntax error in the parameters will cause a 400 error with a payload similar to the payload in the example, with an error code and text description.
                body: 
                    application/xml:
                        example: |
                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                            <TelephoneNumbersResponse>
                                <ResponseStatus>
                                    <ErrorCode>15511</ErrorCode>
                                    <Description>The NPA_NXX '9192384' is invalid</Description>
                                </ResponseStatus>
                            </TelephoneNumbersResponse> 
    /{tn}: 
        description: Retrieves information about the specified telephone number.  The information returned provides status and historic information about the Telephone Number, including the status, the order id and date assocated with the last modification, and the account and site information associated with the TN. <br> The request for more information can be made by requesting a number of specific derived sub-resources.
        get:
            description: Retrieves the telephone number's information.
            responses:
                200:
                    description: The information has been successfully retrieved and displayed.
                    body:
                        application/xml:
                            example:
                                <TelephoneNumberResponse>
                                    <TelephoneNumber>2012035013</TelephoneNumber>
                                    <Status>Inservice</Status>
                                    <LastModifiedDate>2014-03-25 12:55:11.0</LastModifiedDate>
                                    <OrderCreateDate>2014-03-25T12:55:11.810Z</OrderCreateDate>
                                    <OrderId>cf79d3c3-21b7-4db7-9867-273a1867f934</OrderId>
                                    <OrderType>NEW_NUMBER_ORDER</OrderType>
                                    <SiteId>2409</SiteId>
                                    <AccountId>8000273</AccountId>
                                </TelephoneNumberResponse>
        /tndetails: 
            description: The get method retrieves detailed information about the phone number.
            get:
                description: |
                    Retrieves detailed information about the phone number.
                    TnAttributes - Does this telephone number is protected or not.
                responses:
                    200:
                        description: |
                            OK - the detailed information about the phone number has been successfully retrieved and displayed.<br>
                            TnAttributes is not required in the response.
                        body:
                            application/xml:
                                example: 
                                    <TelephoneNumberResponse>
                                        <TelephoneNumberDetails>
                                            <City>JERSEY CITY</City>
                                            <Lata>224</Lata>
                                            <State>NJ</State>
                                            <FullNumber>2018981023</FullNumber>
                                            <Tier>0</Tier>
                                            <VendorId>49</VendorId>
                                            <VendorName>Bandwidth CLEC</VendorName>
                                            <RateCenter>JERSEYCITY</RateCenter>
                                            <Status>Inservice</Status>
                                            <AccountId>14</AccountId>
                                            <Site>
                                                <Id>479</Id>
                                                <Name>site_9b08f</Name>
                                            </Site>
                                            <SipPeer>
                                                <PeerId>500014</PeerId>
                                                <PeerName>a2750fad-3</PeerName>
                                            </SipPeer>
                                            <LastModified>2014-07-30T11:29:37.000Z</LastModified>
                                            <Features>
                                                <E911>
                                                    <LastE911OrderOutcome>SUCCESS</LastE911OrderOutcome>
                                                    <SipPeerAddress>false</SipPeerAddress>
                                                    <CallerName>Test CallerName</CallerName>
                                                    <Address>
                                                        <HouseNumber>901</HouseNumber>
                                                        <StreetName>MAIN CAMPUS</StreetName>
                                                        <StreetSuffix>DR</StreetSuffix>
                                                        <City>RALEIGH</City>
                                                        <StateCode>NC</StateCode>
                                                        <Zip>27606</Zip>
                                                        <PlusFour>5244</PlusFour>
                                                        <Country>United States</Country>
                                                    </Address>
                                                </E911>
                                                <Lidb>
                                                    <Status>Pending</Status>
                                                    <SubscriberInformation>Fred</SubscriberInformation>
                                                    <UseType>BUSINESS</UseType>
                                                    <Visibility>PUBLIC</Visibility>
                                                </Lidb>
                                                <Dlda>
                                                    <Status>Success</Status>
                                                    <SubscriberType>BUSINESS</SubscriberType>
                                                    <ListingType>LISTED</ListingType>
                                                    <ListingName>
                                                        <FirstName>Joe</FirstName>
                                                        <LastName>Smith</LastName>
                                                    </ListingName>
                                                    <ListAddress>true</ListAddress>
                                                    <Address>
                                                        <HouseNumber>12</HouseNumber>
                                                        <StreetName>ELM</StreetName>
                                                        <City>New York</City>
                                                        <StateCode>NY</StateCode>
                                                        <Zip>10007</Zip>
                                                        <Country>United States</Country>
                                                        <AddressType>Dlda</AddressType>
                                                    </Address>
                                                </Dlda>
                                            </Features>
                                            <MessagingSettings>
                                                <SmsEnabled>true</SmsEnabled>
                                            </MessagingSettings>
                                            <TnAttributes>
                                                <TnAttribute>Protected</TnAttribute>
                                            </TnAttributes>
                                        </TelephoneNumberDetails>
                                    </TelephoneNumberResponse>
                    400:
                        description: Bad Request - failed to get detailed information about the current phone number.
                        body:
                            application/xml:
                                example: 
                                    <TelephoneNumberResponse>
                                        <ResponseStatus>
                                            <ErrorCode>12512</ErrorCode>
                                            <Description>Telephone number '123456789' is not valid</Description>
                                        </ResponseStatus>
                                    </TelephoneNumberResponse>
        /sites: 
            description: The get method retrieves the sites associated with that telephone number.
            get:
                description: Retrieves the sites associated with that telephone number.
                responses:
                    200:
                        description: The sites have been successfully retrieved and displayed.
                        body:
                            application/xml:
                                example:
                                    <Site>
                                        <Id>2409</Id>
                                        <Name>siteName</Name>
                                    </Site>
        /sippeers: 
            description: The get method retrieves the sippeers associated with that telephone number.
            get:
                description: Retrieves the sippeers associated with that telephone number.
                responses:
                    200:
                        description: The sippeers have been successfully retrieved and displayed.
                        body:
                            application/xml:
                                example:
                                    <SipPeer>
                                        <Id>305643</Id>
                                        <Name>PeerOneSiteThree</Name>
                                    </SipPeer>
        /ratecenter: 
            description: The get method retrieves the rate centers associated with that telephone number.
            get:
                description: Retrieves the rate centers associated with that telephone number.
                responses:
                    200:
                        description: The rate centers have been successfully retrieved and displayed.
                        body:
                            application/xml:
                                example:
                                    <TelephoneNumberResponse>
                                        <TelephoneNumberDetails>
                                            <State>NJ</State>
                                            <RateCenter>HACKENSACK</RateCenter>
                                        </TelephoneNumberDetails>
                                    </TelephoneNumberResponse>
        /lca: 
            description: | 
                Retrieves the LCA information associated with that telephone number.<br>
                This call will return the NPA-NXX pairs and the Rate Centers that are in the Local Calling Area of the Telephone Number in the API call. <br>
                Due to the fact that not all LCA relationships are symmetrical, the telephone number may not be part of the LCAs centered on the provided NPA-NXX or Rate Center values.
            get:
                description: Retrieves the LCAs associated with that telephone number.
                responses:
                    200:
                        description: The LCAs have been successfully retrieved and displayed.
                        body:
                            application/xml:
                                example:
                                    <SearchResult>
                                        <ListofNPANXX>
                                            <NPANXX>201202</NPANXX>
                                            <NPANXX>201203</NPANXX>
                                            <NPANXX>201206</NPANXX>
                                                <!--- SNIP --->
                                            <NPANXX>973930</NPANXX>
                                            <NPANXX>973931</NPANXX>
                                            <NPANXX>973955</NPANXX>
                                        </ListofNPANXX>
                                        <Location>
                                            <RateCenters>
                                                <State>NJ</State>
                                                <RCs>
                                                    <RC>CLIFFSIDE</RC>
                                                    <RC>DUMONT</RC>
                                                        <!--- SNIP --->
                                                    <RC>UNION CITY</RC>
                                                    <RC>WESTWOOD</RC>
                                                </RCs>
                                            </RateCenters>
                                        </Location>
                                    </SearchResult>
        /lata: 
            description: Retrieves the lata that contains the telephone number.
            get:
                description: Retrieves the lata associated with that telephone number.
                responses:
                    200:
                        description: The lata have been successfully retrieved.
                        body:
                            application/xml:
                                example:
                                    <TelephoneNumberResponse>
                                        <TelephoneNumberDetails>
                                            <Lata>224</Lata>
                                        </TelephoneNumberDetails>
                                    </TelephoneNumberResponse>
        /history: 
            description: |
                The history call returns a number of payload elements, each representing an event in the lifecycle of the Telephone Number. <br>
                Information returned includes the Order details that prompted the change in the TN status, including dates, order IDs and order types.
            get:
                description: Retrieves the history associated with that telephone number.
                responses:
                    200:
                        description: OK - the history has been successfully retrieved and displayed.
                        body:
                            application/xml:
                                example: 
                                    <TelephoneNumberResponse>
                                        <TelephoneNumberStatuses>
                                            <TelephoneNumberStatus>
                                                <AccountId>753</AccountId>
                                                <LastModifiedDate>2014-07-29T13:42:49.789Z</LastModifiedDate>
                                                <OrderCreateDate>2014-07-29T13:42:33.000Z</OrderCreateDate>
                                                <OrderId>58ee5da9-6357-4626-86fd-6faf4bf819b3</OrderId>
                                                <Status>Available</Status>
                                                <UserId>jbm</UserId>
                                                <OrderType>IMPORT_AVAILABLE_ORDER</OrderType>
                                            </TelephoneNumberStatus>
                                            <TelephoneNumberStatus>
                                                <AccountId>14</AccountId>
                                                <LastModifiedDate>2014-07-30T11:07:10.585Z</LastModifiedDate>
                                                <OrderCreateDate>2014-07-30T11:07:10.537Z</OrderCreateDate>
                                                <OrderId>90d7f38d-03fc-43f4-85f6-ed2608411775</OrderId>
                                                <Status>Inservice</Status>
                                                <UserId>jbm</UserId>
                                                <OrderType>NEW_NUMBER_ORDER</OrderType>
                                            </TelephoneNumberStatus>
                                            <TelephoneNumberStatus>
                                                <AccountId>14</AccountId>
                                                <LastModifiedDate>2014-07-30T11:24:17.834Z</LastModifiedDate>
                                                <OrderCreateDate>2014-07-30T11:24:17.834Z</OrderCreateDate>
                                                <OrderId>9c0d22f0-6cd6-42d8-b3e4-8a3e0dd18b6c</OrderId>
                                                <Status>Inservice</Status>
                                                <UserId>jbm</UserId>
                                                <OrderType>DLDA_ORDER</OrderType>
                                                <OrderStatus>RECEIVED</OrderStatus>
                                            </TelephoneNumberStatus>
                                            <TelephoneNumberStatus>
                                                <AccountId>14</AccountId>
                                                <LastModifiedDate>2014-07-30T11:24:18.842Z</LastModifiedDate>
                                                <OrderCreateDate>2014-07-30T11:24:17.834Z</OrderCreateDate>
                                                <OrderId>9c0d22f0-6cd6-42d8-b3e4-8a3e0dd18b6c</OrderId>
                                                <Status>Inservice</Status>
                                                <UserId>jbm</UserId>
                                                <OrderType>DLDA_ORDER</OrderType>
                                                <OrderStatus>PROCESSING</OrderStatus>
                                            </TelephoneNumberStatus>
                                            <TelephoneNumberStatus>
                                                <AccountId>14</AccountId>
                                                <LastModifiedDate>2014-07-30T11:24:22.224Z</LastModifiedDate>
                                                <OrderCreateDate>2014-07-30T11:24:17.834Z</OrderCreateDate>
                                                <OrderId>9c0d22f0-6cd6-42d8-b3e4-8a3e0dd18b6c</OrderId>
                                                <Status>Inservice</Status>
                                                <UserId>jbm</UserId>
                                                <OrderType>DLDA_ORDER</OrderType>
                                                <OrderStatus>PARTIAL</OrderStatus>
                                            </TelephoneNumberStatus>
                                        </TelephoneNumberStatuses>
                                        <TelephoneNumber>2018981023</TelephoneNumber>
                                    </TelephoneNumberResponse>
                    400:
                        description: Bad Request - failed to retrieve the history for the current phone number.
                    404:
                        description: Not Found - there aren't records about the phone number in history.
                        body:
                            application/xml:
                                example: 
                                    <ErrorResponse>
                                        <irisStatus>
                                            <Code>404</Code>
                                            <Description>Results were not found.</Description>
                                        </irisStatus>
                                    </ErrorResponse>
        /tnreservation: 
            description: |
                This API call retrieves any current reservation information associated with the Telephone Number, if a reservation is currently active on the indicated Telephone Number.
                The query is restricted to calls that do not exceed the account privileges of the calling user.
            get:
                description: Retrieves reservation information associated with the Telephone Number.
                responses:
                    200:
                        description: The reservation information has been successfully retrieved.
                        body:
                            application/xml:
                                example:
                                    <?xml version="1.0"?>
                                    <TNReservation>
                                        <ReservationID>d28529e6-23dc-408e-b7ad-f2015a6975d5</ReservationID>
                                        <Account>12346099</Account>
                                        <ReservationExpires>14346</ReservationExpires>
                                        <ReservedTN>6136211234</ReservedTN>
                                    </TNReservation>
        /e911: 
            description: Retrieves the e911 information associated with that telephone number.
            get:
                description: Retrieves the e911 information associated with that telephone number.
                responses:
                    200:
                        description: The e911 address have been successfully retrieved and displayed.
                        body:
                            application/xml:
                                example:
                                    <TnE911AddressResponse>
                                        <Address>
                                            <Name>Test address</Name>
                                            <City>RALEIGH</City>
                                            <HouseNumber>900</HouseNumber>
                                            <StateCode>NC</StateCode>
                                            <StreetName>MAIN CAMPUS DR</StreetName>
                                            <Zip>27606</Zip>
                                            <PlusFour>5214</PlusFour>
                                        </Address>
                                    </TnE911AddressResponse>
/orders: 
    description: |
        New number orders track the assignment of TNs to Accounts, and comprise the most common use of the Bandwidth Dashboard API.
        The *+orders+* global search API will search the system for new number orders, filtered by a wide range of filter parameters.
    get:
        description: |
            Retrieve information about one or more New Number Orders (orders), where the orders are chosen based on the search parameters provided in the API Call. 
            Not all search parameters are compatible with all other search parameters, due to the complexity of searching for historical records using highly parameterized or complex searches.  As a result:
            * all query parameters are compatible with the exception of...
            ** if modifiedFromDate or modifiedToDate are specified, then the only other valid search parameters are accountId, sippeerId or siteId
            ** sippeerId and siteId are only compatible with searches that have a date range parameter.
        queryParameters:
            accountId:
                description: This is the account that the searched-for order will be contributing to.  Specifying this parameter will restrict the search to new number orders within the specified account.
                type: integer
                example: 9900012
                repeat: true
            invertAccountIdSearch:
                description: This flag makes it possible to exclude accounts from the search.
                type: boolean
                example: true
            status:
                description: The status of the new number order being searched for.
                type: string
                example: BACKORDERED
                enum: [PARTIAL, FAILED, BACKORDERED, COMPLETE]
                repeat: true
            tn:
                description: A Telephone Number (TN) that is referenced in the order - a TN ported by the Port Order
                type: string
                example: 9199918388
            customerOrderId:
                description: The Customer Order ID is an ID assigned by the account owner to provide a reference number for the Port.
                type: string
                example: ABCCorp12345
            orderIdFragment:
                description: This search parameter represents the internal Bandwidth Dashboard ID that has been assigned to the Port Order.  This parameter is the first few characters of the internal ID - the entire ID does not need to be specified.
                type: string
                example: ed1c0bed-e2
            siteId:
                description: The numeric designation for the Site ID that applied to the Port-in Order.  The SiteId is used to provide a home within the account for the TN(s) that were ported in by the Port-in Order.
                type: integer
                example: 645881
            sippeerId:
                description: The numeric designation for the Location or SIP PEER ID that applied to the Port-in Order.  The SIP Peer ID is used to provide a home within the location for the TN(s) that were ported in by the Port-in Order.
                type: integer
                example: 456
            activityState:
                description: The Order-Management state of the Port-in Order - used to manage orders within Bandwidth.  This parameter may not be exposed in the external representation of the API
                type: string
                enum: [quiet, responded, changed, seen]
                example: responded
                repeat: true
            bandwidthPrime:
                description: The name of the Bandwidth person responsible for managing the Port-in Order - used to manage orders within Bandwidth.  This parameter may not be exposed in the external representation of the API.
                example: GeorgeB
                type: string
                repeat: true
            modifiedDateFrom:
                description: For Date-based searches, the starting date of a date range that will be used to find Port-in Orders that were modified within the date range.  It is in the form yyyy-MM-dd.
                type: string
                example: 2013-10-22
            modifiedDateTo:
                description: For Date-based searches, the ending date of a date range that will be used to find Port-in Orders that were modified within the date range.  It is in the form yyyy-MM-dd.
                type: string
                example: 2013-10-25
            createdDateFrom: 
                description: Checks the order's creation date against this value. Orders that have a creation date after this date will be included. Format is yyyy-MM-dd 
                type: string
                example: 2013-10-22
            createdDateTo:
                description: Checks the order's creation date against this value. Orders that have a creation date before this date will be included. Format is yyyy-MM-dd 
                type: string
                example: 2013-10-25
            lastModifiedAfter:
                description: Checks the order's last modified date against this value. Orders that have a modification date after this date will be included. Format is yyyy-MM-dd 
                type: string
                example: 2013-10-25
            includeInResponse:
                description: Includes optional values into the response according to the provided value. Multiple values can be provided.
                type: string
                enum: [LAST_NOTE, SUPP_COUNT, ADMIN_INFO]
                repeat: true
                example: includeInResponse=LAST_NOTE&amp;includeInResponse=ADMIN_INFO
        responses:    
            200:
                description: |
                    The descriptive payload for the New number Orders query provides a broad range of information about the New number Orders found by the query, including the data associated with the order, the state of the order, and details about the order if it was successful.
                    If the order successfully completes the TelephoneNumberDetails element will provide classification information on the Telephone Numbers that were included as part of the order.
                body: 
                    application/xml:
                        example: |
                            <?xml version="1.0"?>
                            <ResponseSelectWrapper>
                                <ListOrderIdUserIdDate>
                                    <TotalCount>2122</TotalCount>
                                    <OrderIdUserIdDate>
                                        <accountId>9999999</accountId>
                                        <CountOfTNs>0</CountOfTNs>
                                        <lastModifiedDate>2014-02-25T16:02:43.195Z</lastModifiedDate>
                                        <OrderDate>2014-02-25T16:02:43.195Z</OrderDate>
                                        <orderId>abe36738-6929-4c6f-926c-88e534e2d46f</orderId>
                                        <OrderStatus>FAILED</OrderStatus>
                                        <TelephoneNumberDetails/>
                                        <userId>team_ua</userId>
                                    </OrderIdUserIdDate>
                                    <OrderIdUserIdDate>
                                        <accountId>9999999</accountId>
                                        <CountOfTNs>0</CountOfTNs>
                                        <lastModifiedDate>2014-02-25T16:02:40.628Z</lastModifiedDate>
                                        <OrderDate>2014-02-25T16:02:40.628Z</OrderDate>
                                        <orderId>18427880-33a9-4282-a196-f740c720bb9e</orderId>
                                        <OrderStatus>COMPLETE</OrderStatus>
                                        <TelephoneNumberDetails>
                                            <States>
                                                <StateWithCount>
                                                    <State>VA</State>
                                                    <Count>1</Count>
                                                </StateWithCount>
                                            </States>
                                            <RateCenters>
                                                <RateCenterWithCount>
                                                    <Count>1</Count>
                                                    <RateCenter>GLOUCESTER</RateCenter>
                                                </RateCenterWithCount>
                                            </RateCenters>
                                            <Cities>
                                                <CityWithCount>
                                                    <City>GLOUCESTER</City>
                                                    <Count>1</Count>
                                                </CityWithCount>
                                            </Cities>
                                            <Tiers>
                                                <TierWithCount>
                                                    <Tier>0</Tier>
                                                    <Count>1</Count>
                                                </TierWithCount>
                                            </Tiers>
                                            <Vendors>
                                                <VendorWithCount>
                                                    <VendorId>49</VendorId>
                                                    <VendorName>Bandwidth CLEC</VendorName>
                                                    <Count>1</Count>
                                                </VendorWithCount>
                                            </Vendors>
                                        </TelephoneNumberDetails>
                                        <userId>team_ua</userId>
                                    </OrderIdUserIdDate>
                                    ...SNIP...
                                    <OrderIdUserIdDate>
                                        <accountId>9999999</accountId>
                                        <CountOfTNs>0</CountOfTNs>
                                        <lastModifiedDate>2014-02-25T16:02:39.345Z</lastModifiedDate>
                                        <OrderDate>2014-02-25T16:02:39.345Z</OrderDate>
                                        <orderId>d7eff0d8-303c-4f11-86f8-44740bbd4535</orderId>
                                        <OrderStatus>FAILED</OrderStatus>
                                        <userId>team_ua</userId>
                                    </OrderIdUserIdDate>
                                    <OrderIdUserIdDate>
                                        <accountId>9999999</accountId>
                                        <CountOfTNs>0</CountOfTNs>
                                        <lastModifiedDate>2014-02-25T16:02:39.021Z</lastModifiedDate>
                                        <OrderDate>2014-02-25T16:02:39.021Z</OrderDate>
                                        <orderId>ba5b6297-139b-4430-aab0-9ff02c4362f4</orderId>
                                        <OrderStatus>FAILED</OrderStatus>
                                        <userId>team_ua</userId>
                                    </OrderIdUserIdDate>
                                </ListOrderIdUserIdDate>
                            </ResponseSelectWrapper>
            404:
                description: Not Found.  If any errors are found in the processing of the query string a 404 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored. 
    /{orderId}: 
        description: |
            The "orderId" resource refers to a specific element of the orders collection.  Examining that resource provides detailed information on the specific identified order.
        get:
            description: |
                Retrieve information about a specific New Number Order identified as the resource.
            responses:    
                200:
                    description: |
                        The descriptive payload for the New number Orders query provides a broad range of information about the New number Order identified in the URL.  Included amongst the information is:
                        <ul>
                            <li>CompletedQuantity - the number of TNs returned by the Order</li>
                            <li>ErrorList - the errors discovered with codes and explanations</li>
                            <li>FailedNumbers - a list of numbers that were not orderable</li>
                            <li>various dates</li>
                            <li>Order - the order payload to record the request</li>
                            <li>OrderStatus - the overall status of the order</li>
                            <li>CompletedNumbers - details on each number returned as part of the order, containing geographic and telecom information about that number</li>
                        </ul>
                    body: 
                        application/xml:
                            example: |
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <OrderResponse>
                                    <CompletedQuantity>2</CompletedQuantity>
                                    <CreatedByUser>jbm</CreatedByUser>
                                    <ErrorList>
                                        <Error>
                                            <Code>5005</Code>
                                            <Description> The telephone number is unavailable for ordering : 8042100000</Description>
                                            <TelephoneNumber>8042100000</TelephoneNumber>
                                        </Error>
                                    </ErrorList>
                                    <FailedNumbers>
                                        <FullNumber>8042100000</FullNumber>
                                    </FailedNumbers>
                                    <LastModifiedDate>2014-02-20T19:33:17.600Z</LastModifiedDate>
                                    <OrderCompleteDate>2014-02-20T19:33:17.600Z</OrderCompleteDate>
                                    <Order>
                                        <OrderCreateDate>2014-02-20T19:33:17.504Z</OrderCreateDate>
                                        <PeerId>303661</PeerId>
                                        <BackOrderRequested>false</BackOrderRequested>
                                        <ExistingTelephoneNumberOrderType>
                                            <TelephoneNumberList>
                                                <TelephoneNumber>8042105618</TelephoneNumber>
                                                <TelephoneNumber>8042105760</TelephoneNumber>
                                                <TelephoneNumber>8042100000</TelephoneNumber>
                                            </TelephoneNumberList>
                                        </ExistingTelephoneNumberOrderType>
                                        <TnAttributes>
                                                <TnAttribute>Protected</TnAttribute>
                                        </TnAttributes>
                                        <PartialAllowed>true</PartialAllowed>
                                        <SiteId>743</SiteId>
                                    </Order>
                                    <OrderStatus>PARTIAL</OrderStatus>
                                    <CompletedNumbers>
                                        <TelephoneNumber>
                                            <City>GLOUCESTER</City>
                                            <LATA>248</LATA>
                                            <RateCenter>GLOUCESTER</RateCenter>
                                            <State>VA</State>
                                            <FullNumber>8042105618</FullNumber>
                                            <Tier>0</Tier>
                                            <VendorId>49</VendorId>
                                            <VendorName>Bandwidth CLEC</VendorName>
                                        </TelephoneNumber>
                                        <TelephoneNumber>
                                            <City>GLOUCESTER</City>
                                            <LATA>248</LATA>
                                            <RateCenter>GLOUCESTER</RateCenter>
                                            <State>VA</State>
                                            <FullNumber>8042105760</FullNumber>
                                            <Tier>0</Tier>
                                            <VendorId>49</VendorId>
                                            <VendorName>Bandwidth CLEC</VendorName>
                                        </TelephoneNumber>
                                    </CompletedNumbers>
                                    <FailedQuantity>1</FailedQuantity>
                                </OrderResponse>
                404:
                    description: NOT FOUND - the order id does not exist in the system
                    body: 
                        application/xml:
                            example: |
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <TnOrderReportResponse>
                                    <ResponseStatus>
                                        <Description>The resource does not exist</Description>
                                    </ResponseStatus>
                                </TnOrderReportResponse>
        /history: 
            description: |
                History information is available on orders that have gone through multiple transitions, which is possible in the case that telephone numbers are backordered.  In this case the order will have one or more OrderHistory records associated with it, detailing the set of events that have affected the order.
            get:
                description: |
                    Retrieve the history information associated with an order
                responses:    
                    200:
                        description: |
                            The history payload is a set of history records, each of which contains:
                            <ul>
                            <li>the event date and time</li>
                            <li>a message describing the event</li>
                            <li>the user causing the event</li>
                            <li>the order status at the time of the event</li>
                            </ul>
                            In the case of an order with no events other than creation, the payload will be empty.
                        body: 
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <OrderHistoryWrapper>
                                        <OrderHistory>
                                            <OrderDate>2014-05-20T14:21:43.937Z</OrderDate>
                                            <Note>Order backordered - awaiting additional numbers</Note>
                                            <Author>System</Author>
                                            <Status>BACKORDERED</Status>
                                        </OrderHistory>
                                        <OrderHistory>
                                            <OrderDate>2014-05-20T14:24:43.428Z</OrderDate>
                                            <Note>Order backordered - awaiting additional numbers</Note>
                                            <Author>System</Author>
                                            <Status>BACKORDERED</Status>
                                            <Difference>CustomerOrderId : "" --&gt; hello</Difference>
                                        </OrderHistory>
                                    </OrderHistoryWrapper>
/lsrorders: 
    description: |
        Lsr orders description.
    get:
        description: |
            Retrieve information about one or more Lsr orders, where the orders are chosen based on the search parameters provided in the API Call.
        queryParameters:
            accountId:
                description: This is the account that the searched-for order will be contributing to.  Specifying this parameter will restrict the search to portin orders within the specified account.
                type: integer
                example: 9900012
                repeat: true
            invertAccountIdSearch:
                description: This flag makes it possible to exclude accounts from the search.
                type: boolean
                example: true
            status:
                description: The status of the Lsr order being searched for.
                type: string
                example: EXCEPTION
                enum: [PENDING, FOC, EXCEPTION, CANCELED, COMPLETE, FAILED]
                repeat: true
            tn:
                description: A Telephone Number (TN) that is referenced in the order.
                type: string
                example: 9199918388
            pon:
                description: The PON that is referenced in the Lsr order.
                type: string
                example: Available
            btn:
                description: The BTN (Business Telephone Number) is typically the telephone number associated with the business owner of the TN.
                type: string
                example: 9199918388
            customerOrderId:
                description: The Customer Order ID is an ID assigned by the account owner to provide a reference number for the Port.
                type: string
                example: ABCCorp12345
            orderIdFragment:
                description: This search parameter represents the internal Bandwidth Dashboard ID that has been assigned to the Lsr Order.  This parameter is the first few characters of the internal ID - the entire ID does not need to be specified.
                type: string
                example: ed1c0bed-e2
            requestedFocDate:
                description: This is the FOC (Final Order Commit) Date requested by the person (or machine) creating the Lsr Order.
                type: date
                example: |
                    2015-10-22
            actualFocDate:
                description: This is the FOC (Final Order Commit) Date assigned to the Lsr Order by the loosing carrier or their agent.
                type: date
                example: |
                    2015-10-22
            lastModifiedBy:
                description: This is the user-id of the user that last modified the Lsr Order.
                type: string
                example: smckinnon
            activityState:
                description: The Order-Management state of the Lsr Order - used to manage orders within Bandwidth.  This parameter may not be exposed in the external representation of the API
                type: string
                enum: [quiet, responded, changed, seen]
                example: responded
                repeat: true
            bandwidthPrime:
                description: The name of the Bandwidth person responsible for managing the Lsr Order - used to manage orders within Bandwidth.  This parameter may not be exposed in the external representation of the API.
                type: string
                example: GeorgeB
                repeat: true
            modifiedFromDate:
                description: For Date-based searches, the starting date of a date range that will be used to find Lsr Orders that were modified within the date range.  It is in the form YY-MM-DD.
                type: date
                example: |
                    2015-10-22
            modifiedToDate:
                description: For Date-based searches, the ending date of a date range that will be used to find Lsr Orders that were modified within the date range.  It is in the form YY-MM-DD.
                type: date
                example: |
                    2015-10-25
            createdDateFrom:
                description: Checks the order's creation date against this value. Orders that have a creation date after this date will be included. Format is yyyy-MM-dd
                type: date
                example: |
                    2015-10-22
            createdDateTo:
                description: Checks the order's creation date against this value. Orders that have a creation date before this date will be included. Format is yyyy-MM-dd
                type: date
                example: |
                    2015-10-25
            lastModifiedAfter:
                description: Checks the order's last modified date against this value. Orders that have a modification date after this date will be included. Format is yyyy-MM-dd
                type: date
                example: |
                    2013-10-25
            includeInResponse:
                description: Includes optional values into the response according to the provided value. Multiple values can be provided.
                type: string
                enum: [LAST_NOTE, SUPP_COUNT, ADMIN_INFO]
                repeat: true
                example: includeInResponse=LAST_NOTE&amp;includeInResponse=ADMIN_INFO
        responses:    
            200:
                description: |
                    The descriptive payload for the Lsr Orders query provides a broad range of information about the Lsr Orders found by the query, including the data associated with the order, the state of the order, and information about any error conditions encountered in processing of the order
                body: 
                    application/xml:
                        example: |
                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                            <LsrOrders>
                                <TotalCount>5</TotalCount>
                                <LsrOrderSummary>
                                    <accountId>9999999</accountId>
                                    <CountOfTNs>2</CountOfTNs>
                                    <CustomerOrderId>FineCustomerid</CustomerOrderId>
                                    <userId>team_ua</userId>
                                    <lastModifiedDate>2015-03-02T09:10:16.193Z</lastModifiedDate>
                                    <OrderType>lsr</OrderType>
                                    <OrderDate>2015-03-25T11:44:42.941Z</OrderDate>
                                    <OrderStatus>PENDING</OrderStatus>
                                    <ActualFocDate>2015-03-25</ActualFocDate>
                                    <BillingTelephoneNumber>2526795000</BillingTelephoneNumber>
                                    <CreatedByUser>lsrOnlyUser</CreatedByUser>
                                    <OrderId>7d644c88-ef23-4307-96ab-20253666d0c7</OrderId>
                                    <Pon>ATT-011515-324234</Pon>
                                    <PonVersion>0</PonVersion>
                                    <RequestedFocDate>2015-11-15</RequestedFocDate>
                                </LsrOrderSummary>
                                <!-- SNIP -->
                                <LsrOrderSummary>
                                    <accountId>9999999</accountId>
                                    <CountOfTNs>2</CountOfTNs>
                                    <CustomerOrderId>MyId5</CustomerOrderId>
                                    <lastModifiedDate>2015-03-03T14:07:19.926Z</lastModifiedDate>
                                    <OrderType>lsr</OrderType>
                                    <OrderDate>2015-03-25T11:44:42.941Z</OrderDate>
                                    <OrderStatus>FAILED</OrderStatus>
                                    <Errors>
                                        <Error>
                                            <Code>17008</Code>
                                            <Description>
                                                FOC date cannot fall on a holiday
                                            </Description>
                                        </Error>
                                    </Errors>
                                    <CreatedByUser>lsrOnlyUser</CreatedByUser>
                                    <OrderId>00cf7e08-cab0-4515-9a77-2d0a7da09415</OrderId>
                                    <Pon>testpon1002</Pon>
                                    <PonVersion>0</PonVersion>
                                    <RequestedFocDate>2015-11-15</RequestedFocDate>
                                </LsrOrderSummary>
                            </LsrOrders>
            404:
                description: Not Found.  If any errors are found in the processing of the query string a 404 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored. 
    /{orderid}: 
        description: This resource retrieves information associated with the lsr ID number specified.
        get:
            description: Retrieves the information associated with the specified lsr ID number.
            responses:
                200:
                    description: The information has been successfully retrieved and displayed in the payload.
                    body:
                        application/xml:
                            example: |
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <LsrOrder>
                                        <CustomerOrderId>MyId5</CustomerOrderId>
                                        <LastModifiedBy>System</LastModifiedBy>
                                        <OrderCreateDate>2015-03-03T13:54:00.450Z</OrderCreateDate>
                                        <AccountId>9999999</AccountId>
                                        <OrderId>00cf7e08-cab0-4515-9a77-2d0a7da09415</OrderId>
                                        <LastModifiedDate>2015-03-03T14:07:19.926Z</LastModifiedDate>
                                        <OrderStatus>FAILED</OrderStatus>
                                        <BillingTelephoneNumber>9192381468</BillingTelephoneNumber>
                                        <Pon>testpon1002</Pon>
                                        <PonVersion>0</PonVersion>
                                        <RequestedFocDate>2015-11-15</RequestedFocDate>
                                        <AuthorizingPerson>Jim Hopkins</AuthorizingPerson>
                                        <Subscriber>
                                            <SubscriberType>BUSINESS</SubscriberType>
                                            <BusinessName>BusinessName</BusinessName>
                                            <AccountNumber>123463</AccountNumber>
                                            <PinNumber>1231</PinNumber>
                                            <ServiceAddress>
                                                <HouseNumber>11</HouseNumber>
                                                <StreetName>Park</StreetName>
                                                <StreetSuffix>Ave</StreetSuffix>
                                                <City>New York</City>
                                                <StateCode>NY</StateCode>
                                                <Zip>90025</Zip>
                                            </ServiceAddress>
                                        </Subscriber>
                                        <ListOfTelephoneNumbers>
                                            <TelephoneNumber>9192381467</TelephoneNumber>
                                            <TelephoneNumber>9192381468</TelephoneNumber>
                                        </ListOfTelephoneNumbers>
                                        <LsrOrderErrors>
                                            <LsrOrderError>
                                                <Code>17008</Code>
                                                <Description>
                                                    FOC date cannot fall on a holiday
                                                </Description>
                                            </LsrOrderError>
                                        </LsrOrderErrors>
                                        <CountOfTNs>2</CountOfTNs>
                                    </LsrOrder>
        /history: 
            description: This resource retrieves the history of a lsr order.
            get:
                description: Retrieves the history of the specified lsr order.
                responses:
                    200:
                        description: The history has been successfully retrieved and displayed in the payload.
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <OrderHistoryWrapper>
                                        <OrderHistory>
                                            <OrderDate>2015-03-02T15:36:31.835Z</OrderDate>
                                            <Note>LSR has been received by the system and is being processed</Note>
                                            <Author>lsrOnly</Author>
                                            <Status>PENDING</Status>
                                        </OrderHistory>
                                        <OrderHistory>
                                            <OrderDate>2015-03-02T15:37:33.457Z</OrderDate>
                                            <Note>Port-out date has been set</Note>
                                            <Status>FOC</Status>
                                            <Difference>ActualFocDate : "" --&gt; 2015-06-27</Difference>
                                        </OrderHistory>
                                    </OrderHistoryWrapper>
/portins: 
    description: |
        Port-Ins are perhaps the most critical order-type managed by the Bandwidth Dashboard.  The Port-in order type is used to manage the porting of numbers into the Bandwidth CLEC network, and as such are responsible for managing and tracking the most complex business process in the CLEC provisioning domain.
        The portins resource is representative of the set of all Port-in orders ( for all accounts ) managed by the Bandwidth Dashboard.
        This API is used to search that set of records.
    get:
        description: |
            Retrieve information about one or more Port-in Orders (portins), where the orders are chosen based on the search parameters provided in the API Call. 
        queryParameters:
            accountId:
                description: This is the account that the searched-for order will be contributing to.  Specifying this parameter will restrict the search to portin orders within the specified account.
                type: integer
                example: 9900012
                repeat: true
            invertAccountIdSearch:
                description: This flag makes it possible to exclude accounts from the search.
                type: boolean
                example: true
            status:
                description: The status of the portin order being searched for.
                type: string
                example: EXCEPTION
                enum: [SUBMITTED, EXCEPTION, FOC, CANCELLED, COMPLETE]
                repeat: true
            tn:
                description: A Telephone Number (TN) that is referenced in the order - a TN ported by the Port Order
                type: string
                example: 9199918388
            pon:
                description: The PON that is referenced in the Port Order.  A PON is a number assigned to the Port-in Order as part of the porting process by the partner or winner to aid in the identificatoin of a Port Order.
                type: string
                example: Available
            btn:
                description: The BTN (Business Telephone Number) is typically the telephone number associated with the business owner of the TN.
                type: string
                example: 9199918388
            customerOrderId:
                description: The Customer Order ID is an ID assigned by the account owner to provide a reference number for the Port.
                type: string
                example: ABCCorp12345
            orderIdFragment:
                description: This search parameter represents the internal Bandwidth Dashboard ID that has been assigned to the Port Order.  This parameter is the first few characters of the internal ID - the entire ID does not need to be specified.
                type: string
                example: ed1c0bed-e2
            requestedFocDate:
                description: This is the FOC (Final Order Commit) Date requested by the person (or machine) creating the Port-in Order.
                type: string
                example: 13-10-22
            actualFocDate:
                description: This is the FOC (Final Order Commit) Date assigned to the Port-in Order by the loosing carrier or their agent.
                type: string
                example: 13-10-22
            lastModifiedBy:
                description: This is the user-id of the user that last modified the Port-in Order.
                type: string
                example: smckinnon
            siteId:
                description: The numeric designation for the Site ID that applied to the Port-in Order.  The SiteId is used to provide a home within the account for the TN(s) that were ported in by the Port-in Order.
                type: integer
                example: 645881
            sippeerId:
                description: The numeric designation for the Location or SIP PEER ID that applied to the Port-in Order.  The SIP Peer ID is used to provide a home within the location for the TN(s) that were ported in by the Port-in Order.
                type: integer
                example: 456
            activityState:
                description: The Order-Management state of the Port-in Order - used to manage orders within Bandwidth.  This parameter may not be exposed in the external representation of the API
                type: string
                enum: [quiet, responded, changed, seen]
                example: responded
                repeat: true
            bandwidthPrime:
                description: The name of the Bandwidth person responsible for managing the Port-in Order - used to manage orders within Bandwidth.  This parameter may not be exposed in the external representation of the API.
                type: string
                example: GeorgeB
                repeat: true
            modifiedFromDate:
                description: For Date-based searches, the starting date of a date range that will be used to find Port-in Orders that were modified within the date range.  It is in the form YY-MM-DD.
                type: string
                example: 13-10-22
            modifiedToDate:
                description: For Date-based searches, the ending date of a date range that will be used to find Port-in Orders that were modified within the date range.  It is in the form YY-MM-DD.
                type: string
                example: 13-10-25
        responses:    
            200:
                description: |
                    The descriptive payload for the Port-in Orders query provides a broad range of information about the Port-in Orders found by the query, including the data associated with the order, the state of the order, and information about any error conditions encountered in processing of the order
                body: 
                    application/xml:
                        example: |
                            <?xml version="1.0"?>
                            <LNPResponseWrapper>
                                <TotalCount>20</TotalCount>
                                <lnpPortInfoForGivenStatus>
                                    <accountId>2</accountId>
                                    <CountOfTNs>1</CountOfTNs>
                                    <lastModifiedDate>2014-02-10T12-52-27.021Z</lastModifiedDate>
                                    <LNPLosingCarrierId>1537</LNPLosingCarrierId>
                                    <LNPLosingCarrierName>Test Losing Carrier L3</LNPLosingCarrierName>
                                    <OrderDate>2013-11-19T22-29-01.336Z</OrderDate>
                                    <OrderId>7b08cec0-390b-4a27-a30f-3bcb8876cb8e</OrderId>
                                    <ProcessingStatus>CANCELLED</ProcessingStatus>
                                    <RequestedFOCDate>2013-11-25T13-00-00.000Z</RequestedFOCDate>
                                    <userId>jbm</userId>
                                    <VendorId>49</VendorId>
                                    <VendorName>Bandwidth CLEC</VendorName>
                                </lnpPortInfoForGivenStatus>
                                <lnpPortInfoForGivenStatus>
                                    <accountId>1</accountId>
                                    <BillingTelephoneNumber>3125462291</BillingTelephoneNumber>
                                    <CountOfTNs>1</CountOfTNs>
                                    <lastModifiedDate>2014-02-04T19-41-15.313Z</lastModifiedDate>
                                    <Errors>
                                        <Error>
                                            <Code>7300</Code>
                                            <Description>
                                                The order cannot be modified because the order is awaiting a response from the losing carrier
                                            </Description>
                                        </Error>
                                    </Errors>
                                    <LNPLosingCarrierId>1536</LNPLosingCarrierId>
                                    <LNPLosingCarrierName>Neustar Test Carrier</LNPLosingCarrierName>
                                    <OrderId>792f12d4-2367-4282-9cec-7b4f92b75eeb</OrderId>
                                    <ProcessingStatus>REQUESTED_SUPP</ProcessingStatus>
                                    <RequestedFOCDate>2014-02-05T19-36-13.000Z</RequestedFOCDate>
                                    <userId>jbm</userId>
                                    <VendorId>49</VendorId>
                                    <VendorName>Bandwidth CLEC</VendorName>
                                    <PON>979E0122150001D5</PON>
                                </lnpPortInfoForGivenStatus>
                                <lnpPortInfoForGivenStatus> ... </lnpPortInfoForGivenStatus>
                                ... snip ...
                                <lnpPortInfoForGivenStatus>
                                    <accountId>1</accountId>
                                    <BillingTelephoneNumber>6882011401</BillingTelephoneNumber>
                                    <CountOfTNs>1</CountOfTNs>
                                    <lastModifiedDate>2014-02-16T13-51-06.417Z</lastModifiedDate>
                                    <Errors>
                                        <Error>
                                            <Code>7205</Code>
                                            <Description>
                                                Telephone number is already being processed on another order
                                            </Description>
                                        </Error>
                                    </Errors>
                                    <LNPLosingCarrierId>1536</LNPLosingCarrierId>
                                    <LNPLosingCarrierName>Neustar Test Carrier</LNPLosingCarrierName>
                                    <OrderDate>2014-02-16T13-51-05.697Z</OrderDate>
                                    <OrderId>af1df8a9-4d6f-4d23-a7c5-ef7d1561af26</OrderId>
                                    <ProcessingStatus>CANCELLED</ProcessingStatus>
                                    <RequestedFOCDate>2014-02-17T13-51-06.056Z</RequestedFOCDate>
                                    <userId>jbm</userId>
                                    <VendorId>49</VendorId>
                                    <VendorName>Bandwidth CLEC</VendorName>
                                </lnpPortInfoForGivenStatus>
                            </LNPResponseWrapper>
            404:
                description: Not Found.  If any errors are found in the processing of the query string a 404 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored. 
    /{orderid}: 
        description: This resource retrieves information associated with the port-in ID number specified.
        get:
            description: Retrieves the information associated with the specified port-in ID number.
            responses:
                200:
                    description: The information has been successfully retrieved and displayed in the payload.
                    body:
                        application/xml:
                            example: |
                                <LnpOrderResponse>
                                    <Errors>
                                        <Code>7205</Code>
                                        <Description>Telephone number is already being processed on another order</Description>
                                    </Errors>
                                    <ProcessingStatus>CANCELLED</ProcessingStatus>
                                    <LoaAuthorizingPerson>The Authguy</LoaAuthorizingPerson>
                                    <Subscriber>
                                        <SubscriberType>BUSINESS</SubscriberType>
                                        <FirstName>First</FirstName>
                                        <LastName>Last</LastName>
                                        <ServiceAddress>
                                            <HouseNumber>11235</HouseNumber>
                                            <StreetName>Back</StreetName>
                                            <City>Denver</City>
                                            <StateCode>CO</StateCode>
                                            <Zip>27541</Zip>
                                            <County>Canyon</County>
                                            <Country>United States</Country>
                                            <AddressType>Service</AddressType>
                                        </ServiceAddress>
                                    </Subscriber>
                                    <WirelessInfo>
                                        <AccountNumber>771297665AABC</AccountNumber>
                                        <PinNumber>1234</PinNumber>
                                    </WirelessInfo>
                                    <TnAttributes>
                                        <TnAttribute>Protected</TnAttribute>
                                    </TnAttributes>
                                    <BillingTelephoneNumber>9195551234</BillingTelephoneNumber>
                                    <ListOfPhoneNumbers>
                                        <PhoneNumber>9194809871</PhoneNumber>
                                    </ListOfPhoneNumbers>
                                    <AccountId>20</AccountId>
                                    <SiteId>2857</SiteId>
                                    <PeerId>317771</PeerId>
                                    <LosingCarrierName>Mock Carrier</LosingCarrierName>
                                    <VendorName>Bandwidth CLEC</VendorName>
                                    <OrderCreateDate>2014-08-04T13:37:06.323Z</OrderCreateDate>
                                    <LastModifiedDate>2014-08-04T13:37:08.676Z</LastModifiedDate>
                                    <userId>jbm</userId>
                                    <LastModifiedBy>jbm</LastModifiedBy>
                                    <PartialPort>false</PartialPort>
                                    <Immediately>false</Immediately>
                                    <BillingType>PORTIN</BillingType>
                                </LnpOrderResponse>
        /history: 
            description: This resource retrieves the history of a port-in order. 
            get:
                description: Retrieves the history of the specified port-in order.
                responses:
                    200:
                        description: The history has been successfully retrieved and displayed in the payload.
                        body:
                            application/xml:
                                example: |
                                    <OrderHistoryWrapper>
                                        <OrderHistory>
                                            <OrderDate>2014-07-29T17:12:29.495Z</OrderDate>
                                            <Note>LOA required</Note>
                                            <Author>jbm</Author>
                                            <Status>PENDING_DOCUMENTS</Status>
                                        </OrderHistory>
                                        <OrderHistory>
                                            <OrderDate>2014-07-29T17:12:32.121Z</OrderDate>
                                            <Note>Order has been created</Note>
                                            <Author>System</Author>
                                            <Status>SUBMITTED</Status>
                                            <Difference>LoaDate : "" --&gt; Tue Jul 29 17:12:29 UTC 2014</Difference>
                                        </OrderHistory>
                                        <OrderHistory>
                                            <OrderDate>2014-07-29T17:15:31.241Z</OrderDate>
                                            <Note>7999: E37 TN not found in PPS (PPS)</Note>
                                            <Author>System</Author>
                                            <Status>EXCEPTION</Status>
                                        </OrderHistory>
                                        <OrderHistory>
                                            <OrderDate>2014-07-29T17:15:40.836Z</OrderDate>
                                            <Note>Order waiting for activation</Note>
                                            <Author>System</Author>
                                            <Status>FOC</Status>
                                        </OrderHistory>
                                        <OrderHistory>
                                            <OrderDate>2014-07-29T17:16:20.347Z</OrderDate>
                                            <Note>Order is complete</Note>
                                            <Author>System</Author>
                                            <Status>COMPLETE</Status>
                                        </OrderHistory>
                                    </OrderHistoryWrapper>
/portouts: 
    description: |
        Port out records represent the work that (typically) already been done to remove a TN from our system.  
        The ability to search the set of all port-out work orders allows us to validate that removing numbers from the account
        was done correctly.
    get:
        description: |
            Retrieve information about one or more Port-Out Orders (portins), where the orders are chosen based on the search parameters provided in the API Call. 
            Not all search parameters are compatible with all other search parameters, due to the complexity of searching for historical records using highly parameterized or complex searches.  As a result:
            * all query parameters are compatible with the exception of...
            ** if modifiedFromDate or modifiedToDate are specified, then the only other valid search parameters are accountId, sippeerId or siteId
            ** sippeerId and siteId are only compatible with searches that have a date range parameter.
        queryParameters:
            accountId:
                description: This is the account that the searched-for order will be contributing to.  Specifying this parameter will restrict the search to portin orders within the specified account.
                type: integer
                example: 9900012
                repeat: true
            invertAccountIdSearch:
                description: This flag makes it possible to exclude accounts from the search.
                type: boolean
                example: true
            status:
                description: The status of the portin order being searched for.
                type: string
                example: EXCEPTION
                enum: [SUBMITTED, EXCEPTION, FOC, CANCELLED, COMPLETE]
                repeat: true
            tn:
                description: A Telephone Number (TN) that is referenced in the order - a TN ported by the Port Order
                type: string
                example: 9199918388
            orderIdFragment:
                description: This search parameter represents the internal Bandwidth Dashboard ID that has been assigned to the Port Order.  This parameter is the first few characters of the internal ID - the entire ID does not need to be specified.
                type: string
                example: ed1c0bed-e2
            requestedFocDate:
                description: This is the FOC (Final Order Commit) Date requested by the person (or machine) creating the Port-in Order.
                type: string
                example: 13-10-22
            actualFocDate:
                description: This is the FOC (Final Order Commit) Date assigned to the Port-in Order by the loosing carrier or their agent.
                type: string
                example: 13-10-22
            lastModifiedBy:
                description: This is the user-id of the user that last modified the Port-in Order.
                type: string
                example: smckinnon
            activityState:
                description: The Order-Management state of the Port-in Order - used to manage orders within Bandwidth.  This parameter may not be exposed in the external representation of the API
                type: string
                enum: [quiet, responded, changed, seen]
                example: responded
                repeat: true
            bandwidthPrime:
                description: The name of the Bandwidth person responsible for managing the Port-in Order - used to manage orders within Bandwidth.  This parameter may not be exposed in the external representation of the API.
                type: string
                example: GeorgeB
                repeat: true
            modifiedFromDate:
                description: For Date-based searches, the starting date of a date range that will be used to find Port-in Orders that were modified within the date range.  It is in the form YY-MM-DD.
                type: string
                example: 13-10-22
            modifiedToDate:
                description: For Date-based searches, the ending date of a date range that will be used to find Port-in Orders that were modified within the date range.  It is in the form YY-MM-DD.
                type: string
                example: 13-10-25
        responses:    
            200:
                description: |
                    The descriptive response payload for the Port-out Orders query provides a broad range of information about the Port-out Orders found by the query, including the data associated with the order, the status of the order, and information about any error conditions encountered in processing of the order
                body: 
                    application/xml:
                        example: |
                            <?xml version="1.0"?>
                            <LNPResponseWrapper>
                                <TotalCount>1520</TotalCount>
                                <lnpPortInfoForGivenStatus>
                                    <accountId>14</accountId>
                                    <CompanyName>CWI Hosting</CompanyName>
                                    <CountOfTNs>1</CountOfTNs>
                                    <lastModifiedDate>2014-02-07T21-11-10.278Z</lastModifiedDate>
                                    <ErrorCode>200</ErrorCode>
                                    <ErrorMessage>Cancel pre foc port in successful.</ErrorMessage>
                                    <FullNumber>3232017829</FullNumber>
                                    <OrderId>7ff2652e-8ef3-4120-9df9-96f80b5bdcda</OrderId>
                                    <ProcessingStatus>cancelled</ProcessingStatus>
                                    <RequestedFOCDate>2114-02-07T00-00-00.000Z</RequestedFOCDate>
                                    <userId>jbm</userId>
                                    <VendorId>512E</VendorId>
                                </lnpPortInfoForGivenStatus>
                                <lnpPortInfoForGivenStatus>
                                    <accountId>14</accountId>
                                    <CompanyName>CWI Hosting</CompanyName>
                                    <CountOfTNs>1</CountOfTNs>
                                    <lastModifiedDate>2014-01-10T17-50-10.148Z</lastModifiedDate>
                                    <ErrorCode>200</ErrorCode>
                                    <ErrorMessage>Cancel pre foc port in successful.</ErrorMessage>
                                    <FullNumber>2012001665</FullNumber>
                                    <OrderId>7fd0682c-6cba-47fd-9cb1-1e4e60f3467c</OrderId>
                                    <ProcessingStatus>cancelled</ProcessingStatus>
                                    <RequestedFOCDate>2014-01-30T00-00-00.000Z</RequestedFOCDate>
                                    <userId>jbm</userId>
                                    <VendorId>512E</VendorId>
                                </lnpPortInfoForGivenStatus>
                                ... SNIP ...
                                <lnpPortInfoForGivenStatus>
                                    <accountId>14</accountId>
                                    <CompanyName>CWI Hosting</CompanyName>
                                    <CountOfTNs>1</CountOfTNs>
                                    <lastModifiedDate>2014-01-29T11-21-00.525Z</lastModifiedDate>
                                    <ErrorCode>200</ErrorCode>
                                    <ErrorMessage>Port out successful.</ErrorMessage>
                                    <FullNumber>2052870789</FullNumber>
                                    <OrderId>7fc7950b-8b36-4db6-8a5c-8c1280635048</OrderId>
                                    <ProcessingStatus>complete</ProcessingStatus>
                                    <RequestedFOCDate>2014-01-31T00-00-00.000Z</RequestedFOCDate>
                                    <userId>Neustar</userId>
                                    <VendorId>979E</VendorId>
                                    <PON>14214124</PON>
                                </lnpPortInfoForGivenStatus>
                            </LNPResponseWrapper>
            404:
                description: Not Found.  If any errors are found in the processing of the query string a 404 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored. 
    /{orderid}: 
        description: This resource interacts with the specific order ID of a port-out. A GET on this resource will retrieve the information about the particular port-out.
        get:
            description: Retrieves the information associated with the specified port-out ID number.
            responses:
                200:
                    description: The information has been successfully retrieved and displayed out to the payload.
                    body:
                        application/xml:
                            example: |
                                <LnpOrderResponse>
                                    <RequestedFocDate>2014-08-11T00:00:00Z</RequestedFocDate>
                                    <ActualFocDate>2014-08-11T00:00:00Z</ActualFocDate>
                                    <ListOfPhoneNumbers>
                                        <PhoneNumber>2014087001</PhoneNumber>
                                    </ListOfPhoneNumbers>
                                    <AccountId>20</AccountId>
                                    <SiteId>0</SiteId>
                                    <OrderCreateDate>2014-08-05T19:55:04.954Z</OrderCreateDate>
                                    <LastModifiedDate>2014-08-06T12:57:51.510Z</LastModifiedDate>
                                    <userId>System</userId>
                                    <PortOutStatus>CANCELLED</PortOutStatus>
                                    <SPID>2857</SPID>
                                </LnpOrderResponse>
/e911s: 
    description: |
        E911 orders track the assignment of TNs to Accounts, and comprise the most common use of the Bandwidth Dashboard API.
        The *+orders+* global search API will search the system for e911 orders, filtered by a wide range of filter parameters.
    get:
        description: |
            Retrieve information about one or more E911 Orders (e911s), where the orders are chosen based on the search parameters provided in the API Call.
            Not all search parameters are compatible with all other search parameters, due to the complexity of searching for historical records using highly parameterized or complex searches.  As a result:
            <ul>
                        <li>all query parameters are compatible with the exception of...</li>
                        <li>if modifiedFromDate or modifiedToDate are specified, then the only other valid search parameters are accountId, sippeerId or siteId</li>
            </ul>
        queryParameters:
            accountId:
                description: This is the account that the searched-for order will be contributing to.  Specifying this parameter will restrict the search to E911 orders within the specified account.
                type: integer
                example: 9900012
                repeat: true
            status:
                description: The status of the E911 order being searched for.
                type: string
                example: PROCESSING
                enum: [RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED]
                repeat: true
            tn:
                description: A Telephone Number (TN) that is referenced in the order
                type: string
                example: 9199918388
            callBack:
                description: A callback Telephone Number (TN) used for 911 purposes.
                type: string
                example: 9199918388
            aeui:
                description: Alternate End-user Identifier used to identify the calling party for 911 purposes.
                type: string
                example: Alter12345
            callingEndpoint:
                description: A TN, callback TN or AEUI.
                type: string
                example: 9199918386, Alter12345
            customerOrderId:
                description: The Customer Order ID is an ID assigned by the account owner to provide a reference number for the E911 order.
                type: string
                example: ABCCorp12345
            modifiedDateFrom:
                description: For Date-based searches, the starting date of a date range that will be used to find E911 Orders that were modified within the date range.  It is in the form yyyy-MM-dd.
                type: string
                example: 2013-10-22
            modifiedDateTo:
                description: For Date-based searches, the ending date of a date range that will be used to find E911 Orders that were modified within the date range.  It is in the form yyyy-MM-dd.
                type: string
                example: 2013-10-25
            createdDateFrom: 
                description: Checks the order's creation date against this value. Orders that have a creation date after this date will be included. Format is yyyy-MM-dd 
                type: string
                example: 2013-10-22
            createdDateTo:
                description: Checks the order's creation date against this value. Orders that have a creation date before this date will be included. Format is yyyy-MM-dd 
                type: string
                example: 2013-10-25
            lastModifiedAfter:
                description: Checks the order's last modified date against this value. Orders that have a modification date after this date will be included. Format is yyyy-MM-dd 
                type: string
                example: 2013-10-25
            lastModifiedBy:
                description: This is the user-name of the user that last modified the E911 Order.
                type: string
                example: smckinnon
            orderIdFragment:
                description: This search parameter represents the internal Bandwidth Dashboard ID that has been assigned to the E911 Order.  This parameter is the first few characters of the internal ID - the entire ID does not need to be specified.
                type: string
                example: ed1c0bed-e2
            orderDetails:
                description: If set to true, a list of order details will be displayed instead the summary information.
                type: boolean
                default: false
        responses:    
            200:
                description: |
                    The descriptive payload for the E911 Orders query provides a broad range of information about the E911  Orders found by the query, including the data associated with the order, the state of the order, and details about the order if it was successful.
                body: 
                    application/xml:
                        example: 
                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                            <E911Orders>
                                <TotalCount>2</TotalCount>
                                <E911OrderSummary>
                                    <accountId>1</accountId>
                                    <CountOfTNs>1</CountOfTNs>
                                    <userId>admin</userId>
                                    <lastModifiedDate>2015-08-03T14:41:01.769Z</lastModifiedDate>
                                    <OrderDate>2015-08-03T14:41:00.815Z</OrderDate>
                                    <OrderType>e911</OrderType>
                                    <OrderStatus>COMPLETE</OrderStatus>
                                    <OrderId>6dae2a67-b8f5-4bf2-9bf7-5216277b9be3</OrderId>
                                </E911OrderSummary>
                                <E911OrderSummary>
                                    <accountId>1</accountId>
                                    <CountOfTNs>1</CountOfTNs>
                                    <userId>admin</userId>
                                    <lastModifiedDate>2015-08-03T14:40:19.008Z</lastModifiedDate>
                                    <OrderDate>2015-08-03T14:40:17.864Z</OrderDate>
                                    <OrderType>e911</OrderType>
                                    <OrderStatus>ADJUSTED_COMPLETE</OrderStatus>
                                    <OrderId>6a97b54f-459e-4683-a79c-0de52acf7c6b</OrderId>
                                </E911OrderSummary>
                            </E911Orders>
                            <!-- OR if orderDetails = true... -->
                            <E911Orders>
                                <TotalCount>2</TotalCount>
                                <E911Order>
                                    <OrderCreateDate>2015-08-03T14:41:00.815Z</OrderCreateDate>
                                    <AccountId>1</AccountId>
                                    <CreatedByUser>admin</CreatedByUser>
                                    <OrderId>6dae2a67-b8f5-4bf2-9bf7-5216277b9be3</OrderId>
                                    <LastModifiedDate>2015-08-03T14:41:01.769Z</LastModifiedDate>
                                    <Address>
                                        <HouseNumber>800</HouseNumber>
                                        <HouseSuffix></HouseSuffix>
                                        <PreDirectional></PreDirectional>
                                        <StreetName>PENNSYLVANIA AVE</StreetName>
                                        <StreetSuffix>NW</StreetSuffix>
                                        <AddressLine2></AddressLine2>
                                        <City>WASHINGTON</City>
                                        <StateCode>DC</StateCode>
                                        <Zip>20004</Zip>
                                        <PlusFour></PlusFour>
                                        <Country>United States</Country>
                                    </Address>
                                    <CallerName>0931180f-4</CallerName>
                                    <ErrorList/>
                                    <ProcessingStatus>COMPLETE</ProcessingStatus>
                                    <TelephoneNumbers>
                                        <TelephoneNumber>9142971000</TelephoneNumber>
                                    </TelephoneNumbers>
                                </E911Order>
                                <E911Order>
                                    <OrderCreateDate>2015-08-03T14:40:17.864Z</OrderCreateDate>
                                    <AccountId>1</AccountId>
                                    <CreatedByUser>admin</CreatedByUser>
                                    <OrderId>6a97b54f-459e-4683-a79c-0de52acf7c6b</OrderId>
                                    <LastModifiedDate>2015-08-03T14:40:19.008Z</LastModifiedDate>
                                    <Address>
                                        <HouseNumber>1600</HouseNumber>
                                        <HouseSuffix></HouseSuffix>
                                        <PreDirectional></PreDirectional>
                                        <StreetName>PENNSYLVANIA AVE</StreetName>
                                        <StreetSuffix>NW</StreetSuffix>
                                        <AddressLine2></AddressLine2>
                                        <City>WASHINGTON</City>
                                        <StateCode>DC</StateCode>
                                        <Zip>20500</Zip>
                                        <PlusFour>0003</PlusFour>
                                        <Country>United States</Country>
                                    </Address>
                                    <CallerName>0931180f-4</CallerName>
                                    <ErrorList/>
                                    <ProcessingStatus>ADJUSTED_COMPLETE</ProcessingStatus>
                                    <TelephoneNumbers>
                                        <TelephoneNumber>9142971000</TelephoneNumber>
                                    </TelephoneNumbers>
                                </E911Order>
                            </E911Orders>
            404:
                description: Not Found.  If any errors are found in the processing of the query string a 404 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored. 
    /{orderId}: 
        description: |
            The "orderId" resource refers to a specific element of the orders collection.  Examining that resource provides detailed information on the specific identified order.
        get:
            description: |
                Retrieve information about a specific E911 Order identified as the resource.
            responses:
                200:
                    description: |
                        The descriptive payload for the E911 Orders query provides a broad range of information about the E911 Order identified in the URL.  Included amongst the information is:
                        <ul>
                        <li>ErrorList - the errors discovered with codes and explanations</li>
                        <li>ProcessingStatus(RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED) - the overall status of the order</li>
                        </ul>
                    body:
                        application/xml:
                            example: 
                                <E911Order>
                                    <OrderCreateDate>2015-06-16T14:03:10.199Z</OrderCreateDate>
                                    <AccountId>111</AccountId>
                                    <CreatedByUser>admin</CreatedByUser>
                                    <OrderId>8578086b-f73d-4a0f-bba6-d20399c7de31</OrderId>
                                    <LastModifiedDate>2015-06-16T14:03:10.789Z</LastModifiedDate>
                                    <Address>
                                        <HouseNumber>901</HouseNumber>
                                        <StreetName>Main Campus Drive</StreetName>
                                        <City>Raleigh</City>
                                        <StateCode>NC</StateCode>
                                        <Zip>27606</Zip>
                                        <Country>United States</Country>
                                    </Address>
                                    <CallerName>testName111111</CallerName>
                                    <CustomerOrderId>test</CustomerOrderId>
                                    <ProcessingStatus>PARTIAL</ProcessingStatus>
                                    <TelephoneNumbers>
                                        <TelephoneNumber>3172000218</TelephoneNumber>
                                        <TelephoneNumber>3172000000</TelephoneNumber>
                                    </TelephoneNumbers>
                                    <ErrorList>
                                        <Error>
                                            <Code>8003</Code>
                                            <Description>Telephone numbers does not belong to this account.</Description>
                                            <TelephoneNumbers>
                                                <TelephoneNumber>3172000000</TelephoneNumber>
                                            </TelephoneNumbers>
                                        </Error>
                                        <Error>
                                            <Code>8009</Code>
                                            <Description>Telephone numbers not in 'Inservice'</Description>
                                            <TelephoneNumbers>
                                                <TelephoneNumber>3172000000</TelephoneNumber>
                                            </TelephoneNumbers>
                                        </Error>
                                    </ErrorList>
                                    <!-- or, instead of TelephoneNumbers, a list of Alternative identifiers can be returned -->
                                    <AlternateEndUserIdentifiers>
                                        <AlternateEndUserIdentifier>
                                            <PIDFLOEnabled>true</PIDFLOEnabled>
                                            <Identifier>alphanumeric_or.:-_@_6_32_chars</Identifier>
                                            <CallbackNumber>9706542332</CallbackNumber>
                                            <CallerName>Eli</CallerName>
                                            <PreferredLanguage>en</PreferredLanguage>
                                            <LocationId>Some32CharacterOrLessString</LocationId>
                                            <Address>
                                                <LocationId>Some32CharacterOrLessString</LocationId>
                                                <HouseNumber>915</HouseNumber>
                                                <HouseSuffix/>
                                                <PreDirectional/>
                                                <StreetName>Elm</StreetName>
                                                <StreetSuffix>Ave</StreetSuffix>
                                                <PostDirectional/>
                                                <AddressLine2/>
                                                <City>Carpinteria</City>
                                                <StateCode>CA</StateCode>
                                                <Zip>93013</Zip>
                                                <PlusFour/>
                                                <County/>
                                                <Country>United States</Country>
                                            </Address>
                                        </AlternateEndUserIdentifier>
                                        <AlternateEndUserIdentifier>
                                            <PIDFLOEnabled>true</PIDFLOEnabled>
                                            <Identifier>alphanumeric_or.:-_@_6_32_chars</Identifier>
                                            <CallbackNumber>9706542333</CallbackNumber>
                                            <CallerName>Ethan</CallerName>
                                            <PreferredLanguage>en</PreferredLanguage>
                                        </AlternateEndUserIdentifier>
                                    </AlternateEndUserIdentifiers>
                                    <!-- or, instead of the TelephoneNumbers and Alternative identifiers, a list of Additional Addresses can be returned -->
                                    <AdditionalAddresses>
                                        <Address>
                                            <LocationId>Some32CharacterOrLessString</LocationId>
                                            <HouseNumber>915</HouseNumber>
                                            <HouseSuffix/>
                                            <PreDirectional/>
                                            <StreetName>Elm</StreetName>
                                            <StreetSuffix>Ave</StreetSuffix>
                                            <PostDirectional/>
                                            <AddressLine2/>
                                            <City>Carpinteria</City>
                                            <StateCode>CA</StateCode>
                                            <Zip>93013</Zip>
                                            <PlusFour/>
                                            <County/>
                                            <Country>United States</Country>
                                        </Address>
                                    </AdditionalAddresses>
                                </E911Order>
                404:
                    description: NOT FOUND - the order id does not exist in the system
                    body:
                        application/xml:
                            example: 
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <E911OrderReportResponse>
                                    <ResponseStatus>
                                        <Description>The resource does not exist</Description>
                                    </ResponseStatus>
                                </E911OrderReportResponse>
        /history: 
            description: |
                History information is available on orders that have gone through multiple transitions.  In this case the order will have one or more OrderHistory records associated with it, detailing the set of events that have affected the order.
            get:
                description: |
                    Retrieve the history information associated with an order
                responses:    
                    200:
                        description: |
                            The history payload is a set of history records, each of which contains:
                                <table style="text-align: left; width: 80%;" border="1" cellpadding="2" cellspacing="2">
                                    <tbody>
                                        <tr>
                                            <td>OrderDate</td>
                                            <td>The date that the order history event happened</td>
                                        </tr>
                                        <tr>
                                            <td>Note</td>
                                            <td>A Note or additional information included with the state change</td>
                                        </tr>
                                        <tr>
                                            <td>Author</td>
                                            <td>The user id that implemented the state change</td>
                                        </tr>
                                        <tr>
                                            <td>Status</td>
                                            <td>The new state of the E911order - RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED</td>
                                        </tr>
                                    </tbody>
                                </table>
                        body: 
                            application/xml:
                                example: 
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <OrderHistoryWrapper>
                                        <OrderHistory>
                                            <OrderDate>2015-06-16T13:30:08.623Z</OrderDate>
                                            <Author>admin</Author>
                                            <Status>RECEIVED</Status>
                                        </OrderHistory>
                                        <OrderHistory>
                                            <OrderDate>2015-06-16T13:30:09.041Z</OrderDate>
                                            <Author>admin</Author>
                                            <Status>FAILED</Status>
                                        </OrderHistory>
                                    </OrderHistoryWrapper>
/dldas: 
    description: |
        DLDA orders track the assignment of TNs to Accounts, and comprise the most common use of the Bandwidth Dashboard API.
        The *+orders+* global search API will search the system for DLDA orders, filtered by a wide range of filter parameters.
    get:
        description: |
            Retrieve information about one or more DLDA Orders (dldas), where the orders are chosen based on the search parameters provided in the API Call. 
            Not all search parameters are compatible with all other search parameters, due to the complexity of searching for historical records using highly parametrized or complex searches.  As a result:
            <ul>
                <li>all query parameters are compatible with the exception of...</li>
                <li>if modifiedFromDate or modifiedToDate are specified, then the only other valid search parameters are accountId, sippeerId or siteId</li>
                <li>sippeerId and siteId are only compatible with searches that have a date range parameter.</li>
            </ul>
        queryParameters:
            accountId:
                description: This is the account that the searched-for order will be contributing to.  Specifying this parameter will restrict the search to DLDA orders within the specified account.
                type: integer
                example: 9900012
                repeat: true
            status:
                description: The status of the DLDA order being searched for.
                type: string
                example: PROCESSING
                enum: [RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED, CANCELLED]
                repeat: true
            tn:
                description: A Telephone Number (TN) that is referenced in the order
                type: string
                example: 9199918388
            customerOrderId:
                description: The Customer Order ID is an ID assigned by the account owner to provide a reference number for the DLDA order.
                type: string
                example: ABCCorp12345
            orderIdFragment:
                description: This search parameter represents the internal Bandwidth Dashboard ID that has been assigned to the DLDA Order.  This parameter is the first few characters of the internal ID - the entire ID does not need to be specified.
                type: string
                example: ed1c0bed-e2
            siteId:
                description: The numeric designation for the Site ID that applied to the DLDA Order.  The SiteId is used to provide a home within the account for the TN(s) that were in DLDA Order.
                type: integer
                example: 645881
            sippeerId:
                description: The numeric designation for the Location or SIP PEER ID that applied to the DLDA Order.  The SIP Peer ID is used to provide a home within the location for the TN(s) that were in DLDA Order.
                type: integer
                example: 456        
            modifiedDateFrom:
                description: For Date-based searches, the starting date of a date range that will be used to find DLDA Orders that were modified within the date range.  It is in the form yyyy-MM-dd.
                type: string
                example: 2013-10-22
            modifiedDateTo:
                description: For Date-based searches, the ending date of a date range that will be used to find DLDA Orders that were modified within the date range.  It is in the form yyyy-MM-dd.
                type: string
                example: 2013-10-25
            createdDateFrom: 
                description: Checks the order's creation date against this value. Orders that have a creation date after this date will be included. Format is yyyy-MM-dd 
                type: string
                example: 2013-10-22
            createdDateTo:
                description: Checks the order's creation date against this value. Orders that have a creation date before this date will be included. Format is yyyy-MM-dd 
                type: string
                example: 2013-10-25
            lastModifiedAfter:
                description: Checks the order's last modified date against this value. Orders that have a modification date after this date will be included. Format is yyyy-MM-dd 
                type: string
                example: 2013-10-25
            lastModifiedBy:
                description: This is the user-name of the user that last modified the DLDA Order.
                type: string
                example: smckinnon
        responses:    
            200:
                description: |
                    The descriptive payload for the DLDA Orders query provides a broad range of information about the DLDA Orders found by the query, including the data associated with the order, the state of the order, and details about the order if it was successful.
                body: 
                    application/xml:
                        example: 
                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                            <ResponseSelectWrapper>
                                <ListOrderIdUserIdDate>
                                    <TotalCount>7</TotalCount>
                                    <OrderIdUserIdDate>
                                        <accountId>14</accountId>
                                        <CountOfTNs>2</CountOfTNs>
                                        <userId>team_ua</userId>
                                        <lastModifiedDate>2014-07-07T10:06:43.427Z
                                        </lastModifiedDate>
                                        <OrderType>dlda</OrderType>
                                        <OrderDate>2014-07-07T10:06:43.427Z</OrderDate>
                                        <orderId>37a6447c-1a0b-4be9-ba89-3f5cb0aea142</orderId>
                                        <OrderStatus>FAILED</OrderStatus>
                                    </OrderIdUserIdDate>
                                    <OrderIdUserIdDate>
                                        <accountId>14</accountId>
                                        <CountOfTNs>2</CountOfTNs>
                                        <userId>team_ua</userId>
                                        <lastModifiedDate>2014-07-07T10:05:56.595Z
                                        </lastModifiedDate>
                                        <OrderType>dlda</OrderType>
                                        <OrderDate>2014-07-07T10:05:56.595Z</OrderDate>
                                        <orderId>743b0e64-3350-42e4-baa6-406dac7f4a85</orderId>
                                        <OrderStatus>RECEIVED</OrderStatus>
                                    </OrderIdUserIdDate>
                                    <OrderIdUserIdDate>
                                        <accountId>14</accountId>
                                        <CountOfTNs>2</CountOfTNs>
                                        <userId>team_ua</userId>
                                        <lastModifiedDate>2014-07-07T09:32:17.234Z
                                        </lastModifiedDate>
                                        <OrderType>dlda</OrderType>
                                        <OrderDate>2014-07-07T09:32:17.234Z</OrderDate>
                                        <orderId>f71eb4d2-bfef-4384-957f-45cd6321185e</orderId>
                                        <OrderStatus>RECEIVED</OrderStatus>
                                    </OrderIdUserIdDate>
                                    <OrderIdUserIdDate>
                                        <accountId>9999999</accountId>
                                        <CountOfTNs>2</CountOfTNs>
                                        <userId>jbm</userId>
                                        <lastModifiedDate>2014-07-04T10:53:47.461Z
                                        </lastModifiedDate>
                                        <OrderType>dlda</OrderType>
                                        <OrderDate>2014-07-04T10:53:47.434Z</OrderDate>
                                        <orderId>2e8e2e08-f6c7-4787-9e58-96e4e75d5615</orderId>
                                        <OrderStatus>FAILED</OrderStatus>
                                    </OrderIdUserIdDate>
                                    <OrderIdUserIdDate>
                                        <accountId>9999999</accountId>
                                        <CountOfTNs>2</CountOfTNs>
                                        <userId>jbm</userId>
                                        <lastModifiedDate>2014-07-04T09:53:16.631Z
                                        </lastModifiedDate>
                                        <OrderType>dlda</OrderType>
                                        <OrderDate>2014-07-04T09:53:16.608Z</OrderDate>
                                        <orderId>377dd74e-b5fe-4687-89f1-059c8c1f5c43</orderId>
                                        <OrderStatus>FAILED</OrderStatus>
                                    </OrderIdUserIdDate>
                                    <OrderIdUserIdDate>
                                        <accountId>9999999</accountId>
                                        <CountOfTNs>1</CountOfTNs>
                                        <userId>jbm</userId>
                                        <lastModifiedDate>2014-07-02T16:21:17.996Z
                                        </lastModifiedDate>
                                        <OrderType>dlda</OrderType>
                                        <OrderDate>2014-07-02T16:21:17.996Z</OrderDate>
                                        <orderId>05f2303f-92b8-4982-8ee8-73a62a274fa9</orderId>
                                        <OrderStatus>FAILED</OrderStatus>
                                    </OrderIdUserIdDate>
                                    <OrderIdUserIdDate>
                                        <accountId>9999999</accountId>
                                        <CountOfTNs>1</CountOfTNs>
                                        <userId>jbm</userId>
                                        <lastModifiedDate>2014-07-02T16:20:56.866Z
                                        </lastModifiedDate>
                                        <OrderType>dlda</OrderType>
                                        <OrderDate>2014-07-02T16:20:56.865Z</OrderDate>
                                        <orderId>291b924a-1ce5-434a-a48c-7f0d649d834b</orderId>
                                        <OrderStatus>RECEIVED</OrderStatus>
                                    </OrderIdUserIdDate>
                                </ListOrderIdUserIdDate>
                            </ResponseSelectWrapper>
            404:
                description: Not Found.  If any errors are found in the processing of the query string a 404 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored. 
    /{orderId}: 
        description: |
            The "orderId" resource refers to a specific element of the orders collection.  Examining that resource provides detailed information on the specific identified order.
        get:
            description: |
                Retrieve information about a specific DLDA Order identified as the resource.
            responses:
                200:
                    description: |
                        The descriptive payload for the DLDA Orders query provides a broad range of information about the DLDA Order identified in the URL.  Included amongst the information is:
                        <ul>
                        <li>ErrorList - the errors discovered with codes and explanations</li>
                        <li>various dates</li>
                        <li>ProcessingStatus(RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED, CANCELLED) - the overall status of the order</li>
                        <li>DldaTnGroups - list of DldaTnGroup elements that contains list of TNs with Directory Listing and Directory Assistance information, AccountType(RESIDENCE or BUSINESS), ListingType(LISTED, NON_LISTED or NON_PUBLISHED)</li>
                        </ul>
                    body:
                        application/xml:
                            example: 
                                <?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
                                <DldaOrderResponse>
                                    <DldaOrder>
                                        <CustomerOrderId>5a88d16d-f8a9-45c5-a5db-137d700c6a22</CustomerOrderId>
                                        <OrderCreateDate>2014-07-10T12:38:11.833Z</OrderCreateDate>
                                        <AccountId>14</AccountId>
                                        <CreatedByUser>jbm</CreatedByUser>
                                        <OrderId>ea9e90c2-77a4-4f82-ac47-e1c5bb1311f4</OrderId>
                                        <LastModifiedDate>2014-07-10T12:38:11.833Z</LastModifiedDate>
                                        <ErrorList>
                                            <Error>
                                                <Code>16103</Code>
                                                <Description>DL/DA information cannot be changed because the number
                                                    is already being processed
                                                </Description>
                                                <TelephoneNumber>2053778335</TelephoneNumber>
                                            </Error>
                                        </ErrorList>
                                        <ProcessingStatus>RECEIVED</ProcessingStatus>
                                        <DldaTnGroups>
                                            <DldaTnGroup>
                                                <TelephoneNumbers>
                                                    <TelephoneNumber>2053778335</TelephoneNumber>
                                                    <TelephoneNumber>2053865784</TelephoneNumber>
                                                </TelephoneNumbers>
                                                <SubscriberType>BUSINESS</SubscriberType>
                                                <ListingType>LISTED</ListingType>
                                                <ListingName>
                                                    <FirstName>Joe</FirstName>
                                                    <LastName>Smith</LastName>
                                                </ListingName>
                                                <ListAddress>true</ListAddress>
                                                <Address>
                                                    <HouseNumber>12</HouseNumber>
                                                    <StreetName>ELM</StreetName>
                                                    <City>New York</City>
                                                    <StateCode>NY</StateCode>
                                                    <Zip>10007</Zip>
                                                    <Country>United States</Country>
                                                    <AddressType>Dlda</AddressType>
                                                </Address>
                                            </DldaTnGroup>
                                        </DldaTnGroups>
                                    </DldaOrder>
                                </DldaOrderResponse>
                404:
                    description: NOT FOUND - the order id does not exist in the system
                    body:
                        application/xml:
                            example: 
                                <?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
                                <DldaOrderResponse>
                                    <ResponseStatus>
                                        <Description>The resource does not exist</Description>
                                    </ResponseStatus>
                                </DldaOrderResponse>
        /history: 
            description: |
                History information is available on orders that have gone through multiple transitions.  In this case the order will have one or more OrderHistory records associated with it, detailing the set of events that have affected the order.
            get:
                description: |
                    Retrieve the history information associated with an order
                responses:    
                    200:
                        description: |
                            The history payload is a set of history records, each of which contains:
                                <table style="text-align: left; width: 80%;" border="1" cellpadding="2" cellspacing="2">
                                    <tbody>
                                        <tr>
                                            <td>OrderDate</td>
                                            <td>The date that the order history event happened</td>
                                        </tr>
                                        <tr>
                                            <td>Note</td>
                                            <td>A Note or additional information included with the state change</td>
                                        </tr>
                                        <tr>
                                            <td>Author</td>
                                            <td>The user id that implemented the state change</td>
                                        </tr>
                                        <tr>
                                            <td>Status</td>
                                            <td>The new state of the DLDA order - RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED, CANCELLED</td>
                                        </tr>
                                        <tr>
                                            <td>Difference</td>
                                            <td>The difference between this state and previous</td>
                                        </tr>
                                    </tbody>
                                </table>
                        body: 
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <OrderHistoryWrapper>
                                        <OrderHistory>
                                            <OrderDate>2014-05-20T14:21:43.937Z</OrderDate>
                                            <Note>The DL/DA request has been received</Note>
                                            <Author>jbm</Author>
                                            <Status>RECEIVED</Status>
                                        </OrderHistory>
                                        <OrderHistory>
                                            <OrderDate>2014-05-20T14:24:43.428Z</OrderDate>
                                            <Note>The DL/DA request has been received</Note>
                                            <Author>jbm</Author>
                                            <Status>RECEIVED</Status>
                                            <Difference>CustomerOrderId : 1111 --&gt; 4444, TN : 6234329572 --&gt; was removed, TN : 7402039089 SubscriberType : RESIDENTIAL --&gt; BUSINESS, TN : 2053529728 SubscriberType : RESIDENTIAL --&gt; BUSINESS</Difference>
                                        </OrderHistory>
                                    </OrderHistoryWrapper>
/lidbs: 
    description: |
        Lidb orders track the assignment of TNs to Accounts, and comprise the most common use of the Bandwidth Dashboard API.
        The *+orders+* global search API will search the system for lidb orders, filtered by a wide range of filter parameters.
    get:
        description: |
            Retrieve information about one or more Lidb Orders (lidbs), where the orders are chosen based on the search parameters provided in the API Call. 
            Not all search parameters are compatible with all other search parameters, due to the complexity of searching for historical records using highly parameterize or complex searches.  As a result:
            <ul>
                 <li>all query parameters are compatible with the exception of...</li>
                 <li>if modifiedFromDate or modifiedToDate are specified, then the only other valid search parameters are accountId, sippeerId or siteId</li>
                 <li>sippeerId and siteId are only compatible with searches that have a date range parameter.</li>
            </ul>
        queryParameters:
            accountId:
                description: This is the account that the searched-for order will be contributing to.  Specifying this parameter will restrict the search to lidb orders within the specified account.
                type: integer
                example: 9900012
                repeat: true
            status:
                description: The status of the lidb order being searched for.
                type: string
                example: PROCESSING
                enum: [RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED]
                repeat: true
            tn:
                description: A Telephone Number (TN) that is referenced in the order
                type: string
                example: 9199918388
            customerOrderId:
                description: The Customer Order ID is an ID assigned by the account owner to provide a reference number for the Lidb order.
                type: string
                example: ABCCorp12345
            orderIdFragment:
                description: This search parameter represents the internal Bandwidth Dashboard ID that has been assigned to the Lidb Order.  This parameter is the first few characters of the internal ID - the entire ID does not need to be specified.
                type: string
                example: ed1c0bed-e2
            siteId:
                description: The numeric designation for the Site ID that applied to the Lidb Order.  The SiteId is used to provide a home within the account for the TN(s) that were in Lidb Order.
                type: integer
                example: 645881
            sippeerId:
                description: The numeric designation for the Location or SIP PEER ID that applied to the Lidb Order.  The SIP Peer ID is used to provide a home within the location for the TN(s) that were in Lidb Order.
                type: integer
                example: 456        
            modifiedDateFrom:
                description: For Date-based searches, the starting date of a date range that will be used to find Lidb Orders that were modified within the date range.  It is in the form yyyy-MM-dd.
                type: string
                example: 2013-10-22
            modifiedDateTo:
                description: For Date-based searches, the ending date of a date range that will be used to find Lidb Orders that were modified within the date range.  It is in the form yyyy-MM-dd.
                type: string
                example: 2013-10-25
            createdDateFrom: 
                description: Checks the order's creation date against this value. Orders that have a creation date after this date will be included. Format is yyyy-MM-dd 
                type: string
                example: 2013-10-22
            createdDateTo:
                description: Checks the order's creation date against this value. Orders that have a creation date before this date will be included. Format is yyyy-MM-dd 
                type: string
                example: 2013-10-25
            lastModifiedAfter:
                description: Checks the order's last modified date against this value. Orders that have a modification date after this date will be included. Format is yyyy-MM-dd 
                type: string
                example: 2013-10-25
            lastModifiedBy:
                description: This is the user-name of the user that last modified the LIDB Order.
                type: string
                example: smckinnon
        responses:    
            200:
                description: |
                    The descriptive payload for the E911 Orders query provides a broad range of information about the Lidb  Orders found by the query, including the data associated with the order, the state of the order, and details about the order if it was successful.
                body: 
                    application/xml:
                          example: 
                              <?xml version="1.0"?>
                              <ResponseSelectWrapper>
                                  <ListOrderIdUserIdDate>
                                      <TotalCount>2122</TotalCount>
                                      <OrderIdUserIdDate>
                                          <accountId>9999999</accountId>
                                          <CountOfTNs>0</CountOfTNs>
                                          <lastModifiedDate>2014-02-25T16:02:43.195Z</lastModifiedDate>
                                          <OrderType>lidb</OrderType>
                                          <OrderDate>2014-02-25T16:02:43.195Z</OrderDate>
                                          <orderId>abe36738-6929-4c6f-926c-88e534e2d46f</orderId>
                                          <OrderStatus>FAILED</OrderStatus>
                                          <TelephoneNumberDetails/>
                                          <userId>team_ua</userId>
                                      </OrderIdUserIdDate>
                                      <OrderIdUserIdDate>
                                          <accountId>9999999</accountId>
                                          <CountOfTNs>0</CountOfTNs>
                                          <lastModifiedDate>2014-02-25T16:02:40.628Z</lastModifiedDate>
                                          <OrderType>lidb</OrderType>
                                          <OrderDate>2014-02-25T16:02:40.628Z</OrderDate>
                                          <orderId>18427880-33a9-4282-a196-f740c720bb9e</orderId>
                                          <OrderStatus>COMPLETE</OrderStatus>
                                          <userId>team_ua</userId>
                                      </OrderIdUserIdDate>
                                      <OrderIdUserIdDate>
                                          <accountId>9999999</accountId>
                                          <CountOfTNs>0</CountOfTNs>
                                          <lastModifiedDate>2014-02-25T16:02:39.345Z</lastModifiedDate>
                                          <OrderType>lidb</OrderType>
                                          <OrderDate>2014-02-25T16:02:39.345Z</OrderDate>
                                          <orderId>d7eff0d8-303c-4f11-86f8-44740bbd4535</orderId>
                                          <OrderStatus>FAILED</OrderStatus>
                                          <userId>team_ua</userId>
                                      </OrderIdUserIdDate>
                                      <OrderIdUserIdDate>
                                          <accountId>9999999</accountId>
                                          <CountOfTNs>0</CountOfTNs>
                                          <lastModifiedDate>2014-02-25T16:02:39.021Z</lastModifiedDate>
                                          <OrderType>lidb</OrderType>
                                          <OrderDate>2014-02-25T16:02:39.021Z</OrderDate>
                                          <orderId>ba5b6297-139b-4430-aab0-9ff02c4362f4</orderId>
                                          <OrderStatus>FAILED</OrderStatus>
                                          <userId>team_ua</userId>
                                      </OrderIdUserIdDate>
                                  </ListOrderIdUserIdDate>
                              </ResponseSelectWrapper>
            404:
                description: Not Found.  If any errors are found in the processing of the query string a 404 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored. 
    /{orderId}: 
        description: |
            The "orderId" resource refers to a specific element of the orders collection.  Examining that resource provides detailed information on the specific identified order.
        get:
            description: |
                Retrieve information about a specific Lidb Order identified as the resource.
            responses:
                200:
                    description: |
                        The descriptive payload for the Lidb Orders query provides a broad range of information about the Lidb Order identified in the URL.  Included amongst the information is:
                        <ul>
                        <li>ErrorList - the errors discovered with codes and explanations</li>
                        <li>various dates</li>
                        <li>ProcessingStatus(RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED) - the overall status of the order</li>
                        <li>LidbTnGroups - list of LidbTnGroup elements that contains list of TNs with SubscriberInformation, UseType(RESIDENTIAL or BUSINESS) and Visibility (PUBLIC or PRIVATE)</li>
                        </ul>
                    body:
                        application/xml:
                            example: |
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <LidbOrder>
                                    <CustomerOrderId>testCustomerOrderId</CustomerOrderId>
                                    <orderId>255bda29-fc57-44e8-a6c2-59b45388c6d0</orderId>
                                    <OrderCreateDate>2014-05-28T14:46:21.724Z</OrderCreateDate>
                                    <ProcessingStatus>RECEIVED</ProcessingStatus>
                                    <CreatedByUser>jbm</CreatedByUser>
                                    <LastModifiedDate>2014-02-20T19:33:17.600Z</LastModifiedDate>
                                    <OrderCompleteDate>2014-02-20T19:33:17.600Z</OrderCompleteDate>
                                    <ErrorList/>
                                    <LidbTnGroups>
                                        <LidbTnGroup>
                                            <TelephoneNumbers>
                                                <TelephoneNumber>4082213311</TelephoneNumber>
                                            </TelephoneNumbers>
                                            <FullNumber>8042105618</FullNumber>
                                            <SubscriberInformation>Fred</SubscriberInformation>
                                            <UseType>BUSINESS</UseType>
                                            <Visibility>PRIVATE</Visibility>
                                        </LidbTnGroup>
                                        <LidbTnGroup>
                                            <TelephoneNumbers>
                                                <TelephoneNumber>4082212850</TelephoneNumber>
                                                <TelephoneNumber>4082213310</TelephoneNumber>
                                            </TelephoneNumbers>
                                            <FullNumber>8042105760</FullNumber>
                                            <SubscriberInformation>Fred</SubscriberInformation>
                                            <UseType>RESIDENTIAL</UseType>
                                            <Visibility>PUBLIC</Visibility>
                                        </LidbTnGroup>
                                    </LidbTnGroups>
                                </LidbOrder>
                404:
                    description: NOT FOUND - the order id does not exist in the system
                    body:
                        application/xml:
                            example: |
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <LidbOrderReportResponse>
                                    <ResponseStatus>
                                        <Description>The resource does not exist</Description>
                                    </ResponseStatus>
                                </LidbOrderReportResponse>
        /history: 
            description: |
                History information is available on orders that have gone through multiple transitions.  In this case the order will have one or more OrderHistory records associated with it, detailing the set of events that have affected the order.
            get:
                description: |
                    Retrieve the history information associated with an order
                responses:    
                    200:
                        description: |
                            The history payload is a set of history records, each of which contains:
                                <table style="text-align: left; width: 80%;" border="1" cellpadding="2" cellspacing="2">
                                    <tbody>
                                        <tr>
                                            <td>OrderModifiedDate</td>
                                            <td>The date that the order history event happened</td>
                                        </tr>
                                        <tr>
                                            <td>Status</td>
                                            <td>The new state of the LIDB order - RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED </td>
                                        </tr>
                                        <tr>
                                            <td>Note</td>
                                            <td>A Note or additional information included with the state change </td>
                                       </tr>
                                       <tr>
                                            <td>Author</td>
                                            <td>The user id that implemented the state change</td>
                                        </tr>
                                    </tbody>
                                </table>
                        body: 
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <OrderHistoryWrapper>
                                        <OrderHistory>
                                            <OrderDate>2014-05-20T14:21:43.937Z</OrderDate>
                                            <Note>The Calling Name database update request has been received</Note>
                                            <Author>jbm</Author>
                                            <Status>RECEIVED</Status>
                                        </OrderHistory>
                                        <OrderHistory>
                                            <OrderDate>2014-05-20T14:24:43.428Z</OrderDate>
                                            <Note>
                                                The Calling Name database update request is being processed by our 3rd party supplier
                                            </Note>
                                            <Author>jbm</Author>
                                            <Status>PROCESSING</Status>
                                        </OrderHistory>
                                    </OrderHistoryWrapper>
/users: 
    description: |
        This API controls the users that have  access to the API and GUI functions exposed by the Bandwidth Dashboard.  Users are described by information about the user themselves, and then by a set of permissions granted them to execute various API and UI functions.  Each of the permissions typically has a View and an Update aspect - a user can be given read-only or read-write access to a function by the application of these capabilities.
        The /users API also enables resetting but not retrieving credential information 
        The resource that is being managed is a collection of users, and that the payload reflects that.  
    post:
        description: 
            Create a user.  All fields in the payload are required
            POSTing to the users resource permits the creation of multiple user instances as part of a single action.
        body:
            application/xml:
                example: |
                    <Users>
                        <User>
                            <Username>testcustomer</Username>
                            <Password>test123</Password>
                            <FirstName>Jane</FirstName>
                            <LastName>Doe</LastName>
                            <EmailAddress>janedoe@bandwidth.com</EmailAddress>
                            <TelephoneNumber>9199999999</TelephoneNumber>
                        </User>
                    </Users>
        responses:
            201:
                description: |
                    Created.
                    No Body or location header is returned with this API call.  Details on the created user can be retieved with a get on the user-id
    get: 
        description: 
            Get a list of all users in the system <br>
            The Payload includes a description of each user, without the user permissions. User details and a list of customers that the user serves is contained in the payload response to a GET on a specific user resource
        responses:
            200:
                description: The request is valid and a list of users can be returned.
                body:
                    application/xml:
                        example: |
                            <?xml version="1.0"?>
                            <UsersResponse>
                                <Users>
                                    <User>
                                        <Username>testcustomer</Username>
                                        <FirstName>Jane</FirstName>
                                        <LastName>Doe</LastName>
                                        <EmailAddress>janedoe@bandwidth.com</EmailAddress>
                                        <TelephoneNumber>9199999999</TelephoneNumber>
                                    </User>
                                    <User>
                                        <Username>johndoe</Username>
                                        <FirstName>John</FirstName>
                                        <LastName>Doe</LastName>
                                        <EmailAddress>johndoe@bandwidth.com</EmailAddress>
                                        <TelephoneNumber>9199999998</TelephoneNumber>
                                    </User>
                                </Users>
                            </UsersResponse>
    /{userid}: 
        description: reference a specific user in the Bandwidth Dashboard
        put:
            description: Update a User. PUT can be used to update role or user data information associated with a user.
            body:
                application/xml:
                    example: |
                        <User>
                            <Username>testcustomer</Username>
                            <Password>newpassword</Password>
                            <FirstName>Jane</FirstName>
                            <LastName>Doe</LastName>
                            <EmailAddress>janedoe@bandwidth.com</EmailAddress>
                            <TelephoneNumber>9199999999</TelephoneNumber>
                        </User>
            responses:
                200:
                    body: 
                        application/xml:
                            example: empty response
        delete:
            description: Delete a User id
            responses:
                200:
                    body: 
                        application/xml:
                            example: empty response
        get:
            description: Retrieve the information (except the password) for a specific user id
            responses:
                200:
                    body: 
                        application/xml:
                            example: |
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <UserResponse>
                                    <User>
                                        <Username>testcustomer</Username>
                                        <FirstName>Jane</FirstName>
                                        <LastName>Doe</LastName>
                                        <EmailAddress>janedoe@bandwidth.com</EmailAddress>
                                        <TelephoneNumber>9199999999</TelephoneNumber>
                                        <Roles>
                                            <Role>
                                                <RoleName>ROLE_BDR</RoleName>
                                                <Permissions>
                                                    <Permission>
                                                        <PermissionName>VIEW</PermissionName>
                                                    </Permission>
                                                </Permissions>
                                            </Role>
                                        </Roles>
                                        <Accounts>
                                            <Account>
                                                <AccountId>12346095</AccountId>
                                                <CompanyName>ABC Corp</CompanyName>
                                            </Account>
                                        </Accounts>
                                    </User>
                                </UserResponse>
        /password: 
            description: Allows the manipulation of a user's password.
            put:
                description: Update a user's password.   Security is maintained by requiring the user's existing password as part of the authentication for the API call.
                body:
                    application/xml:
                        example: |
                            <Password>$uper$ecure</Password> <!-- required, min length: 6, max length: 20 -->
                responses:
                    200:
                        body: 
                            application/xml:
                                example: empty response
                    400:
                        body:
                            application/xml:
                                example: |
                                    <UserResponse>
                                        <ResponseStatus>
                                        <ErrorCode>12504</ErrorCode>
                                        <Description>Password must be at least 6 characters long</Description>
                                        </ResponseStatus>
                                    </UserResponse>
        /roles: 
            description: reference the roles for a specific user in the system
            post:
                description: add a role or role permission to a specified user
                body:
                    application/xml:
                        example: |
                            <?xml version="1.0"?>
                            <Roles>
                                <Role>
                                    <RoleName>ROLE_API_SEARCH</RoleName>
                                    <Permissions>
                                        <Permission>
                                            <PermissionName>VIEW</PermissionName>
                                        </Permission>
                                    </Permissions>
                                </Role>
                            </Roles>
                responses:
                    201:
                        description: Created - the role was established for the specified user.
                        body: 
                            application/xml:
                                example: empty response
                    400:
                        description: | 
                            Bad Request - if the role descriptions are incorrectly specified or conflict with existing roles then a 400 error will be returned with a descriptive payload.
                        body: 
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <RolesResponse>
                                        <ResponseStatus>
                                            <ErrorCode>12009</ErrorCode>
                                            <Description>Permission 'UPDATE' is not allowed for role 'ROLE_API_SEARCH'</Description>
                                        </ResponseStatus>
                                    </RolesResponse>
            get:
                description: Retrieve the roles and permissions that are associated with a named user-id
                responses:
                    200:
                        body: 
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <RolesResponse>
                                        <Roles>
                                            <Role>
                                                <RoleName>ROLE_API_ORDERING</RoleName>
                                                <Permissions>
                                                    <Permission>
                                                        <PermissionName>VIEW</PermissionName>
                                                    </Permission>
                                                    <Permission>
                                                        <PermissionName>UPDATE</PermissionName>
                                                    </Permission>
                                                </Permissions>
                                            </Role>
                                            <Role>
                                                <RoleName>ROLE_API_PROFILE</RoleName>
                                                <Permissions>
                                                    <Permission>
                                                        <PermissionName>VIEW</PermissionName>
                                                    </Permission>
                                                    <Permission>
                                                        <PermissionName>UPDATE</PermissionName>
                                                    </Permission>
                                                </Permissions>
                                            </Role>
                                            <Role>
                                                <RoleName>ROLE_API_DLDA</RoleName>
                                                <Permissions>
                                                    <Permission>
                                                        <PermissionName>VIEW</PermissionName>
                                                    </Permission>
                                                    <Permission>
                                                        <PermissionName>UPDATE</PermissionName>
                                                    </Permission>
                                                </Permissions>
                                            </Role>
                                            <Role>
                                                <RoleName>ROLE_BDR</RoleName>
                                                <Permissions>
                                                    <Permission>
                                                        <PermissionName>VIEW</PermissionName>
                                                    </Permission>
                                                </Permissions>
                                            </Role>
                                            <Role>
                                                <RoleName>ROLE_API_SEARCH</RoleName>
                                                <Permissions>
                                                    <Permission>
                                                        <PermissionName>VIEW</PermissionName>
                                                    </Permission>
                                                </Permissions>
                                            </Role>
                                        </Roles>
                                    </RolesResponse>
            /{roleId}: 
                description: The {role ID} resource interacts with the specific role associated with the user ID; this resource can update the permissions, retrieve the information, as well as delete the role.
                get:
                    description: Retrieves the information associated with the Role ID.
                    responses:
                        200:
                            description: The information has been successfully received and displayed in the payload.
                            body:
                                application/xml:
                                    example: |
                                        <RolesResponse>
                                            <Roles>
                                                <Role>
                                                    <RoleName>ROLE_API_ORDERING</RoleName>
                                                    <Permissions>
                                                        <Permission>
                                                            <PermissionName>VIEW</PermissionName>
                                                        </Permission>
                                                    </Permissions>
                                                </Role>
                                                <Role>
                                                    <RoleName>ROLE_ADMIN</RoleName>
                                                    <Permissions>
                                                        <Permission>
                                                            <PermissionName>VIEW</PermissionName>
                                                        </Permission>
                                                    </Permissions>
                                                </Role>
                                            </Roles>
                                        </RolesResponse>
                put:
                    description: |
                        Add a permission to a userid.<br>
                        <strong>However</strong>, if the user ID has a permission that isn't <u>explicitly</u> stated in the PUT payload, that permission will be removed from the user ID. 
                        <strong>For this reason</strong>, adding a permission to a user ID is best done in the permissions sublevel. Avoid adding permissions at this level unless you wish to <strong>completely change</strong> all permissions for the user ID.
                    body:
                        application/xml:
                            example: |
                                <Role>
                                    <RoleName>ROLE_API_ORDERING</RoleName>
                                    <Permissions>
                                        <Permission>
                                            <PermissionName>VIEW</PermissionName>
                                        </Permission>
                                    </Permissions>
                                </Role>
                    responses:
                        200:
                            description: The permissions have been successfully updated.
                delete:
                    description: Deletes the role.
                    responses:
                        200:
                            description: The role has been successfully deleted.
                /permissions: 
                    description: The permissions resource interacts with the permissions of the user, adding and retrieving permissions.
                    get:
                        description: Retrieves the list of permissions associated with the user ID.
                        responses:
                            200:
                                description: The list of permissions has been successfully received and displayed in the payload.
                                body:
                                    application/xml:
                                        example: |
                                            <PermissionsResponse>
                                                <Permissions>
                                                    <Permission>
                                                        <PermissionName>VIEW</PermissionName>
                                                    </Permission>
                                                </Permissions>
                                            </PermissionsResponse>
                    post:
                        description: Adds a role to the user ID.
                        body:
                            application/xml:
                                example: |
                                    <Roles>
                                        <Role>
                                            <RoleName>ROLE_API_ORDERING</RoleName>
                                            <Permissions>
                                                <Permission>
                                                    <PermissionName>VIEW</PermissionName>
                                                </Permission>
                                            </Permissions>
                                        </Role>
                                    </Roles>
                        responses:
                            201:
                                description: The permissions have been successfully added to the user as described in the payload
                            409:
                                description: The permission as described in the payload already exists for the user.
                                body:
                                    application/xml:
                                        example: |
                                            <PermissionsResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12004</ErrorCode>
                                                    <Description>For account '12346099' user 'mowoc' already has permission 'UPDATE' for role 'ROLE_API_ORDERING'</Description>
                                                </ResponseStatus>
                                            </PermissionsResponse>
                    /{permissionId}: 
                        description: The {permission ID} resource interacts with the specific permission associated with the user ID; this resource can retrieve the information as well as delete the permission.
                        get:
                            description: Retrieves the information associated with the permission ID.
                            responses:
                                200:
                                    description: The information has been successfully received and displayed in the payload.
                                    body:
                                        application/xml:
                                            example: |
                                                <PermissionResponse>
                                                    <Permission>
                                                        <PermissionName>VIEW</PermissionName>
                                                    </Permission>
                                                </PermissionResponse>
                        delete:
                            description: Deletes the permission.
                            responses:
                                200:
                                    description: The permission has been successfully deleted.
        /businessNames: 
            description: A GET on this resource retrieves all the business names associated with that User ID.
            get:
                description: Retrieves the business names associated with the specified User ID.
                responses:
                    200:
                        description: The business names have been successfully found and displayed in the payload.
                        body:
                            application/xml:
                                example: |
                                    <UserResponse>
                                        <User>
                                            <Username>mowoc</Username>
                                            <Accounts>
                                                <Account>
                                                    <CompanyName>mowoc llc</CompanyName>
                                                </Account>
                                                <Account>
                                                    <CompanyName>Steveco</CompanyName>
                                                </Account>
                                                <Account>
                                                    <CompanyName>mowocAgent</CompanyName>
                                                </Account>
                                            </Accounts>
                                        </User>
                                    </UserResponse>
        /firstName: 
            description: A GET on this resource retrieves the first name of the specified User ID.
            get:
                description: Retrieves the first name of the specified User ID.
                responses:
                    200:
                        description: The first name has been successfully found and displayed in the payload.
                        body:
                            application/xml:
                                example: |
                                    <UserResponse>
                                        <User>
                                            <Username>mowoc</Username>
                                            <FirstName>Michael</FirstName>
                                        </User>
                                    </UserResponse>
        /lastName: 
            description: A GET on this resource retrieves the last name of the specified User ID.
            get:
                description: Retrieves the last name of the specified User ID.
                responses:
                    200:
                        description: The last name has have been successfully found and displayed in the payload.
                        body:
                            application/xml:
                                example: |
                                    <UserResponse>
                                        <User>
                                            <Username>mowoc</Username>
                                            <LastName>Owoc</LastName>
                                        </User>
                                    </UserResponse>
        /preferences: 
            description: reference the user preferences for a specific user in the system
            post:
                description: add a preferences to a specified user
                body:
                    application/xml:
                        example: |
                            <?xml version="1.0"?>
                            <UserPreference>
                                <Name>preferredPortal</Name>
                                <Value>shiny</Value>
                            </UserPreference>
                responses:
                    201:
                        description: Created - the preference was established for the specified user.
                        body: 
                            application/xml:
                                example: empty response
                    404:
                        description: NOT FOUND - the user preference does not exist in the system
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <UserPreferenceResponse>
                                        <ResponseStatus>
                                            <ErrorCode>12065</ErrorCode>
                                            <Description>User preference not found</Description>
                                        </ResponseStatus>
                                    </UserPreferenceResponse>
                    409:
                        description: The preference as described in the payload already exists for the user.
                        body:
                            application/xml:
                                example: |
                                    <UserPreferenceResponse>
                                        <ResponseStatus>
                                            <ErrorCode>12066</ErrorCode>
                                            <Description>A user preference with name 'preferredPortal' already exists</Description>
                                        </ResponseStatus>
                                    </UserPreferenceResponse>
            get:
                description: Retrieve the user preferences that are associated with a named user-id
                responses:
                    200:
                        body: 
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <UserPreferences>
                                        <UserPreference>
                                            <Name>preferredPortal</Name>
                                            <Value>old</Value>
                                        </UserPreference>
                                        <UserPreference>
                                            <Name>numberFormat</Name>
                                            <Value>10D</Value>
                                        </UserPreference>
                                    </UserPreferences>
            /{preferenceName}: 
                description: reference the user preferences for a specific user in the system
                get:
                    description: Retrieves the information associated with the preference name.
                    responses:
                        200:
                            description: The information has been successfully received and displayed in the payload.
                            body:
                                application/xml:
                                    example: |
                                        <UserPreference>
                                            <Name>preferredPortal</Name>
                                            <Value>old</Value>
                                        </UserPreference>
                        404:
                            description: NOT FOUND - the user preference does not exist in the system
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <UserPreferenceResponse>
                                            <ResponseStatus>
                                                <ErrorCode>12065</ErrorCode>
                                                <Description>User preference not found</Description>
                                            </ResponseStatus>
                                        </UserPreferenceResponse>
                put:
                    description: Updating the user preference for a specific user
                    body:
                        application/xml:
                            example: |
                                <UserPreference>
                                    <Value>shiny</Value>
                                </UserPreference>
                    responses:
                        200:
                            description: The user preference have been successfully updated.
                        404:
                            description: NOT FOUND - the user preference does not exist in the system
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <UserPreferenceResponse>
                                            <ResponseStatus>
                                                <ErrorCode>12065</ErrorCode>
                                                <Description>User preference not found</Description>
                                            </ResponseStatus>
                                        </UserPreferenceResponse>
                delete:
                    description: Deletes the reference .
                    responses:
                        200:
                            description: The preference has been successfully deleted.
                        404:
                            description: NOT FOUND - the user preference does not exist in the system
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <UserPreference>
                                            <ResponseStatus>
                                                <ErrorCode>12065</ErrorCode>
                                                <Description>User preference not found</Description>
                                            </ResponseStatus>
                                        </UserPreference>
/reports: 
    description: |
        Bandwidth provides a reporting infrastructure that will allow the creation
        of pre-defined reports, and the subsequent API-based exposure of those
        reports to our customers to assist them in management of their
        business.<br>
        <br>
        The reports exposed via the reporting API are defined by the Bandwidth
        staff, and will grow and adapt over time to meet our customers changing
        needs. The basic structure of the resources in the reporting API reflects
        three levels of information:
        <ol>
            <li>Reports: pre-defined templates for information that include:
                <ul>
                    <li>a name</li>
                    <li>a description of the report in general terms</li>
                    <li>a display priority of the report</li>
                    <li>a set of parameters that are used to provide boundaries on
                    the information that is provided. &nbsp;These parameters
                    contain:</li>
                    <li style="list-style: none; display: inline">
                        <ul>
                            <li>The parameter name,</li>
                            <li>a&nbsp;description of the parameter,</li>
                            <li>a declaration of whether it is required or not,
                            and&nbsp;</li>
                            <li>the type of the parameter,</li>
                            <li>a declaration of whether multi-selection is allowed or not.</li>
                        </ul>
                    </li>
                </ul>
            </li>
            <li>Instances: the result of executing a report - a parameterized set
            of data that results from the creation of a report with a set of
            parameters.
                <ul>
                    <li>They reflect the meta-data associated with actually
                    creating a report from a set of data. &nbsp;The instance is
                    used in managing the actual &nbsp;report that is made available
                    for download.</li>
                    <li>Instances contain:</li>
                    <li style="list-style: none; display: inline">
                        <ul>
                            <li>An ID</li>
                            <li>The ID of the Report that was used to generate the
                            Instance</li>
                            <li>An output format (currently PDF, XLS, or CSV)</li>
                            <li>Data about the user that requested the report.</li>
                            <li>A list of parameter values that was used to create
                            the report</li>
                            <li>An expiration date of the report.</li>
                            <li>A status, indicating whether the report data is
                            still being assembled, ready for download, or
                            expired.</li>
                        </ul>
                    </li>
                    <li>Instances are specific to a report.</li>
                </ul>
            </li>
            <li>Files: the actual data associated with a Report Instance.
                <ul>
                    <li>Files are the items that are actually retrieved from the
                    server and delivered to the user on demand. &nbsp;The file is a
                    logical resource that reflects the downloadable data that is
                    described by the Instance</li>
                </ul>
            </li>
        </ol>
        The report resource of the API allow the management of reports in the Bandwidth Dashboard.
    get:
        description: Retrieve report templates available for use within the Iris application. Items of this list are sorted by display priority in ascending order and alphabetically by name within these groups. Reports with zero display priority aren't displayed by default. Use [hidden=true] in query parameters for otherwise.
        queryParameters:
            scope:
                displayName: Scope
                type: string
                enum: [ADMIN, ACCOUNT, BOTH]
                description: The scope of the report being searched for.
                default: BOTH
                required: false
            hidden:
                displayName: hidden
                type: boolean
                description: Flag for displaying reports with zero display priority
                default: false
                required: false
        responses:
            200:
                body:
                    application/xml:
                        example: |
                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                            <ReportsResponse>
                                <Reports>
                                    <Report>
                                        <Id>123</Id>
                                        <Name>Sample Report 1</Name>
                                        <JasperUri>/jasper/path/to/sample/report1</JasperUri>
                                        <Scope>ACCOUNT</Scope>
                                        <DisplayPriority>2</DisplayPriority>
                                        <Description>Sample Report 1 Description</Description>
                                    </Report>
                                    <Report>
                                        <Id>124</Id>
                                        <Name>Sample Report 2</Name>
                                        <JasperUri>/jasper/path/to/sample/report2</JasperUri>
                                        <Scope>ACCOUNT</Scope>
                                        <DisplayPriority>1</DisplayPriority>
                                        <Description>Sample Report 2 Description</Description>
                                    </Report>
                                    <Report>
                                        <Id>133</Id>
                                        <Name>Sample Report 3</Name>
                                        <JasperUri>/jasper/path/to/sample/report3</JasperUri>
                                        <Scope>ADMIN</Scope>
                                        <DisplayPriority>3</DisplayPriority>
                                        <Description>Sample Report 3 Description</Description>
                                    </Report>
                                </Reports>
                            </ReportsResponse>
    post:
        description: |
            POST is used to create a new report. POSTing a report is restricted to ADMIN users, and requires full knowledge of the report as it is defined in the JasperSoft server.  Creation of the Report requires that the API call define
                <ul>
                    <li>The report name</li>
                    <li>a description of the report in general terms</li>
                    <li>a set of parameters that are used to provide boundaries on the information that is provided. &nbsp;These parameters contain</li>
                    <ul>
                        <li>The parameter name,</li>
                        <li>a description of the parameter,</li>
                        <li>a declaration of whether it is required or not,</li>
                        <li>the type of the parameter,</li>
                        <li>the ID of the parameter in the Jasper server, and</li>
                        <li>a declaration of whether multi-selection is allowed or not.</li>
                        <li>a display priority of the report (incorrect or omitted display priority will be replaced with the default value of 1,
                        to hide the report use the value of 0)</li>
                    </ul>
                    <li>the path to the report in the Jasper server.</li>
                    <li>the scope (whether it is open to users, or restricted to ADMINs)</li>
                </ul>
        body:
            application/xml:
                example:
                    <Report>
                        <Name>Sample Report</Name>
                        <JasperUri>/jasper/path/to/sample/report</JasperUri>
                        <Scope>ACCOUNT</Scope>
                        <DisplayPriority>3</DisplayPriority>
                        <Description>Sample Report Description</Description>
                        <Parameters>
                            <Parameter>
                                <Name>Report Parameter 1</Name>
                                <Type>String</Type>
                                <Required>true</Required>
                                <JasperId>jasperParam1</JasperId>
                                <Description>Parameter 1 Description</Description>
                                <MultiSelectAllowed>false</MultiSelectAllowed> <!--  this boolean field determines whether multiple values are possible for this parameter-->
                                <HelpInformation>Report Parameter 1 Help Text</HelpInformation>
                            </Parameter>
                            <Parameter>
                                <Name>Report Parameter 2</Name>
                                <Type>Enum</Type>
                                <Required>false</Required>
                                <!--At least one of ValueFilter and Values non-empty tags are required for enum parameter-->
                                <ValueFilter>Value1;Value2;Value3</ValueFilter>
                                <Values>
                                    <Value>
                                        <!--An InternalName tag value should be used in report instance creation-->
                                        <InternalName>Value1</InternalName>
                                        <DisplayName>Display Value2</DisplayName>
                                    </Value>
                                    <Value>
                                        <InternalName>Value2</InternalName>
                                        <DisplayName>Value2</DisplayName>
                                    </Value>
                                    <Value>
                                        <InternalName>Value3</InternalName>
                                        <DisplayName>Display Value3</DisplayName>
                                    </Value>
                                </Values>
                                <JasperId>jasperParam2</JasperId>
                                <Description>Parameter 2 Description</Description>
                                <MultiSelectAllowed>true</MultiSelectAllowed>
                                <HelpInformation>Report Parameter 2 Help Text</HelpInformation>
                            </Parameter>
                            <Parameter>
                                <Name>Report Parameter 3</Name>
                                <Type>Date</Type>
                                <Required>false</Required>
                                <JasperId>jasperParam3</JasperId>
                                <Description>Parameter 3 Description</Description>
                                <RecommendedValue>-0M</RecommendedValue>
                                <HelpInformation>Report Parameter 3 Help Text</HelpInformation>
                            </Parameter>
                        </Parameters>
                    </Report>
        responses:
            201:
                description: Successful creation of report.
                headers:
                    Location:
                        description: Contains URL of newly-created report.
                        example: https://dashboard.bandwidth.com/api/reports/1234
                body:
                    application/xml:
                        example: None
    /{reportId}: 
        get:
            description: Retrieve report template details.
            queryParameters:
                accountId:
                    displayName: Account ID
                    type: integer
                    description: Account ID to which the request is scoped, if applicable
                    required: false
            responses:
                200:
                    body:
                        application/xml:
                            example: |
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <ReportResponse>
                                    <Report>
                                        <Name>Sample Report 1</Name>
                                        <JasperUri>/jasper/path/to/sample/report1</JasperUri>
                                        <Scope>ACCOUNT</Scope>
                                        <DisplayPriority>2</DisplayPriority>
                                        <Parameters>
                                            <Parameter>
                                                <Name>Report Parameter 1</Name>
                                                <Type>String</Type>
                                                <Required>true</Required>
                                                <JasperId>jasperParam1</JasperId>
                                                <Description>Report Parameter 1 Description</Description>
                                                <MultiSelectAllowed>false</MultiSelectAllowed>
                                                <HelpInformation>Report Parameter 1 Help Text</HelpInformation>
                                            </Parameter>
                                            <Parameter>
                                                <Name>Report Parameter 2</Name>
                                                <Type>Enum</Type>
                                                <Required>false</Required>
                                                <!--Contains a semicolon separated list of InternalNames-->
                                                <ValueFilter>Value1;Value2;Value3</ValueFilter>
                                                <Values>
                                                    <Value>
                                                        <!--A InternalName tag value should be used in report instance creation-->
                                                        <InternalName>Value1</InternalName>
                                                        <!--A DisplayName tag value is used only for UI purposes-->
                                                        <DisplayName>Display Value2</DisplayName>
                                                    </Value>
                                                    <Value>
                                                        <InternalName>Value2</InternalName>
                                                        <DisplayName>Value2</DisplayName>
                                                    </Value>
                                                    <Value>
                                                        <InternalName>Value3</InternalName>
                                                        <DisplayName>Display Value3</DisplayName>
                                                    </Value>
                                                </Values>
                                                <JasperId>jasperParam2</JasperId>
                                                <Description>Report Parameter 2 Description</Description>
                                                <MultiSelectAllowed>true</MultiSelectAllowed>
                                                <HelpInformation>Report Parameter 2 Help Text</HelpInformation>
                                            </Parameter>
                                        </Parameters>
                                    </Report>
                                </ReportsResponse>
                404:
                    description: A report template matching the provided ID could not be found.
                    body:
                        application/xml:
                            example:
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <ReportResponse>
                                    <ResponseStatus>
                                        <ErrorCode>19000</ErrorCode>
                                        <Description>No report found with report ID of '123'</Description>
                                    </ResponseStatus>
                                </ReportResponse>
        put:
            description: Update an existing report template. Incorrect or omitted display priority will be replaced with the default value of 1.
            body:
                application/xml:
                    example:
                        <Report>
                            <Name>Sample Report</Name>
                            <JasperUri>/jasper/path/to/sample/report</JasperUri>
                            <Scope>ACCOUNT</Scope>
                            <Description>Report Description</Description>
                            <DisplayPriority>3</DisplayPriority>
                            <Parameters>
                                <Parameter>
                                    <Name>Report Parameter 1</Name>
                                    <Type>String</Type>
                                    <Required>true</Required>
                                    <JasperId>jasperParam1</JasperId>
                                    <Description>Parameter 1 Description</Description>
                                    <MultiSelectAllowed>false</MultiSelectAllowed>
                                    <HelpInformation>Report Parameter 1 Help Text</HelpInformation>
                                </Parameter>
                                <Parameter>
                                    <Name>Report Parameter 2</Name>
                                    <Type>Enum</Type>
                                    <Required>false</Required>
                                    <!--At least one of ValueFilter and Values non-empty tags are required for enum parameter-->
                                    <!--ValueFilter is deprecated. This tag left for a backward compatibility-->
                                    <ValueFilter>Value1;Value2;Value3</ValueFilter>
                                    <Values>
                                        <Value>
                                            <InternalName>Value1</InternalName>
                                            <DisplayName>Display Value2</DisplayName>
                                        </Value>
                                        <Value>
                                            <InternalName>Value2</InternalName>
                                            <DisplayName>Value2</DisplayName>
                                        </Value>
                                        <Value>
                                            <InternalName>Value3</InternalName>
                                            <DisplayName>Display Value3</DisplayName>
                                        </Value>
                                    </Values>
                                    <JasperId>jasperParam2</JasperId>
                                    <Description>Parameter 2 Description</Description>
                                    <MultiSelectAllowed>true</MultiSelectAllowed>
                                    <HelpInformation>Report Parameter 2 Help Text</HelpInformation>
                                </Parameter>
                            </Parameters>
                        </Report>
            responses:
                200:
                    description: The report template was updated successfully.
                404:
                    description: A report template matching the provided ID could not be found.
                    body:
                        application/xml:
                            example:
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <ReportResponse>
                                    <ResponseStatus>
                                        <ErrorCode>19000</ErrorCode>
                                        <Description>No report found with report ID of '123'</Description>
                                    </ResponseStatus>
                                </ReportResponse>
        delete:
            description: Delete an existing report template.
            responses:
                200:
                    description: The report template was deleted successfully.
                404:
                    description:
                        A report template matching the provided ID could not be found.
                    body:
                        application/xml:
                            example:
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <ReportResponse>
                                    <ResponseStatus>
                                        <ErrorCode>19000</ErrorCode>
                                        <Description>No report found with report ID of '123'</Description>
                                    </ResponseStatus>
                                </ReportResponse>
        /instances: 
            description: |
                The report instance endpoints of the Iris API allow users to view and manage report instances for a specific report.
                Report instances capture invocations of a report, including the specific set of parameters provided and any output
                generated as a result.
            get:
                description: |
                    Retrieve report instances associated with a specific report, including the up-to-date report generation status.
                queryParameters:
                    accountId:
                        displayName: Account ID
                        type: integer
                        description: Account ID to which the request is scoped, if applicable
                        required: false
                    userInstancesOnly:
                        displayName: userInstancesOnly
                        type: boolean
                        description: If this query parameter is set to true, only instances created by current user will be returned
                        required: false
                responses:
                    200:
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <ReportInstancesResponse>
                                        <Instances>
                                            <Instance>
                                                <Id>100090</Id>
                                                <ReportId>100020</ReportId>
                                                <JasperId>aadbb201-1e1c-4f4d-920b-a18ec121da6d</JasperId>
                                                <JasperExportId>703aef1d-8ca5-4265-8114-308c2ffa517c</JasperExportId>
                                                <JasperSessionId>E8279C44E4E88B361282EC9AD4F7665A</JasperSessionId>
                                                <ReportName>Sample Report</ReportName>
                                                <OutputFormat>pdf</OutputFormat>
                                                <RequestedByUserName>jbm</RequestedByUserName>
                                                <RequestedAt>2015-05-18 14:03:04</RequestedAt>
                                                <Parameters>
                                                    <Parameter>
                                                        <Name>AccountId</Name>
                                                        <Value>1</Value>
                                                    </Parameter>
                                                </Parameters>
                                                <JasperReportStatus>Expired</JasperReportStatus>
                                                <Status>Expired</Status>
                                            </Instance>
                                            <Instance>
                                                <Id>100098</Id>
                                                <ReportId>100020</ReportId>
                                                <JasperId>4ff4d77c-a2b6-4ab6-8dd7-193bf072b64e</JasperId>
                                                <JasperExportId>61c444e3-b8d1-4299-92f8-0371ba45e123</JasperExportId>
                                                <JasperSessionId>813885D097A3DF7B0CAC94475CEE0CAA</JasperSessionId>
                                                <ReportName>Sample Report</ReportName>
                                                <OutputFormat>html</OutputFormat>
                                                <RequestedByUserName>jbm</RequestedByUserName>
                                                <RequestedAt>2015-05-19 09:18:40</RequestedAt>
                                                <Parameters>
                                                    <Parameter>
                                                        <Name>AccountId</Name>
                                                        <Value>1</Value>
                                                    </Parameter>
                                                    <Parameter>
                                                        <Name>SiteId</Name>
                                                        <Value>1</Value>
                                                    </Parameter>
                                                </Parameters>
                                                <JasperReportStatus>Expired</JasperReportStatus>
                                                <Status>Expired</Status>
                                            </Instance>
                                            <Instance>
                                                <Id>100102</Id>
                                                <ReportId>100020</ReportId>
                                                <JasperId>83a5fd11-801d-4ee7-9f0c-0ab83882be86</JasperId>
                                                <JasperExportId>d8396a60-200c-4205-9609-ceca3d47dc7a</JasperExportId>
                                                <JasperSessionId>21E6866B95AC144828178A2CF251F756</JasperSessionId>
                                                <ReportName>Sample Report</ReportName>
                                                <OutputFormat>pdf</OutputFormat>
                                                <RequestedByUserName>jbm</RequestedByUserName>
                                                <RequestedAt>2015-05-19 11:05:12</RequestedAt>
                                                <Parameters>
                                                    <Parameter>
                                                        <Name>AccountId</Name>
                                                        <Value>1</Value>
                                                    </Parameter>
                                                </Parameters>
                                                <JasperReportStatus>Ready</JasperReportStatus>
                                                <Status>Ready</Status>
                                                <ExpiresAt>2016-06-15</ExpiresAt>
                                            </Instance>
                                        </Instances>
                                    </ReportInstancesResponse>
            post:
                description: Create a new report instance for a specific report.
                queryParameters:
                    accountId:
                        displayName: Account ID
                        type: integer
                        description: Account ID to which the request is scoped, if applicable
                        required: false
                body:
                    application/xml:
                        example: |
                            <Instance>
                                <OutputFormat>pdf</OutputFormat>
                                <Parameters>
                                    <Parameter>
                                        <Name>Account</Name>
                                        <Value>1</Value>
                                    </Parameter>
                                    <Parameter>
                                        <Name>Sub-account</Name>
                                        <Value>1</Value>
                                    </Parameter>
                                </Parameters>
                                <ExpiresAt>2016-11-25</ExpiresAt>  <!-- the date (not longer than 30 days in the future) at the end of which the instance will expire, should be specified in YYYY-MM-DD format-->
                            </Instance>
                responses:
                    200:
                        description: Successful creation of report instance.
                        headers:
                            Location:
                                description: Contains URL of newly-created report instance.
                                example: https://dashboard.bandwidth.com/api/reports/1234/instances/5678
                        body:
                            application/xml:
                                example: None
                    400:
                        body:
                            application/xml:
                                example: |
                                    <ReportInstanceResponse>
                                        <ResponseStatus>
                                            <ErrorCode>19032</ErrorCode>
                                            <Description>Missing one or more required report parameters: AccountId</Description>
                                        </ResponseStatus>
                                    </ReportInstanceResponse>
                    503:
                        body:
                            application/xml:
                                example: |
                                    <ReportInstanceResponse>
                                        <ResponseStatus>
                                            <ErrorCode>19031</ErrorCode>
                                            <Description>Error encountered processing request via external reporting service.  Please contact Bandwidth support for further assistance.</Description>
                                        </ResponseStatus>
                                    </ReportInstanceResponse>
            /{instanceId}: 
                get:
                    description: Retrieve report instance details, including the current report instance status.
                    queryParameters:
                        accountId:
                            displayName: Account ID
                            type: integer
                            description: Account ID to which the request is scoped, if applicable
                            required: false
                    responses:
                        200:
                            description: Successful retrieval of report instance.
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <ReportInstanceResponse>
                                                <Instance>
                                                    <Id>100102</Id>
                                                    <ReportId>100020</ReportId>
                                                    <JasperId>83a5fd11-801d-4ee7-9f0c-0ab83882be86</JasperId>
                                                    <JasperExportId>d8396a60-200c-4205-9609-ceca3d47dc7a</JasperExportId>
                                                    <JasperSessionId>21E6866B95AC144828178A2CF251F756</JasperSessionId>
                                                    <ReportName>Sample Report</ReportName>
                                                    <OutputFormat>pdf</OutputFormat>
                                                    <RequestedByUserName>jbm</RequestedByUserName>
                                                    <RequestedAt>2015-05-19 11:05:12</RequestedAt>
                                                    <Parameters>
                                                        <Parameter>
                                                            <Name>AccountId</Name>
                                                            <Value>1</Value>
                                                        </Parameter>
                                                    </Parameters>
                                                    <JasperReportStatus>Ready</JasperReportStatus>
                                                    <Status>Ready</Status>
                                                    <ExpiresAt>2016-06-15</ExpiresAt>
                                                </Instance>
                                        </ReportInstanceResponse>
                        404:
                            description: A report template matching the provided ID could not be found.
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <ReportInstanceResponse>
                                            <ResponseStatus>
                                                <ErrorCode>19019</ErrorCode>
                                                <Description>No report instance found for report 100020 with Id of '100103'</Description>
                                            </ResponseStatus>
                                        </ReportInstanceResponse>
                /file: 
                    get:
                        description: Retrieve report instance output file, if output is available.
                        queryParameters:
                            accountId:
                                displayName: Account ID
                                type: integer
                                description: Account ID to which the request is scoped, if applicable
                                required: false
                        responses:
                            200:
                                description: Successful retrieval of report output.
                                headers:
                                    Content-Disposition:
                                        description: |
                                            Indicates the response body is a downloaded file, and provides the browser details suggesting how it might be handled.
                                        example: "attachment; filename=output.pdf"
                            202:
                                description: Report generation is still in progress.  Check the status of the report instance, and When the report instance status becomes "Ready",
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version='1.0' encoding='UTF-8'?>
                                            <ReportInstanceFileResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>19048</ErrorCode>
                                                    <Description>
                                                        Report generation in progress; Output not yet available
                                                    </Description>
                                                </ResponseStatus>
                                            </ReportInstanceFileResponse>
                            404:
                                description: A report instance matching the supplied identification information could not be found.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version='1.0' encoding='UTF-8'?>
                                            <ReportInstanceFileResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>19019</ErrorCode>
                                                    <Description>
                                                        No report instance found for report 123 with Id of '456'
                                                    </Description>
                                                </ResponseStatus>
                                            </ReportInstanceFileResponse>
    /instances: 
        description: |
            The report instances endpoints of the Iris API allow users to view and manage report instances.  Report instances
            capture invocations of a report, including the specific set of parameters provided and any output generated as a
            result.
        get:
            description: |
                Retrieve all report instances or, if supplied, instances associated with a specific account ID.  Includes
                up-to-date report generation status.
            queryParameters:
                accountId:
                    displayName: Account ID
                    type: integer
                    description: Account ID to which the request is scoped, if applicable
                    required: false
                scope:
                    displayName: Scope
                    type: string
                    enum: [ADMIN, ACCOUNT, BOTH]
                    description: The scope of the report being searched for.
                    default: BOTH
                    required: false
                userInstancesOnly:
                            displayName: userInstancesOnly
                            type: boolean
                            description: If this query parameter is set to true, only instances created by current user will be returned
                            required: false
            responses:
                200:
                    body:
                        application/xml:
                            example: |
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <ReportInstancesResponse>
                                    <Instances>
                                        <Instance>
                                            <Id>100090</Id>
                                            <ReportId>100020</ReportId>
                                            <JasperId>aadbb201-1e1c-4f4d-920b-a18ec121da6d</JasperId>
                                            <JasperExportId>703aef1d-8ca5-4265-8114-308c2ffa517c</JasperExportId>
                                            <JasperSessionId>E8279C44E4E88B361282EC9AD4F7665A</JasperSessionId>
                                            <ReportName>Sample Report</ReportName>
                                            <OutputFormat>pdf</OutputFormat>
                                            <RequestedByUserName>jbm</RequestedByUserName>
                                            <RequestedAt>2015-05-18 14:03:04</RequestedAt>
                                            <Parameters>
                                                <Parameter>
                                                    <Name>AccountId</Name>
                                                    <Value>1</Value>
                                                </Parameter>
                                            </Parameters>
                                            <JasperReportStatus>Expired</JasperReportStatus>
                                            <Status>Expired</Status>
                                        </Instance>
                                        <Instance>
                                            <Id>100098</Id>
                                            <ReportId>100020</ReportId>
                                            <JasperId>4ff4d77c-a2b6-4ab6-8dd7-193bf072b64e</JasperId>
                                            <JasperExportId>61c444e3-b8d1-4299-92f8-0371ba45e123</JasperExportId>
                                            <JasperSessionId>813885D097A3DF7B0CAC94475CEE0CAA</JasperSessionId>
                                            <ReportName>Sample Report</ReportName>
                                            <OutputFormat>html</OutputFormat>
                                            <RequestedByUserName>jbm</RequestedByUserName>
                                            <RequestedAt>2015-05-19 09:18:40</RequestedAt>
                                            <Parameters>
                                                <Parameter>
                                                    <Name>AccountId</Name>
                                                    <Value>1</Value>
                                                </Parameter>
                                                <Parameter>
                                                    <Name>SiteId</Name>
                                                    <Value>1</Value>
                                                </Parameter>
                                            </Parameters>
                                            <JasperReportStatus>Expired</JasperReportStatus>
                                            <Status>Expired</Status>
                                        </Instance>
                                        <Instance>
                                            <Id>100102</Id>
                                            <ReportId>100020</ReportId>
                                            <JasperId>83a5fd11-801d-4ee7-9f0c-0ab83882be86</JasperId>
                                            <JasperExportId>d8396a60-200c-4205-9609-ceca3d47dc7a</JasperExportId>
                                            <JasperSessionId>21E6866B95AC144828178A2CF251F756</JasperSessionId>
                                            <ReportName>Sample Report</ReportName>
                                            <OutputFormat>pdf</OutputFormat>
                                            <RequestedByUserName>jbm</RequestedByUserName>
                                            <RequestedAt>2015-05-19 11:05:12</RequestedAt>
                                            <Parameters>
                                                <Parameter>
                                                    <Name>AccountId</Name>
                                                    <Value>1</Value>
                                                </Parameter>
                                            </Parameters>
                                            <JasperReportStatus>Ready</JasperReportStatus>
                                            <Status>Ready</Status>
                                            <ExpiresAt>2016-06-15</ExpiresAt>
                                        </Instance>
                                    </Instances>
                                </ReportInstancesResponse>
/terminationProducts: 
    description: API for work with TermServices
    /carrier: 
        get:
          description: |
            This API allow get a list of all available carrier names from Roger.
          responses:
            200:
              body:
                application/xml:
                  example:
                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                    <TerminationCarriersResponse>
                      <TerminationCarriers>
                        <TerminationCarrier>
                          <carriername>Carrier</carriername>
                          <description>Some carrier</description>
                          <profileId>6</profileId>
                          <gatewayId>14</gatewayId>
                          <carrierId>1</carrierId>
                          <maskPosition>1</maskPosition>
                        </TerminationCarrier>
                      </TerminationCarriers>
                    </TerminationCarriersResponse>
            500:
              body:
                application/xml:
                  example:
                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                    <TerminationCarriersResponse>
                      <ResponseStatus>
                        <ErrorCode>18000</ErrorCode>
                        <Description>Internal Roger error</Description>
                      </ResponseStatus>
                    </TerminationCarriersResponse>
    /account: 
        get:
          description: |
            Get all accounts from term services.
          responses:
            200:
              body:
                application/xml:
                  example: |
                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                    <AccountsResponse>
                      <TerminationAccountList>
                        <TerminationAccount>
                          <id>1</id>
                          <externalAccountId>12</externalAccountId>
                          <lcrId>4</lcrId>
                          <core2Id>8</core2Id>
                        </TerminationAccount>
                      </TerminationAccountList>
                    </AccountsResponse>
        post:
            description: deprecated method to create account
            body:
              application/xml:
                example: |
                  <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                  <TerminationAccount>
                    <externalAccountId>12</externalAccountId>
                  </TerminationAccount>
            responses:
              201:
                description: account was successfully created
                headers:
                  Location:
                    description: contains create termination account id<br>
                    example: http://termservices.url/account/1
                body:
                  application/xml:
                    example: |
                      <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                      <TerminationAccountResponse>
                        <TerminationAccount>
                          <id>1</id>
                          <externalAccountId>12</externalAccountId>
                          <lcrId>4</lcrId>
                          <core2Id>8</core2Id>
                        </TerminationAccount>
                      </TerminationAccountResponse>
              400:
                description: required fields are absent, npaNxx or global carrier mask validation failed
    /attributes: 
        get:
            description: get all attribute metadata
            responses:
              200:
                body:
                  application/xml:
                    example:
                      <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                      <TerminationAttributeMetadatasResponse>
                        <TerminationAttributeMetadatas>
                            <TerminationAttributeMetadata>
                                <id>4</id>
                                <name>TRACE</name>
                                <validationType>FREE_FORM</validationType>
                                <attributeProvisionTypes>
                                    <attributeProvisionType>ACCOUNT</attributeProvisionType>
                                    <attributeProvisionType>GATEWAY</attributeProvisionType>
                                </attributeProvisionTypes>
                                <origin>LCR</origin>
                                <repeatable>true</repeatable>
                                <values>
                                    <value>OPTION1</value>
                                    <value>OPTION2</value>
                                </values>
                            </TerminationAttributeMetadata>
                        </TerminationAttributeMetadatas>
                      </TerminationAttributeMetadatasResponse>
        post:
          description: post attribute metadata
          body:
              application/xml:
                  example:
                      <?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
                      <TerminationAttributeMetadata>
                        <name>TRACE</name>
                        <validationType>FREE_FORM</validationType>
                        <attributeProvisionTypes>
                            <attributeProvisionType>ACCOUNT</attributeProvisionType>
                            <attributeProvisionType>GATEWAY</attributeProvisionType>
                        </attributeProvisionTypes>
                        <origin>LCR</origin>
                        <repeatable>true</repeatable>
                        <values>
                            <value>OPTION1</value>
                            <value>OPTION2</value>
                        </values>
                      </TerminationAttributeMetadata>
          responses:
              201:
                  description:
                      The carrier mask has been created as described in the payload <br>
                  body:
                      application/xml:
                          example:
                              <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                              <TerminationAttributeMetadataResponse>
                                <TerminationAttributeMetadata>
                                    <id>5</id>
                                    <name>TRACE</name>
                                    <validationType>FREE_FORM</validationType>
                                    <attributeProvisionTypes>
                                        <attributeProvisionType>ACCOUNT</attributeProvisionType>
                                        <attributeProvisionType>GATEWAY</attributeProvisionType>
                                    </attributeProvisionTypes>
                                    <origin>LCR</origin>
                                    <repeatable>true</repeatable>
                                    <values>
                                        <value>OPTION1</value>
                                        <value>OPTION2</value>
                                    </values>
                                </TerminationAttributeMetadata>
                              </TerminationAttributeMetadataResponse>
                  headers:
                    Location:
                      description: contains attribute metadata id after last "/" <br>
        put:
            description: update attribute metadata
            body:
                application/xml:
                    example:
                        <TerminationAttributeMetadata>
                            <id>6</id>
                            <name>TRACE</name>
                            <validationType>FREE_FORM</validationType>
                            <attributeProvisionTypes>
                                <attributeProvisionType>ACCOUNT</attributeProvisionType>
                                <attributeProvisionType>GATEWAY</attributeProvisionType>
                            </attributeProvisionTypes>
                            <origin>LCR</origin>
                            <repeatable>true</repeatable>
                            <values>
                                <value>OPTION1</value>
                                <value>OPTION2</value>
                            </values>
                        </TerminationAttributeMetadata>
            responses:
                200:
                    description:
                        The carrier mask has been updated
                    body:
                        application/xml:
                            example:
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <TerminationAttributeMetadataResponse>
                                    <TerminationAttributeMetadata>
                                        <id>6</id>
                                        <name>TRACE</name>
                                        <validationType>FREE_FORM</validationType>
                                        <attributeProvisionTypes>
                                            <attributeProvisionType>ACCOUNT</attributeProvisionType>
                                            <attributeProvisionType>GATEWAY</attributeProvisionType>
                                        </attributeProvisionTypes>
                                        <origin>LCR</origin>
                                        <repeatable>true</repeatable>
                                        <values>
                                            <value>OPTION1</value>
                                            <value>OPTION2</value>
                                        </values>
                                    </TerminationAttributeMetadata>
                                </TerminationAttributeMetadataResponse>
        /{id}:
            get:
               description: get account by id
               responses:
                     200:
                       body:
                         application/xml:
                           example:
                             <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                             <TerminationAttributeMetadataResponse>
                                <TerminationAttributeMetadata>
                                    <id>7</id>
                                    <name>TRACE</name>
                                    <validationType>FREE_FORM</validationType>
                                    <attributeProvisionTypes>
                                        <attributeProvisionType>ACCOUNT</attributeProvisionType>
                                        <attributeProvisionType>GATEWAY</attributeProvisionType>
                                    </attributeProvisionTypes>
                                    <origin>LCR</origin>
                                    <repeatable>true</repeatable>
                                    <values>
                                        <value>OPTION1</value>
                                        <value>OPTION2</value>
                                    </values>
                                </TerminationAttributeMetadata>
                             </TerminationAttributeMetadataResponse>
        /origin:
            get:
                queryParameters:
                    origin:
                description: get all attributes by origin
                responses:
                     200:
                       body:
                         application/xml:
                           example:
                             <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                             <TerminationAttributeMetadataByOriginResponse>
                                <TerminationAttributeMetadatas>
                                    <TerminationAttributeMetadata>
                                        <id>8</id>
                                        <name>TRACE</name>
                                        <validationType>FREE_FORM</validationType>
                                        <attributeProvisionTypes>
                                            <attributeProvisionType>ACCOUNT</attributeProvisionType>
                                            <attributeProvisionType>GATEWAY</attributeProvisionType>
                                        </attributeProvisionTypes>
                                        <origin>LCR</origin>
                                        <repeatable>true</repeatable>
                                        <values>
                                            <value>OPTION1</value>
                                            <value>OPTION2</value>
                                        </values>
                                    </TerminationAttributeMetadata>
                                </TerminationAttributeMetadatas>
                             </TerminationAttributeMetadataByOriginResponse>
        /type:
            get:
                queryParameters:
                    type:
                description: get all attributes by type
                responses:
                     200:
                       body:
                         application/xml:
                           example:
                             <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                             <TerminationAttributeMetadataByNameResponse>
                                <TerminationAttributeMetadata>
                                    <id>9</id>
                                    <name>TRACE</name>
                                    <validationType>FREE_FORM</validationType>
                                    <attributeProvisionTypes>
                                        <attributeProvisionType>ACCOUNT</attributeProvisionType>
                                        <attributeProvisionType>GATEWAY</attributeProvisionType>
                                    </attributeProvisionTypes>
                                    <origin>LCR</origin>
                                    <repeatable>true</repeatable>
                                    <values>
                                        <value>OPTION1</value>
                                        <value>OPTION2</value>
                                    </values>
                                </TerminationAttributeMetadata>
                             </TerminationAttributeMetadataByNameResponse>
    /product: 
        get:
          description: |
            Get all products from term services.
          responses:
            200:
              body:
                application/xml:
                  example: |
                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                    <TerminationProductsResponse>
                      <TerminationProducts>
                        <TerminationProduct>
                          <id>1</id>
                          <name>TermProduct</name>
                          <description>test product</description>
                          <terminationAttributes>
                            <terminationAttribute>
                              <id>8</id>
                              <type>TRACE</type>
                              <value>true</value>
                              <effectiveDate>2014-10-23T14:27:33</effectiveDate>
                              <inEffectiveDate>2014-10-23T14:27:33</inEffectiveDate>
                              <externalId>12</externalId>
                            </terminationAttribute>
                          </terminationAttributes>
                        </TerminationProduct>
                      </TerminationProducts>
                    </TerminationProductsResponse>
        post:
            description: create product
            body:
              application/xml:
                example: |
                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                    <TerminationProduct>
                      <id>1</id>
                      <name>TermProduct</name>
                      <description>test product</description>
                    </TerminationProduct>
            responses:
              201:
                description: product was successfully created
                headers:
                  Location:
                    description: contains created termination product id<br>
                    example: http://termservices.url/product/1
                body:
                  application/xml:
                    example: |
                      <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                      <TerminationProductResponse>
                        <TerminationProduct>
                          <id>1</id>
                          <name>TermProduct</name>
                          <description>test product</description>
                          <terminationAttributes>
                          </terminationAttributes>
                        </TerminationProduct>
                      </TerminationProductResponse>
              400:
                description: required fields are absent, attribute list is not empty
        /{productId}: 
            get:
              description: |
                Get termination product by id.
              queryParameters:
                toAssign:
                  description: if toAssign = true response is a formated json response of the product assignment JSON. So that an upstream system can take this json, fill in the values, and submit it to a product assignment.
              responses:
                200:
                  body:
                    application/xml:
                      example: |
                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                        <TerminationProductResponse>
                          <TerminationProduct>
                            <id>1</id>
                            <name>TermProduct</name>
                            <description>test product</description>
                            <terminationAttributes>
                              <terminationAttribute>
                                <id>8</id>
                                <type>TRACE</type>
                                <value>true</value>
                                <effectiveDate>2014-10-23T14:27:33</effectiveDate>
                                <inEffectiveDate>2014-10-23T14:27:33</inEffectiveDate>
                                <externalId>12</externalId>
                              </terminationAttribute>
                            </terminationAttributes>
                          </TerminationProduct>
                        </TerminationProductResponse>
                404:
                  description: |
                    Could not find product by id.
                500:
                  description: |
                    System error.
            delete:
              description: |
                Delete termination product by id.
              responses:
                200:
                  description: |
                    product was successfully removed.
                404:
                  description: |
                    Could not find product by id.
                500:
                  description: |
                    System error.
            /attribute: 
                get:
                  description: Get all product attributes
                  responses:
                    200:
                      body:
                        application/xml:
                          example: |
                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                            <TerminationProductAttributesResponse>
                                <TerminationProduct>
                                    <TerminationAttributes>
                                        <TerminationAttribute>
                                            <id>25</id>
                                            <type>TRACE</type>
                                            <value>true</value>
                                            <effectiveDate>2014-11-13T13:43:07</effectiveDate>
                                            <inEffectiveDate>2014-11-13T13:43:07</inEffectiveDate>
                                        </TerminationAttribute>
                                    </TerminationAttributes>
                                </TerminationProduct>
                            </TerminationProductAttributesResponse>
                post:
                    description: create product attribute
                    body:
                      application/xml:
                        example: |
                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                            <TerminationAttribute>
                                <type>TRACE</type>
                                <value>true</value>
                                <effectiveDate>2014-11-13T13:44:59</effectiveDate>
                                <inEffectiveDate>2014-11-13T13:44:59</inEffectiveDate>
                            </TerminationAttribute>
                    responses:
                      201:
                        description: product attribute was successfully created
                        headers:
                          Location:
                            description: contains created product attribute id<br>
                            example: http://termservices.url/product/1/attribute/1
                        body:
                          application/xml:
                            example: |
                              <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                              <TerminationProductAttributeResponse>
                                <TerminationProduct>
                                    <TerminationAttributes>
                                        <TerminationAttribute>
                                            <id>26</id>
                                            <type>TRACE</type>
                                            <value>true</value>
                                            <effectiveDate>2014-11-13T13:44:59</effectiveDate>
                                            <inEffectiveDate>2014-11-13T13:44:59</inEffectiveDate>
                                        </TerminationAttribute>
                                    </TerminationAttributes>
                                </TerminationProduct>
                              </TerminationProductAttributeResponse>
                /{attributeId}: 
                    get:
                      description: Get all product attribute by id
                      responses:
                        200:
                          body:
                            application/xml:
                              example: |
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <TerminationProductAttributeResponse>
                                    <TerminationProduct>
                                        <TerminationAttributes>
                                            <TerminationAttribute>
                                                <id>27</id>
                                                <type>TRACE</type>
                                                <value>true</value>
                                                <effectiveDate>2014-11-13T13:49:09</effectiveDate>
                                                <inEffectiveDate>2014-11-13T13:49:09</inEffectiveDate>
                                            </TerminationAttribute>
                                        </TerminationAttributes>
                                    </TerminationProduct>
                                </TerminationProductAttributeResponse>
    /routingexception: 
        get:
            description: Get list of named Routing Exceptions from Roger
            responses:
              200:
                body:
                  application/xml:
                    example:
                      <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                      <TerminationRoutingExceptionsResponse>
                        <TerminationRoutingExceptions>
                            <TerminationRoutingException>
                                <id>6</id>
                                <routingExceptionName>routingExceptionTestName</routingExceptionName>
                                <RoutingExceptionPrefixes>
                                    <RoutingExceptionPrefix>
                                        <prefix>403459</prefix>
                                        <routingExceptionType>BLOCK</routingExceptionType>
                                    </RoutingExceptionPrefix>
                                </RoutingExceptionPrefixes>
                            </TerminationRoutingException>
                        </TerminationRoutingExceptions>
                      </TerminationRoutingExceptionsResponse>
              500:
                body:
                  application/xml:
                    example:
                      <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                      <TerminationRoutingExceptionResponse>
                        <ResponseStatus>
                          <ErrorCode>18000</ErrorCode>
                          <Description>Internal Roger error</Description>
                        </ResponseStatus>
                      </TerminationRoutingExceptionResponse>
        post:
            description: Create a routing exception
            body:
                application/xml:
                    example:
                        <?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
                        <TerminationRoutingException>
                            <routingExceptionName>routingExceptionTestName</routingExceptionName>
                            <RoutingExceptionPrefixes>
                                <RoutingExceptionPrefix>
                                    <prefix>403459</prefix>
                                    <routingExceptionType>BLOCK</routingExceptionType>
                                </RoutingExceptionPrefix>
                            </RoutingExceptionPrefixes>
                        </TerminationRoutingException>
            responses:
                201:
                    description: The routing exception has been created as described in the payload <br>
                    body:
                        application/xml:
                            example:
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <TerminationRoutingExceptionResponse>
                                    <TerminationRoutingException>
                                        <id>7</id>
                                        <routingExceptionName>routingExceptionTestName</routingExceptionName>
                                        <RoutingExceptionPrefixes>
                                            <RoutingExceptionPrefix>
                                                <prefix>403459</prefix>
                                                <routingExceptionType>BLOCK</routingExceptionType>
                                            </RoutingExceptionPrefix>
                                        </RoutingExceptionPrefixes>
                                    </TerminationRoutingException>
                                </TerminationRoutingExceptionResponse>
                    headers:
                        Location:
                            description: contains routingException id after last "/" <br>
                500:
                    description: It may happen in many cases, e.g. such routing exception name already exists
                    body:
                        application/xml:
                            example:
                                 <TerminationRoutingExceptionResponse>
                                   <ResponseStatus>
                                     <ErrorCode>18000</ErrorCode>
                                     <Description>Internal Roger error</Description>
                                   </ResponseStatus>
                                 </TerminationRoutingExceptionResponse>
        put:
            description: update routing exception
            body:
                application/xml:
                    example:
                        <TerminationRoutingException>
                            <id>8</id>
                            <routingExceptionName>routingExceptionTestName</routingExceptionName>
                             <RoutingExceptionPrefixes>
                                <RoutingExceptionPrefix>
                                    <prefix>403460</prefix>
                                    <routingExceptionType>BLOCK</routingExceptionType>
                                </RoutingExceptionPrefix>
                             </RoutingExceptionPrefixes>
                        </TerminationRoutingException>
        /{id}:
            delete:
                description: delete routing exception by id
    /carriermask: 
        get:
            description: Get list of named Carrier Masks from Roger
            responses:
              200:
                body:
                  application/xml:
                    example:
                      <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                      <TerminationCarrierMasksResponse>
                        <TerminationCarrierMasks>
                            <TerminationCarrierMask>
                                <id>5</id>
                                <name>testName1</name>
                                <carrierMaskType>NPANXX</carrierMaskType>
                                <NpaNxxCarrierMasks>
                                    <NpaNxxCarrierMask>
                                        <carrierMask>00000</carrierMask>
                                        <npaNxx>222222</npaNxx>
                                    </NpaNxxCarrierMask>
                                </NpaNxxCarrierMasks>
                                <userType>TERMINATION_SERVICES</userType>
                            </TerminationCarrierMask>
                            <TerminationCarrierMask>
                                <id>6</id>
                                <name>testName2</name>
                                <carrierMaskType>NPANXX</carrierMaskType>
                                <NpaNxxCarrierMasks>
                                    <NpaNxxCarrierMask>
                                        <carrierMask>00000</carrierMask>
                                        <npaNxx>222223</npaNxx>
                                    </NpaNxxCarrierMask>
                                </NpaNxxCarrierMasks>
                                <userType>TERMINATION_SERVICES</userType>
                            </TerminationCarrierMask>
                        </TerminationCarrierMasks>
                      </TerminationCarrierMasksResponse>
              500:
                body:
                  application/xml:
                    example:
                      <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                      <TerminationCarrierMaskResponse>
                        <ResponseStatus>
                          <ErrorCode>18000</ErrorCode>
                          <Description>Internal Roger error</Description>
                        </ResponseStatus>
                      </TerminationCarrierMaskResponse>
        post:
          description: Create a carrier mask
          body:
              application/xml:
                  example:
                      <?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
                      <TerminationCarrierMask>
                        <name>testName</name>
                        <carrierMaskType>NPANXX</carrierMaskType>
                        <npaNxxCarrierMasks>
                            <npaNxxCarrierMask>
                                <carrierMask>00000</carrierMask>
                                <npaNxx>222222</npaNxx>
                            </npaNxxCarrierMask>
                        </npaNxxCarrierMasks>
                        <userType>TERMINATION_SERVICES</userType>
                      </TerminationCarrierMask>
          responses:
              201:
                  description:
                      The carrier mask has been created as described in the payload <br>
                  body:
                      application/xml:
                          example:
                              <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                              <TerminationCarrierMaskResponse>
                                <TerminationCarrierMask>
                                    <id>7</id>
                                    <name>testName</name>
                                    <carrierMaskType>NPANXX</carrierMaskType>
                                    <npaNxxCarrierMasks>
                                        <npaNxxCarrierMask>
                                            <carrierMask>00000</carrierMask>
                                            <npaNxx>222222</npaNxx>
                                        </npaNxxCarrierMask>
                                    </npaNxxCarrierMasks>
                                    <userType>TERMINATION_SERVICES</userType>
                                </TerminationCarrierMask>
                              </TerminationCarrierMaskResponse>
                  headers:
                    Location:
                      description: contains carrier mask id after last "/" <br>
              500:
                  description: It may happen in many cases, e.g. such carrier mask name already exists
                  body:
                      application/xml:
                          example:
                            <TerminationCarrierMaskResponse>
                              <ResponseStatus>
                                <ErrorCode>18000</ErrorCode>
                                <Description>Internal Roger error</Description>
                              </ResponseStatus>
                            </TerminationCarrierMaskResponse>
        put:
            description: Update carrier mask
            body:
                application/xml:
                    example:
                        <TerminationCarrierMask>
                            <id>8</id>
                            <name>testName</name>
                            <carrierMaskType>NPANXX</carrierMaskType>
                            <npaNxxCarrierMasks>
                                <npaNxxCarrierMask>
                                    <carrierMask>11111</carrierMask>
                                    <npaNxx>222222</npaNxx>
                                </npaNxxCarrierMask>
                            </npaNxxCarrierMasks>
                            <userType>TERMINATION_SERVICES</userType>
                        </TerminationCarrierMask>
            responses:
                200:
                    description:
                        The carrier mask has been updated
                    body:
                        application/xml:
                            example:
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <TerminationCarrierMaskResponse>
                                  <TerminationCarrierMask>
                                      <id>8</id>
                                      <name>testName</name>
                                      <carrierMaskType>NPANXX</carrierMaskType>
                                      <npaNxxCarrierMasks>
                                          <npaNxxCarrierMask>
                                              <carrierMask>11111</carrierMask>
                                              <npaNxx>222222</npaNxx>
                                          </npaNxxCarrierMask>
                                      </npaNxxCarrierMasks>
                                      <userType>TERMINATION_SERVICES</userType>
                                  </TerminationCarrierMask>
                                </TerminationCarrierMaskResponse>
        /{id}:
            delete:
               description: Delete carrier mask by id
        /metadata:
          get:
            description: Get list of carrier mask metadata
            responses:
              200:
                body:
                  application/xml:
                    example:
                      <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                      <TerminationCarrierMaskMetadatasResponse>
                        <TerminationCarrierMasks>
                          <TerminationCarrierMask>
                            <id>1</id>
                            <name>testValue1</name>
                            <carrierMaskType>NPANXX</carrierMaskType>
                            <userType>TERMINATION_SERVICES</userType>
                          </TerminationCarrierMask>
                        </TerminationCarrierMasks>
                      </TerminationCarrierMaskMetadatasResponse>
          /{id}:
            get:
              description: Get carrier mask by specified id
              responses:
                200:
                  body:
                    application/xml:
                      example:
                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                        <TerminationCarrierMaskMetadataResponse>
                          <TerminationCarrierMask>
                            <id>2</id>
                            <name>testValue1</name>
                            <carrierMaskType>NPANXX</carrierMaskType>
                            <userType>TERMINATION_SERVICES</userType>
                          </TerminationCarrierMask>
                        </TerminationCarrierMaskMetadataResponse>
          /search:
            get:
              description: Get carrier mask by specified carrier mask name
              queryParameters:
                query_name:
                  description: carrier mask name
                  type: string
                  example: testValue1
              responses:
                200:
                  body:
                    application/xml:
                      example:
                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                        <TerminationCarrierMaskMetadataSearchResponse>
                          <TerminationCarrierMasks>
                            <id>3</id>
                            <name>testValue1</name>
                            <carrierMaskType>NPANXX</carrierMaskType>
                            <userType>TERMINATION_SERVICES</userType>
                          </TerminationCarrierMasks>
                        </TerminationCarrierMaskMetadataSearchResponse>
        /file/{fileName}/{carrierMaskName}/{carrierMaskType}:
          get:
            description: Upload carrier mask file
            body:
              application/x-www-form-urlencoded:
                formParameters:
                  file:
                    type: file
                    description: file to upload
            responses:
              201:
                description:
                  The carrier mask was successfully uploaded
                body:
                  application/xml:
                    example:
                      <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                      <CarrierMaskFileResponse>
                        <CarrierMaskFile>
                          <id>6</id>
                        </CarrierMaskFile>
                      </CarrierMaskFileResponse>
    /ratedeckassignment: 
        get:
          description: |
            Get all rate deck assignments
          responses:
            200:
              body:
                application/xml:
                  example: |
                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                    <TerminationRateDeckAssignmentsResponse>
                        <TerminationRateDeckAssignments>
                            <TerminationRateDeckAssignment>
                                <id>1</id>
                                <termServiceRateDeckId>2</termServiceRateDeckId>
                                <increaseDate>2014-11-13T14:17:05</increaseDate>
                                <decreaseDate>2014-11-13T14:17:05</decreaseDate>
                            </TerminationRateDeckAssignment>
                        </TerminationRateDeckAssignments>
                    </TerminationRateDeckAssignmentsResponse>
        post:
            description: assign rate deck
            body:
                application/xml:
                    example:
                        <?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
                        <TerminationRateDeckAssignment>
                            <termServiceRateDeckId>17</termServiceRateDeckId>
                            <termServiceAccountId>89</termServiceAccountId>
                            <externalProfileId>150</externalProfileId>
                            <externalAssignmentId>12</externalAssignmentId>
                            <billingAccountId>2</billingAccountId>
                            <increaseDate>2014-11-14T15:27:11</increaseDate>
                            <decreaseDate>2014-11-14T15:27:11</decreaseDate>
                        </TerminationRateDeckAssignment>
            responses:
                201:
                    description: Rate deck was successfuly assigned <br>
                    body:
                        application/xml:
                            example:
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <TerminationRateDeckAssignmentResponse>
                                    <TerminationRateDeckAssignment>
                                        <id>2</id>
                                        <termServiceRateDeckId>17</termServiceRateDeckId>
                                        <increaseDate>2014-11-14T13:27:11</increaseDate>
                                        <decreaseDate>2014-11-14T13:27:11</decreaseDate>
                                    </TerminationRateDeckAssignment>
                                </TerminationRateDeckAssignmentResponse>
                    headers:
                        Location:
                            description: contains rate deck assigment id after last "/" <br>
        /account/{accountId}:
            get:
              description: |
                Get all rate deck assignments
              responses:
                200:
                  body:
                    application/xml:
                      example: |
                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                        <TerminationRateDeckAssignmentsResponse>
                            <TerminationRateDeckAssignments>
                                <TerminationRateDeckAssignment>
                                    <id>3</id>
                                    <termServiceRateDeckId>18</termServiceRateDeckId>
                                    <increaseDate>2014-11-14T13:51:29</increaseDate>
                                    <decreaseDate>2014-11-14T13:51:29</decreaseDate>
                                </TerminationRateDeckAssignment>
                            </TerminationRateDeckAssignments>
                        </TerminationRateDeckAssignmentsResponse>
        /{assignmentId}:
            get:
              description: |
                Get all rate deck assignments
              responses:
                200:
                  body:
                    application/xml:
                      example: |
                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                        <TerminationRateDeckAssignmentUtilityResponse>
                            <TerminationRateDeckAssignment>
                                <id>5</id>
                                <termServiceRateDeckId>20</termServiceRateDeckId>
                                <termServiceAccountId>92</termServiceAccountId>
                                <externalProfileId>153</externalProfileId>
                                <externalAssignmentId>5</externalAssignmentId>
                                <increaseDate>2014-11-14T14:16:54</increaseDate>
                                <decreaseDate>2014-11-14T14:16:54</decreaseDate>
                            </TerminationRateDeckAssignment>
                        </TerminationRateDeckAssignmentUtilityResponse>
        /{assignmentId}/account/{accountId}:
            get:
              description: |
                Get termination product by id.
              responses:
                200:
                  body:
                    application/xml:
                      example: |
                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                        <TerminationRateDeckAssignmentResponse>
                            <TerminationRateDeckAssignment>
                                <id>2</id>
                                <termServiceRateDeckId>17</termServiceRateDeckId>
                                <increaseDate>2014-11-14T13:27:11</increaseDate>
                                <decreaseDate>2014-11-14T13:27:11</decreaseDate>
                            </TerminationRateDeckAssignment>
                        </TerminationRateDeckAssignmentResponse>
            delete:
              description: |
                Unassign rate deck by assignment id.
              responses:
                200:
                  description: |
                    product was successfully removed.
                404:
                  description: |
                    Could not find assignment by id.
                500:
                  description: |
                    System error.
    /ratedeck: 
        get:
          description: |
            Get all rate deck metadata
          responses:
            200:
              body:
                application/xml:
                  example: |
                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                    <TerminationRateDeckMetadatasResponse>
                        <TerminationRateDeckMetadatas>
                            <TerminationRateDeckMetadata>
                                <id>6</id>
                                <name>npanxx1.xlsx</name>
                                <deckType>NPANXX</deckType>
                                <rows>5</rows>
                                <fileName>npanxx1.xlsx</fileName>
                            </TerminationRateDeckMetadata>
                        </TerminationRateDeckMetadatas>
                    </TerminationRateDeckMetadatasResponse>
        post:
            description: post rate deck
            headers:
              Content-Type:
                example: multipart/form-data
              Content-Disposition:
                example: form-data; name="file"; filename="npanxx1.xlsx"
            body:
                application/x-www-form-urlencoded:
                    formParameters:
                      file:
                            type: file
                            description: file to upload
            responses:
              201:
                description: rate deck was successfully uploaded
                headers:
                  Location:
                    description: contains rate deck id<br>
                    example: http://termservices.url/account/1
                body:
                  application/xml:
                    example: |
                      <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                      <TerminationRateDeckResponse>
                        <TerminationRateDeckWrapper>
                            <TerminationRateDeckMetadata>
                                <id>1</id>
                                <fileName>npanxx1.xlsx</fileName>
                            </TerminationRateDeckMetadata>
                        </TerminationRateDeckWrapper>
                      </TerminationRateDeckResponse>
        /{rateDeckId}: 
            get:
              description: |
                Get rate deck metadata by id.
              responses:
                200:
                  body:
                    application/xml:
                      example: |
                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                        <TerminationRateDeckMetadataResponse>
                            <TerminationRateDeckMetadata>
                                <id>3</id>
                                <name>npanxx1.xlsx</name>
                                <deckType>NPANXX</deckType>
                                <rows>5</rows>
                                <fileName>npanxx1.xlsx</fileName>
                            </TerminationRateDeckMetadata>
                        </TerminationRateDeckMetadataResponse>
            delete:
              description: |
                Delete rate deck by id.
        /type/{deckType}:
            get:
              description: |
                Get all rate decks by type
              responses:
                200:
                  body:
                    application/xml:
                      example: |
                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                        <TerminationRateDeckMetadataByTypeResponse>
                            <TerminationRateDeckMetadatas>
                                <TerminationRateDeckMetadata>
                                    <id>16</id>
                                    <name>npanxx1.xlsx</name>
                                    <deckType>NPANXX</deckType>
                                    <rows>5</rows>
                                    <fileName>npanxx1.xlsx</fileName>
                                </TerminationRateDeckMetadata>
                            </TerminationRateDeckMetadatas>
                        </TerminationRateDeckMetadataByTypeResponse>
        /filetype/{deckId}:
            get:
              description: |
                Download rate deck file by id
              queryParameters:
                filetype:
                    example: XLS
              responses:
                200:
                  body:
                    application/xml:
                      example: |
                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                        <TerminationRateDeckResponse>
                            <TerminationRateDeckWrapper>
                                <TerminationRateDeck>
                                    <deckByteBuffer>UEsDBBQACAgI.....gAAKAsAAAAA</deckByteBuffer>
                                    <deckFileType>XLS</deckFileType>
                                </TerminationRateDeck>
                            </TerminationRateDeckWrapper>
                        </TerminationRateDeckResponse>
/cities: 
    description: |
        The *+cities+* resource returns all of the Cities in the indicated State that are supported from a coverage perspective, and, if requested, that contain orderable inventory.  The values returned indicate the names of the Cities and, if <b>available</b> is specified, returns the available inventory by City.  Note that the mapping between Rate Center and City is not completely predictable because multiple cities can be served by a single Rate Center and it may take multiple Rate Centers to serve a city.  The Rate Centers results are more predictable because they are defined strictly in telecommunication terms.
    get:
        description:
            The Rate Centers and Cities API Calls return information about the Bandwidth CLEC Network, including coverage data, indicating both the extent of on-net and off-net coverage, as well as number availability, again from an on-net and off-net perspective.
            The rules are as follows-
            <ul><li>If supported=true is specified, then the coverage or availability is reported for the Bandwidth CLEC only.
            </li><li>If supported is omitted or false, then the coverage or availability is reported for the combination of the Bandwidth CLEC and our partners
            </li><li>If available=true is specified, then only Rate Centers in which we have available numbers are reported.
            </li><li>If available is omitted or false, then all Rate Centers within the scope defined by supported will be returned.
            </li></ul>These rules apply for both the /rateCenters and /cities API calls.
            <table border="1" cellpadding="0" cellspacing="0">
              <tbody>
                <tr>
                  <td valign="top" >
                  </td>
                  <td valign="top" >
            Supported = true
                  </td>
                  <td valign="top" >
            Supported is missing
                  </td>
                </tr>
                <tr>
                  <td valign="top" >
            available = true
                  </td>
                  <td valign="top" >
            Available numbers within the Bandwidth CLEC network
                  </td>
                  <td valign="top" >
            Available numbers within the Bandwidth CLEC network
            combined with our partner networks
                  </td>
                </tr>
                <tr>
                  <td valign="top" >
            available is missing
                  </td>
                  <td valign="top" >
            Coverage in the Bandwidth CLEC
                  </td>
                  <td valign="top" >
            Coverage of the combined Bandwidth CLEC + Partner
            networks
                  </td>
                </tr>
              </tbody>
            </table>
        queryParameters:
            state:
                displayName: state
                type: string
                description: 2 character state code.
                example: NC
                required: true
            available:
                displayName: available 
                type: boolean
                description: |
                    If available is set as true then the result includes the quantity of the available telephone numbers in that City.
                example: true
                required: false
            supported:
                displayName: supported 
                type: boolean
                description: |
                    If supported is set to true the payload will show those Rate Centers that Bandwidth serves directly.   
                example: true
                required: false
        responses:
            200:
                description: | 
                    This response returns the list of cities, along with the Rate Centers that serve those Cities.  If 'available' is specified then the number of TNs available in that city / RC combination is also included.
                body: 
                    application/xml:
                        example: |
                            <?xml version="1.0"?>
                            <CityResponse>
                                <ResultCount>449</ResultCount>
                                <Cities>
                                    <City>
                                        <RcAbbreviation>DOUGLAS</RcAbbreviation>
                                        <Name>ADAMS</Name>
                                    </City>
                                    <City>
                                        <RcAbbreviation>FILLEY</RcAbbreviation>
                                        <Name>ADAMS</Name>
                                    </City>
                                    <City>
                                        <RcAbbreviation>AINSWORTH</RcAbbreviation>
                                        <Name>AINSWORTH</Name>
                                    </City>
                                    <!-- ... SNIP ... -->
                                    <City>
                                        <RcAbbreviation>LONG PINE</RcAbbreviation>
                                        <Name>AINSWORTH</Name>
                                    </City>
                                    <City>
                                        <RcAbbreviation>ODELL</RcAbbreviation>
                                        <Name>WYMORE</Name>
                                    </City>
                                    <City>
                                        <RcAbbreviation>BRADSHAW</RcAbbreviation>
                                        <Name>YORK</Name>
                                    </City>
                                    <City>
                                        <RcAbbreviation>YORK</RcAbbreviation>
                                        <Name>YORK</Name>
                                    </City>
                                    <City>
                                        <RcAbbreviation>WACO</RcAbbreviation>
                                        <Name>YORK</Name>
                                    </City>
                                </Cities>
                            </CityResponse>
                            OR.....
                            <?xml version="1.0"?>
                            <CityResponse>
                                <ResultCount>129</ResultCount>
                                <Cities>
                                    <City>
                                        <RcAbbreviation>FILLEY</RcAbbreviation>
                                        <AvailableTelephoneNumberCount>266</AvailableTelephoneNumberCount>
                                        <Name>ADAMS</Name>
                                    </City>
                                    <City>
                                        <RcAbbreviation>DOUGLAS</RcAbbreviation>
                                        <AvailableTelephoneNumberCount>378</AvailableTelephoneNumberCount>
                                        <Name>ADAMS</Name>
                                    </City>
                                    <City>
                                        <RcAbbreviation>WAKEFIELD</RcAbbreviation>
                                        <AvailableTelephoneNumberCount>272</AvailableTelephoneNumberCount>
                                        <Name>ALLEN</Name>
                                    </City>
                                    <City>
                                        <RcAbbreviation>ASHLAND</RcAbbreviation>
                                        <AvailableTelephoneNumberCount>129</AvailableTelephoneNumberCount>
                                        <Name>ASHLAND</Name>
                                    </City>
                                    <!-- ... SNIP ... -->
                                    </City>
                                    <City>
                                        <RcAbbreviation>WEST POINT</RcAbbreviation>
                                        <AvailableTelephoneNumberCount>85</AvailableTelephoneNumberCount>
                                        <Name>WEST POINT</Name>
                                    </City>
                                    <City>
                                        <RcAbbreviation>OAKLAND</RcAbbreviation>
                                        <AvailableTelephoneNumberCount>290</AvailableTelephoneNumberCount>
                                        <Name>WEST POINT</Name>
                                    </City>
                                    <City>
                                        <RcAbbreviation>WESTERN</RcAbbreviation>
                                        <AvailableTelephoneNumberCount>134</AvailableTelephoneNumberCount>
                                        <Name>WESTERN</Name>
                                    </City>
                                    <City>
                                        <RcAbbreviation>WAYNE</RcAbbreviation>
                                        <AvailableTelephoneNumberCount>434</AvailableTelephoneNumberCount>
                                        <Name>WINSIDE</Name>
                                    </City>
                                    <City>
                                        <RcAbbreviation>BRADSHAW</RcAbbreviation>
                                        <AvailableTelephoneNumberCount>274</AvailableTelephoneNumberCount>
                                        <Name>YORK</Name>
                                    </City>
                                </Cities>
                            </CityResponse>
/rateCenters: 
    description: |
        The rateCenters resource returns all of the Rate Centers in the indicated State that are supported from a coverage perspective, and, if requested, that contain orderable inventory.  The values returned indicate the names of the Rate Centers and, if the query parameter <b>available</b> is specified, the available inventory by Rate Center.
    get:
        description:
            The Rate Centers API Call returns information about the Bandwidth CLEC Network, including coverage data, indicating both the extent of on-net and off-net coverage, as well as number availability, again from an on-net and off-net perspective.
            The rules are as follows-
            <ul><li>If supported=true is specified, then the coverage or availability is reported for the Bandwidth CLEC only.
            </li><li>If supported=true is omitted or false, then the coverage or availability is reported for the combination of the Bandwidth CLEC and our partners
            </li><li>If available=true is specified, then only Rate Centers in which we have available numbers are reported.
            </li><li>If available is omitted or false then all Rate Centers within the scope defined by supported will be returned.
            </li></ul>These rules apply for both the /rateCenters and /cities API calls.
            <table border="1" cellpadding="0" cellspacing="0">
              <tbody>
                <tr>
                  <td valign="top" >
                  </td>
                  <td valign="top" >
            Supported = true
                  </td>
                  <td valign="top" >
            Supported is missing
                  </td>
                </tr>
                <tr>
                  <td valign="top" >
            available = true
                  </td>
                  <td valign="top" >
            Available numbers within the Bandwidth CLEC network
                  </td>
                  <td valign="top" >
            Available numbers within the Bandwidth CLEC network
            combined with our partner networks
                  </td>
                </tr>
                <tr>
                  <td valign="top" >
            available is missing
                  </td>
                  <td valign="top" >
            Coverage in the Bandwidth CLEC
                  </td>
                  <td valign="top" >
            Coverage of the combined Bandwidth CLEC + Partner
            networks
                  </td>
                </tr>
              </tbody>
            </table>
        queryParameters:
            state:
                displayName: state
                type: string
                description: 2 character state code.
                example: NC
                required: true
            available:
                displayName: available 
                type: boolean
                description: |  
                    If available is set as true then the result includes the quantity of the available telephone numbers in that Rate Center.
                example: true
                required: false
            supported:
                displayName: supported 
                type: boolean
                description: |
                    If supported is set to true the payload will show those Rate Centers that Bandwidth serves directly.  
                example: true
                required: false
        responses:
            200:
                description: | 
                    This response returns the list of Rate Center names and abbreviations.  If 'available' is specified then the number of TNs available in that Rate Center is also included.
                body: 
                    application/xml:
                        example: |
                            <?xml version="1.0"?>
                            <RateCenterResponse>
                                <ResultCount>450</ResultCount>
                                <RateCenters>
                                    <RateCenter>
                                        <Abbreviation>ADAMS</Abbreviation>
                                        <Name>ADAMS</Name>
                                    </RateCenter>
                                    <RateCenter>
                                        <Abbreviation>AINSWORTH</Abbreviation>
                                        <Name>AINSWORTH</Name>
                                    </RateCenter>
                                    <RateCenter>
                                        <Abbreviation>ALBION</Abbreviation>
                                        <Name>ALBION</Name>
                                    </RateCenter>
                                    <RateCenter>
                                        <Abbreviation>ALEXANDRIA</Abbreviation>
                                        <Name>ALEXANDRIA</Name>
                                    </RateCenter>
                                    <!-- ... SNIP ... -->
                                    <RateCenter>
                                        <Abbreviation>WOOD RIVER</Abbreviation>
                                        <Name>WOOD RIVER</Name>
                                    </RateCenter>
                                    <RateCenter>
                                        <Abbreviation>WYMORE</Abbreviation>
                                        <Name>WYMORE</Name>
                                    </RateCenter>
                                    <RateCenter>
                                        <Abbreviation>WYFRYCSTHL</Abbreviation>
                                        <Name>WYNOT FORDYCE SAINT HELENA</Name>
                                    </RateCenter>
                                    <RateCenter>
                                        <Abbreviation>YORK</Abbreviation>
                                        <Name>YORK</Name>
                                    </RateCenter>
                                    <RateCenter>
                                        <Abbreviation>YUTAN</Abbreviation>
                                        <Name>YUTAN</Name>
                                    </RateCenter>
                                </RateCenters>
                            </RateCenterResponse>
                            <!-- .....OR.....
                            In the case that the query parameter available is set to true ,
                            we will include the quantity of numbers that are available
                            in the indicated Rate Center
                             -->
                            <?xml version="1.0"?>
                            <RateCenterResponse>
                                <ResultCount>131</ResultCount>
                                <RateCenters>
                                    <RateCenter>
                                        <Abbreviation>ADAMS</Abbreviation>
                                        <AvailableTelephoneNumberCount>108</AvailableTelephoneNumberCount>
                                        <Name>ADAMS</Name>
                                    </RateCenter>
                                    <RateCenter>
                                        <Abbreviation>ALEXANDRIA</Abbreviation>
                                        <AvailableTelephoneNumberCount>230</AvailableTelephoneNumberCount>
                                        <Name>ALEXANDRIA</Name>
                                    </RateCenter>
                                    <RateCenter>
                                        <Abbreviation>ASHLAND</Abbreviation>
                                        <AvailableTelephoneNumberCount>129</AvailableTelephoneNumberCount>
                                        <Name>ASHLAND</Name>
                                    </RateCenter>
                                    <!-- ... SNIP ... -->
                                    <RateCenter>
                                        <Abbreviation>WEST POINT</Abbreviation>
                                        <AvailableTelephoneNumberCount>85</AvailableTelephoneNumberCount>
                                        <Name>WEST POINT</Name>
                                    </RateCenter>
                                    <RateCenter>
                                        <Abbreviation>WESTERN</Abbreviation>
                                        <AvailableTelephoneNumberCount>134</AvailableTelephoneNumberCount>
                                        <Name>WESTERN</Name>
                                    </RateCenter>
                                    <RateCenter>
                                        <Abbreviation>WILBER</Abbreviation>
                                        <AvailableTelephoneNumberCount>135</AvailableTelephoneNumberCount>
                                        <Name>WILBER</Name>
                                    </RateCenter>
                                    <RateCenter>
                                        <Abbreviation>WYMORE</Abbreviation>
                                        <AvailableTelephoneNumberCount>132</AvailableTelephoneNumberCount>
                                        <Name>WYMORE</Name>
                                    </RateCenter>
                                    <RateCenter>
                                        <Abbreviation>YUTAN</Abbreviation>
                                        <AvailableTelephoneNumberCount>588</AvailableTelephoneNumberCount>
                                        <Name>YUTAN</Name>
                                    </RateCenter>
                                </RateCenters>
                            </RateCenterResponse>
/availablenumbers: 
    description: |
        This resource returns a count of all the telephone numbers currently available.
        The availablenumbers query will return counts all of the inservice numbers on the account, structured in a way that is controlled by a URI "search" parameter.
    get:
        description: get a count of the available numbers on the system - structured in a variety of ways. 
        queryParameters:
            page:
                description: the page to fetch in a paginated collection
                type: integer
                required: true
                default: 1
            size:
                description: the number of TNs to retrieve in a page
                type: integer
                required: true
                default: 500
            startdate:
                description: the starting date for a Date Range in which the Available Numbers are were ordered in the format YY-MM-DD
                type: string
                example: 13-05-21
            enddate:
                description: the starting date for a Date Range in which the Available Numbers are were ordered in the format YY-MM-DD
                type: string
                example: 13-05-21
            type:
                description: |
                    this is the value that governs the structure of the results.  The results payload will be different based on the type value specified.
                    <ul>
                        <li>NPA - decompose the results by Area Code</li>
                        <li>NPANXX - decompose the results by NPA NXX pairings</li>
                        <li>NPANXXX - decompose the results by NPA NXX X pairings</li>
                        <li>LATA - break the results down by LATA</li>
                        <li>RC - break the results down by Rate Center</li>
                        <li>ST - break the results down by State</li>
                    </ul>
                enum: [NPA, NPANXX, NPANXXX, LATA, RC, ST]
                example: NPA
        responses: 
            200:
                description: A successful result that contains the response data
                body: 
                    application/xml:
                        example: |
                            <?xml version="1.0"?>
                            <TNs>
                                <TNs>
                                    <State>AL</State>
                                    <Tier>0</Tier>
                                    <Count>5220</Count>
                                </TNs>
                                <TNs>
                                    <State>AR</State>
                                    <Tier>0</Tier>
                                    <Count>655</Count>
                                </TNs>
                                <TNs>
                                    <State>AZ</State>
                                    <Tier>0</Tier>
                                    <Count>8993</Count>
                                </TNs>
                                <TNs>...</TNs>
                                <TNs>...</TNs>
                                <!-- SNIP -->
                                <TNs>
                                    <State>WV</State>
                                    <Tier>0</Tier>
                                    <Count>324</Count>
                                </TNs>
                                <TNs>
                                    <State>WY</State>
                                    <Tier>0</Tier>
                                    <Count>454</Count>
                                </TNs>
                            </TNs>
            204:
                description: No Content - there are no numbers found using the search parameters
            404:
                description: Not Found - The search parameters are invalid and prevent finding any content
            500:
                 description: Internal Server Error - System error
            504:
                 description: Timeout - The system was not able to process your request in time
    /orders: 
        description: |
            Find the In Service numbers on the account
            The inservicenumbers query will return all of the inservice numbers on the account, filtered with a wide range of 
            search query parameters.  Note that many search combinations will not return a meaningful result because the search 
            parameters are mutually exclusive.  Since mutually exclusive search criteria result from data that can't  satisfy all of
            the criteria, these are not flagged as errors, and instead simply return an empty result.
        get:
            description: Get a  report on the Import to Available orders
            queryParameters:
                page:
                    description: the page to fetch in a paginated collection
                    type: integer
                    required: true
                    default: 1
                size:
                    description: the number of TNs to retrieve
                    type: integer
                    required: true
                    default: 300
        #        areacode:
        #            description: An Area Code search filter - all returned TNs will be in the entered Area Code
        #            type: integer
        #            example: 919
        #            minimum: 200
        #            maximum: 999
        #        npanxx:
        #            description: An NPA NXX search filter - all returned TNs will be in the entered NPA NXX dial plan
        #            type: integer
        #            example: 919859
        #            minimum: 200000
        #            maximum: 999999
        #        lata:
        #            description: A LATA search filter - all returned TNs will be in the entered Rate Center.  Typically this is a 3 or 5 digit value
        #            type: integer
        #            example: 435
        #            minimum: 001
        #            maximum: 99999
        #        ratecenter:
        #            description: A Rate Center search filter - all returned TNs will be in the entered Rate Center.  This Rate Center must be combined with a State in the query.  If State is not included in the query then the queryu will fail.
        #            type: string
        #            example: PLANO
            responses: 
                200:
                    description: A successful result that contains the response data
                    body: 
                        application/xml:
                            example: |
                                <?xml version="1.0"?>
                                <ResponseSelectWrapper>
                                    <ListOrderIdUserIdDate>
                                        <TotalCount>7</TotalCount>
                                        <Links>
                                            <first>
                                            </first>
                                        </Links>
                                        <OrderIdUserIdDate>
                                            <CountOfTNs>10</CountOfTNs>
                                            <lastModifiedDate>2012-07-18T13:06:58.000Z</lastModifiedDate>
                                            <OrderDate>2012-12-05T20:54:54.418Z</OrderDate>
                                            <orderId>ed1c0bed-e2ba-432d-bb58-81dca35a62ef</orderId>
                                            <OrderStatus>COMPLETE</OrderStatus>
                                            <TelephoneNumberDetails>
                                                <States>
                                                    <StateWithCount>
                                                        <State>MD</State>
                                                        <Count>10</Count>
                                                    </StateWithCount>
                                                </States>
                                                <RateCenters>
                                                    <RateCenterWithCount>
                                                        <Count>10</Count>
                                                        <RateCenter>GAITHERSBG</RateCenter>
                                                    </RateCenterWithCount>
                                                </RateCenters>
                                                <Cities>
                                                    <CityWithCount>
                                                        <City>GAITHERSBURG</City>
                                                        <Count>10</Count>
                                                    </CityWithCount>
                                                </Cities>
                                                <Tiers>
                                                    <TierWithCount>
                                                        <Tier>0</Tier>
                                                        <Count>10</Count>
                                                    </TierWithCount>
                                                </Tiers>
                                                <Vendors>
                                                    <VendorWithCount>
                                                        <VendorId>49</VendorId>
                                                        <Count>10</Count>
                                                    </VendorWithCount>
                                                </Vendors>
                                            </TelephoneNumberDetails>
                                            <userId>irisuser_nms</userId>
                                        </OrderIdUserIdDate>
                                        <OrderIdUserIdDate>...</OrderIdUserIdDate>
                                        <OrderIdUserIdDate>...</OrderIdUserIdDate>
                                        <OrderIdUserIdDate>
                                            <CountOfTNs>0</CountOfTNs>
                                            <lastModifiedDate>2012-07-17T19:51:57.000Z</lastModifiedDate>
                                            <OrderDate>2012-12-05T20:54:54.315Z</OrderDate>
                                            <orderId>8facbdcf-ea51-4527-aace-254a5485a496</orderId>
                                            <OrderStatus>FAILED</OrderStatus>
                                            <userId>irisuser_nms</userId>
                                        </OrderIdUserIdDate>
                                        <OrderIdUserIdDate>...</OrderIdUserIdDate>
                                        <OrderIdUserIdDate>...</OrderIdUserIdDate>
                                        <OrderIdUserIdDate>...</OrderIdUserIdDate>
                                    </ListOrderIdUserIdDate>
                                </ResponseSelectWrapper>
                204:
                    description: No Content - there are no numbers found using the search parameters
                404:
                    description: Not Found - The search parameters are invalid and prevent finding any content   
        post:
            description: |
                A POST to the available orders API will add the listed TNs to the overall inventory, and create a work-order that can be used to track the status of that attempt.
                Key data elements in the payload include...
                * The account and gateway profile, that control the routing of calls that are placed to these numbers.  The typical values are *UnallocatedNonTF* and *UnallocatedTF*.
                * The Vendor name that will be associated with these numbers.  There must be allignment with the NPANXX of the numbers that are being imported, and the Vendor that supplies the rate center in which the numbers will land.
                * The list of telephone numbers themselves.
            body: 
                application/xml:
                    example: |
                        <?xml version="1.0"?>
                        <ImportAvailableNumberOrder>
                            <ImportAvailableNumberOrderType>
                                <AccountProfile>UnallocatedNonTF</AccountProfile>
                                <GatewayProfile>UnallocatedNonTF</GatewayProfile>
                                <TelephoneNumberList>
                                    <TelephoneNumber>9702122349</TelephoneNumber>
                                    <TelephoneNumber>9702122350</TelephoneNumber>
                                    <TelephoneNumber>9702122351</TelephoneNumber>
                                    <TelephoneNumber>9702122352</TelephoneNumber>
                                </TelephoneNumberList>
                                <VendorName>Bandwidth.com powered by Level 3</VendorName>
                            </ImportAvailableNumberOrderType>
                        </ImportAvailableNumberOrder>
            responses:
                201:
                    description: | 
                        Created.
                        This response describes the creation of the import to available work-order that describes the attempt to import numbers into the Bandwidth Dashboard available inventory.  The response includes an XML payload that describes the order, and also includes a Location header value that will access the created order resource.
                        Payload items include...
                        * the ID of the work order that was created
                        * the details provided in the POST that created the order.
                    body:
                        application/xml:
                            example: |
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <ImportAvailableNumberOrderResponse>
                                        <orderRequest>
                                            <id>6b811ff6-3e48-4513-a3b3-8f41cce1bfd5</id>
                                            <ImportAvailableNumberOrderType>
                                                <AccountProfile>UnallocatedNonTF</AccountProfile>
                                                <GatewayProfile>UnallocatedNonTF</GatewayProfile>
                                                <TelephoneNumberList>
                                                    <TelephoneNumber>9702122349</TelephoneNumber>
                                                    <TelephoneNumber>9702122350</TelephoneNumber>
                                                    <TelephoneNumber>9702122351</TelephoneNumber>
                                                    <TelephoneNumber>9702122352</TelephoneNumber>
                                                </TelephoneNumberList>
                                                <VendorName>Bandwidth.com powered by Level 3</VendorName>
                                            </ImportAvailableNumberOrderType>
                                        </orderRequest>
                                    </ImportAvailableNumberOrderResponse>
        /{orderid}: 
            description: |
                Display the data associated with a specific Import to Available Order.
            get:
                description: Get the information associated with the identified orderid
                responses: 
                    200:
                        description: A successful result that contains the response data
                        body: 
                            application/xml:
                                example: |
                                    <?xml version="1.0"?>
                                    <ImportAvailableNumberOrderResponse>
                                        <accountProfileName>defaultnontfaccount</accountProfileName>
                                        <gatewayProfileName>defaultnontf</gatewayProfileName>
                                        <ImportedTelephoneNumberList>
                                            <TelephoneNumber>3019720000</TelephoneNumber>
                                            <TelephoneNumber>3019720001</TelephoneNumber>
                                            <TelephoneNumber>3019720002</TelephoneNumber>
                                            <TelephoneNumber>3019720003</TelephoneNumber>
                                            <TelephoneNumber>3019720004</TelephoneNumber>
                                            <TelephoneNumber>3019720005</TelephoneNumber>
                                            <TelephoneNumber>3019720006</TelephoneNumber>
                                            <TelephoneNumber>3019720007</TelephoneNumber>
                                            <TelephoneNumber>3019720008</TelephoneNumber>
                                            <TelephoneNumber>3019720009</TelephoneNumber>
                                        </ImportedTelephoneNumberList>
                                        <orderRequest>
                                            <id>ed1c0bed-e2ba-432d-bb58-81dca35a62ef</id>
                                            <ImportAvailableNumberOrderType>
                                                <AccountProfile>defaultnontfaccount</AccountProfile>
                                                <GatewayProfile>defaultnontf</GatewayProfile>
                                                <TelephoneNumberList>
                                                    <TelephoneNumber>3019720002</TelephoneNumber>
                                                    <TelephoneNumber>3019720003</TelephoneNumber>
                                                    <TelephoneNumber>3019720000</TelephoneNumber>
                                                    <TelephoneNumber>3019720001</TelephoneNumber>
                                                    <TelephoneNumber>3019720006</TelephoneNumber>
                                                    <TelephoneNumber>3019720007</TelephoneNumber>
                                                    <TelephoneNumber>3019720004</TelephoneNumber>
                                                    <TelephoneNumber>3019720005</TelephoneNumber>
                                                    <TelephoneNumber>3019720008</TelephoneNumber>
                                                    <TelephoneNumber>3019720009</TelephoneNumber>
                                                </TelephoneNumberList>
                                                <VendorName>Bandwidth CLEC</VendorName>
                                            </ImportAvailableNumberOrderType>
                                        </orderRequest>
                                    </ImportAvailableNumberOrderResponse>
                    404:
                        description: Not Found - The order-id is invalid. 
    /totals: 
        description: |
            Find the number of In Service numbers on the account, structured in a number of ways
            This API is used in gathering data that can assist in inventory management, by reporting on the number of TNs in a variety of ways.
        get:
            description: Get the total number of available TNs filtered by the search parameters. 
            queryParameters:
                npa:
                    description: An NPA search filter - all returned TNs will be in the entered NPA
                    type: integer
                    example: 919
                    minimum: 200
                    maximum: 999
                tier:
                    description: An Originating Services Tier search filter - Tier 0 - Bandwidth CLEC etc. All returned TNs will be in the entered Tier 
                    type: integer
                    example: 0
                    minimum: 0
                    maximum: 5
                npaNxx:
                    description: An NPA NXX search filter - all returned TNs will be in the entered NPA NXX dial plan
                    type: integer
                    example: 919859
                    minimum: 200000
                    maximum: 999999
                npaNxxX:
                    description: An NPA NXX X search filter - all returned TNs will be in the entered NPA NXX X dial plan
                    type: integer
                    example: 9198592
                    minimum: 2000000
                    maximum: 9999999
                lata:
                    description: A LATA search filter - all returned TNs will be in the entered Rate Center.  Typically this is a 3 or 5 digit value
                    type: integer
                    example: 435
                    minimum: 001
                    maximum: 99999
                state:
                    description: A State search filter - all returned TNs will be in the entered State.  This is a 2-character State or Province abbreviation
                    type: string
                    example: TX
                city:
                    description: A City search filter - all returned TNs will be in or around the indicated CIty.  This Rate Center must be combined with a State in the query.  If State is not included in the query then the queryu will fail.
                    type: string
                    example: Allen
                rateCenter:
                    description: A Rate Center search filter - all returned TNs will be in the entered Rate Center.  This Rate Center must be combined with a State in the query.  If State is not included in the query then the queryu will fail.
                    type: string
                    example: PLANO
            responses: 
                200:
                    description: A successful result that contains the number of available TNs after the filter is applied.  Parameters that are not understood are ignored, and invalid search terms yield a payload with a count of 0
                    body: 
                        application/xml:
                            example: |
                                <Quantity>
                                   <Count>2002</Count>
                                </Quantity>     
/agingnumbers: 
    description: The Aging Numbers reporting capability allows the BDP API Admin user to get paginated lists of TNs in the Aging status.
    get:
        description: |
            Find the list all aging numbers that match the filter search criteria 
        queryParameters:
            page:
                description: the page to fetch in a paginated collection
                type: integer
                required: true
                default: 1
            size:
                description: the number of TNs to retrieve
                type: integer
                required: true
                default: 300
            areacode:
                description: An Area Code search filter - all returned TNs will be in the entered Area Code
                type: integer
                example: 919
                minimum: 200
                maximum: 999
            npanxx:
                description: An NPA NXX search filter - all returned TNs will be in the entered NPA NXX dial plan
                type: integer
                example: 919859
                minimum: 200000
                maximum: 999999
            lata:
                description: A Rate Center search filter - all returned TNs will be in the entered Rate Center.  Typically this is a 3 or 5 digit value
                type: integer
                example: 435
                minimum: 001
                maximum: 99999
            state:
                description: A State search filter - all returned TNs will be in the entered State.  This is a 2-character State or Province abbreviation
                type: string
                example: TX
            ratecenter:
                description: A Rate Center search filter - all returned TNs will be in the entered Rate Center.  This Rate Center must be combined with a State in the query.  If State is not included in the query then the queryu will fail.
                type: string
                example: TX
        responses: 
            200:
                description: Success in retrieving some numbers that satisfy the query
                body: 
                    application/xml:
                        example: |
                            <?xml version="1.0"?>
                            <TNs>
                                <TotalCount>59</TotalCount>
                                <Links>
                                    <first> ( a link descriptor ) </first>
                                </Links>
                                <TelephoneNumbers>
                                    <Count>59</Count>
                                    <TelephoneNumber>8043024183</TelephoneNumber>
                                    <TelephoneNumber>8042121778</TelephoneNumber>
                                    <TelephoneNumber>8042146066</TelephoneNumber>
                                    <TelephoneNumber>8043814903</TelephoneNumber>
                                    <TelephoneNumber>8043814905</TelephoneNumber>
                                    <TelephoneNumber>8043814864</TelephoneNumber>
                                    <TelephoneNumber>8043326094</TelephoneNumber>
                                    <TelephoneNumber>8042121771</TelephoneNumber>
                                    <TelephoneNumber>8043024182</TelephoneNumber>
                                    <!-- SNIP -->        
                                    <TelephoneNumber>8043814900</TelephoneNumber>
                                    <TelephoneNumber>8047672642</TelephoneNumber>
                                    <TelephoneNumber>8043024368</TelephoneNumber>
                                    <TelephoneNumber>8042147950</TelephoneNumber>
                                    <TelephoneNumber>8043169931</TelephoneNumber>
                                    <TelephoneNumber>8043325302</TelephoneNumber>
                                </TelephoneNumbers>
                            </TNs>
            204:
                description: No Content - there are no numbers found using the search parameters
            404:
                description: Not Found - The search parameters are invalid and prevent finding any content      
/coveredRateCenters: 
    description: |
        The coveredRateCenters resource returns all of the Covered Rate Centers. 
        Each rate center resource contains state, abbreviation, name, LATA, list of tiers, number of available TNs and optional zip codes, cities, vendors, NPA-NXX-Xs information. 
    get:
        description:
            The Covered Rate Centers API Call return information about the Bandwidth CLEC Network, including coverage data, indicating both the extent of on-net and off-net coverage, as well as number availability.
            The various query parameters are summarized in the following table ... 
            <table border="0" cellpadding="0" cellspacing="0">
              <tbody>
                <tr>
                  <td valign="top" width="114">
                  <p><strong>Query Parameter</strong>
                  </p>
                  </td>
                  <td valign="top">
                  <p><strong>Description</strong>
                  </p>
                  </td>
                </tr>
                <tr>
                  <td valign="top" width="114">
                  <p>page
                  </p>
                  </td>
                  <td valign="top">
                  <p>The starting value for a paginated response. The default is ‘1’ indicating the first page of results.
                  </p>
                  </td>
                </tr>
                <tr>
                  <td valign="top" width="114">
                  <p>size
                  </p>
                  </td>
                  <td valign="top">
                  <p>The number of rate centers to include in a paginated result payload.
                  </p>
                  </td>
                </tr>
                <tr>
                  <td valign="top" width="114">
                  <p>state
                  </p>
                  </td>
                  <td valign="top">
                  <p>A 2 character State code
                  </p>
                  </td>
                </tr>
                <tr>
                  <td valign="top" width="114">
                  <p>abbreviation
                  </p>
                  </td>
                  <td valign="top">
                  <p>A rate center abbreviation
                  </p>
                  </td>
                </tr>
                <tr>
                  <td valign="top" width="114">
                  <p>name
                  </p>
                  </td>
                  <td valign="top">
                  <p>A rate center name
                  </p>
                  </td>
                </tr>
                <tr>
                  <td valign="top" width="114">
                  <p>zip
                  </p>
                  </td>
                  <td valign="top">
                  <p>A 5 digit zip code
                  </p>
                  </td>
                </tr>
                <tr>
                  <td valign="top" width="114">
                  <p>city
                  </p>
                  </td>
                  <td valign="top">
                  <p>A City name
                  </p>
                  </td>
                </tr>
                <tr>
                  <td valign="top" width="114">
                  <p>lata
                  </p>
                  </td>
                  <td valign="top">
                  <p>A 3 or 5 digit LATA
                  </p>
                  </td>
                </tr>
                <tr>
                  <td valign="top" width="114">
                  <p>tier
                  </p>
                  </td>
                  <td valign="top">
                  <p>A bandwidth coverage tier; a value from 0 to 5.
                  </p>
                  </td>
                </tr>
                <tr>
                  <td valign="top" width="114">
                  <p>npa
                  </p>
                  </td>
                  <td valign="top">
                  <p>A 3 digit NPA or Area Code
                  </p>
                  </td>
                </tr>
                <tr>
                  <td valign="top" width="114">
                  <p>npaNxx
                  </p>
                  </td>
                  <td valign="top">
                  <p>6 digits NPA and NXX values
                  </p>
                  </td>
                </tr>
                <tr>
                  <td valign="top" width="114">
                  <p>npaNxxX
                  </p>
                  </td>
                  <td valign="top">
                  <p>7 digits of NPA, NXX and thousands block values.
                  </p>
                  </td>
                </tr>
                <tr>
                  <td valign="top" width="114">
                  <p>embed
                  </p>
                  </td>
                  <td valign="top">
                  <p>One of the values [ZipCodes, Cities, NpaNxxX, AvailableNumberCount, LocalRateCenters].
                  <br>
                    This repeatable query parameter will force a list (or multiple lists)
                    of the indicated data to be provided in the response. For
                    example if the payload should contain a list of the Cities covered by
                    the Rate Centers then embed=cities would be included as a query
                    parameter.<br>
                    No filter parameters are supported if <q>LocalRateCenters</q> is specified. In this case only <q>size</q>, <q>page</q> and any other <q>embed</q> parameters are supported.
                  </p>
                  </td>
                </tr>
              </tbody>
            </table>
        queryParameters:
            page: 
                displayName: page
                type: number
                description: | 
                    the unique identifier of first rate center on the page. 
                    Value for the first page: <i>1</i>
                example: 1
                required: true
            size: 
                displayName: size
                type: number
                description: a number of rate centers on the page 
                example: 50
                required: true
            embed:
                displayName: embed
                type: string
                enum: [ZipCodes, Cities, Vendors, NpaNxxX, AvailableNumberCount, LocalRateCenters]
                description: | 
                    a set of fields that needs to be included in response. 
                    A lists of zip codes, cities, vendors, NpaNxxXs and count of available TNs are not included for each rate center by default.
                    A list of vendors is available only for admin users. LocalRateCenters can't be combined with any filter parameter.
                repeat: true
            state:
                displayName: state
                type: string
                description: 2 character state code.
                example: OK
                required: false
            abbreviation:
                displayName: abbreviation
                type: string
                description: a rate center's abbreviation
                example: BARTLESVL
                required: false
            name:
                displayName: name
                type: string
                description: a name of rate center
                example: BARTLESVILLE
                required: false  
            zip:
                displayName: zip
                type: string
                description: a zip code of the area covered by rate center
                example: 74029
                required: false
            city:
                displayName: city
                type: string
                description: a name of city covered by rate center
                example: DEWEY
                required: false
            lata:
                displayName: lata
                type: number
                description: a rate center's LATA
                example: 538
                required: false
            tier:
                displayName: tier
                type: number
                description: the tier associated with covered rate center
                example: 0
                required: false
            npa:
                displayName: npa
                type: number
                description: the Area Code covered by rate center
                example: 918
                required: false
            npaNxx:
                displayName: npaNxx
                type: number
                description: the NPA-NXX covered by rate center
                example: 918886
                required: false
            npaNxxX:
                displayName: npaNxxX
                type: number
                description: the NPA-NXX-X covered by rate center
                example: 9188862
                required: false
        responses:
            200:
                description: | 
                    This response returns the list of Covered Rate Centers. 
                    <i><b>TotalCount</b></i> element's value represents the total number of rate centers for specified query parameters starting from the current page and included in response only if more rate centers available.  
                body: 
                    application/xml:
                        example: 
                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                            <CoveredRateCenters>
                                <TotalCount>18</TotalCount>
                                <Links>
                                    <first>Link=&lt;https://api.inetwork.com:443/v1.0/coveredRateCenters?npa=310&amp;size=10&amp;embed=Cities&amp;embed=ZipCodes&amp;embed=NpaNxxX&amp;embed=Vendors&amp;page=1&gt;;rel="first";</first>
                                    <next>Link=&lt;https://api.inetwork.com:443/v1.0/coveredRateCenters?npa=310&amp;size=10&amp;embed=Cities&amp;embed=ZipCodes&amp;embed=NpaNxxX&amp;embed=Vendors&amp;page=5&gt;;rel="next";</next>
                                </Links>
                                <CoveredRateCenter>
                                    <Name>AVALON</Name>
                                    <Abbreviation>AVALON</Abbreviation>
                                    <State>CA</State>
                                    <Lata>730</Lata>
                                    <AvailableNumberCount>1</AvailableNumberCount>
                                    <ZipCodes>
                                        <ZipCode>90731</ZipCode>
                                    </ZipCodes>
                                    <Cities>
                                        <City>SAN PEDRO</City>
                                    </Cities>
                                    <Vendors>
                                        <Vendor>Bandwidth CLEC</Vendor>
                                    </Vendors>
                                    <Tiers>
                                        <Tier>0</Tier>
                                    </Tiers>
                                    <NpaNxxXs>
                                        <NpaNxxX>3105100</NpaNxxX>
                                        <NpaNxxX>3105101</NpaNxxX>
                                        <NpaNxxX>3109498</NpaNxxX>
                                        <NpaNxxX>3109499</NpaNxxX>
                                        <NpaNxxX>4242260</NpaNxxX>
                                    </NpaNxxXs>
                                    <Id>3151</Id>
                                    <LocalRateCenters>
                                        <RateCenterId>369</RateCenterId>
                                        <RateCenterId>7843</RateCenterId>
                                        <RateCenterId>7945</RateCenterId>
                                        <RateCenterId>2461</RateCenterId>
                                        <RateCenterId>10741</RateCenterId>
                                        <RateCenterId>7059</RateCenterId>
                                    </LocalRateCenters>
                                </CoveredRateCenter>
                                <CoveredRateCenter>
                                    <Name>BEVERLY HILLS</Name>
                                    <Abbreviation>BEVERLYHLS</Abbreviation>
                                    <State>CA</State>
                                    <Lata>730</Lata>
                                    <AvailableNumberCount>25</AvailableNumberCount>
                                    <ZipCodes>
                                        <ZipCode>90013</ZipCode>
                                        <ZipCode>90014</ZipCode>
                                        <ZipCode>90015</ZipCode>
                                        <ZipCode>90017</ZipCode>
                                        <ZipCode>90044</ZipCode>
                                        <ZipCode>90048</ZipCode>
                                        <ZipCode>90059</ZipCode>
                                        <ZipCode>90061</ZipCode>
                                        <ZipCode>90071</ZipCode>
                                        <ZipCode>90079</ZipCode>
                                        <ZipCode>90210</ZipCode>
                                        <ZipCode>90211</ZipCode>
                                        <ZipCode>90212</ZipCode>
                                        <ZipCode>90247</ZipCode>
                                        <ZipCode>90248</ZipCode>
                                        <ZipCode>90249</ZipCode>
                                        <ZipCode>91352</ZipCode>
                                        <ZipCode>91403</ZipCode>
                                        <ZipCode>91411</ZipCode>
                                        <ZipCode>91423</ZipCode>
                                        <ZipCode>91504</ZipCode>
                                        <ZipCode>91505</ZipCode>
                                    </ZipCodes>
                                    <Cities>
                                        <City>BEVERLY HILLS</City>
                                        <City>BURBANK</City>
                                        <City>GARDENA</City>
                                        <City>LOS ANGELES</City>
                                        <City>SHERMAN OAKS</City>
                                        <City>SUN VALLEY</City>
                                        <City>VAN NUYS</City>
                                    </Cities>
                                    <Vendors>
                                        <Vendor>Bandwidth CLEC</Vendor>
                                    </Vendors>
                                    <Tiers>
                                        <Tier>0</Tier>
                                    </Tiers>
                                    <NpaNxxXs>
                                        <NpaNxxX>3102010</NpaNxxX>
                                        <NpaNxxX>3102011</NpaNxxX>
                                        <NpaNxxX>3102012</NpaNxxX>
                                        <NpaNxxX>3102013</NpaNxxX>
                                        <NpaNxxX>3102014</NpaNxxX>
                                        <NpaNxxX>3102015</NpaNxxX>
                                        <NpaNxxX>3102016</NpaNxxX>
                                        <NpaNxxX>3102017</NpaNxxX>
                                        <NpaNxxX>3102018</NpaNxxX>
                                        <NpaNxxX>3102019</NpaNxxX>
                                        <NpaNxxX>4246669</NpaNxxX>
                                        <NpaNxxX>4247770</NpaNxxX>
                                        <NpaNxxX>4247771</NpaNxxX>
                                        <NpaNxxX>4247772</NpaNxxX>
                                        <NpaNxxX>4247773</NpaNxxX>
                                        <NpaNxxX>4247774</NpaNxxX>
                                        <NpaNxxX>4247775</NpaNxxX>
                                        <NpaNxxX>4247776</NpaNxxX>
                                        <NpaNxxX>4247777</NpaNxxX>
                                        <NpaNxxX>4247778</NpaNxxX>
                                        <NpaNxxX>4247779</NpaNxxX>
                                    </NpaNxxXs>
                                    <Id>3538</Id>
                                    <LocalRateCenters>
                                        <RateCenterId>4421</RateCenterId>
                                        <RateCenterId>14259</RateCenterId>
                                    </LocalRateCenters>
                                </CoveredRateCenter>
                            </CoveredRateCenters>
            303:
                description: | 
                    No <i><b>page</b></i> or <i><b>size</b></i> query parameters specified. Link to first page of results provided in <i><b>Location</b></i> header
                headers:
                    Location:
                        description: |
                            The link to first page of results
                        type: string
                        required: true
                        example: https://api.inetwork.com:443/v1.0/coveredRateCenters?size=500&page=1
            400:
                description: | 
                    Invalid query parameter value
                body:
                    application/xml:
                        example: |
                            <CoveredRateCenters>
                                <ResponseStatus>
                                    <ErrorCode>4002</ErrorCode>
                                    <Description>Please verify that your NPA, NPA-NXX, or NPA-NXX-X search input parameters are correct.</Description>
                                </ResponseStatus>
                            </CoveredRateCenters>
    /{rateCenterId}: 
        description: |
            The "rateCenterId" resource refers to a specific element of the covered rate centers collection. A lists of zip codes, cities, NPA-NXX-Xs, local rate center IDs and vendors (for admin users only) are included into response.
        get:
            description: |
                Retrieve information about a specific covered rate center identified as the resource.
            responses:
                200:
                    body:
                        application/xml:
                            example: 
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <CoveredRateCenter>
                                    <Name>LOMITA</Name>
                                    <Abbreviation>LOMITA</Abbreviation>
                                    <State>CA</State>
                                    <Lata>730</Lata>
                                    <AvailableNumberCount>5536</AvailableNumberCount>
                                    <ZipCodes>
                                        <ZipCode>90044</ZipCode>
                                        <ZipCode>90059</ZipCode>
                                        <ZipCode>90061</ZipCode>
                                        <ZipCode>90247</ZipCode>
                                        <ZipCode>90248</ZipCode>
                                        <ZipCode>90249</ZipCode>
                                        <ZipCode>90717</ZipCode>
                                        <ZipCode>90802</ZipCode>
                                        <ZipCode>90813</ZipCode>
                                        <ZipCode>90822</ZipCode>
                                        <ZipCode>90831</ZipCode>
                                        <ZipCode>90834</ZipCode>
                                    </ZipCodes>
                                    <Cities>
                                        <City>GARDENA</City>
                                        <City>LOMITA</City>
                                        <City>LONG BEACH</City>
                                        <City>LOS ANGELES</City>
                                    </Cities>
                                    <Vendors>
                                        <Vendor>Bandwidth CLEC</Vendor>
                                    </Vendors>
                                    <Tiers>
                                        <Tier>0</Tier>
                                    </Tiers>
                                    <NpaNxxXs>
                                        <NpaNxxX>3102570</NpaNxxX>
                                        <NpaNxxX>3102571</NpaNxxX>
                                    </NpaNxxXs>
                                    <Id>6854</Id>
                                    <LocalRateCenters>
                                            <RateCenterId>369</RateCenterId>
                                            <RateCenterId>7843</RateCenterId>
                                            <RateCenterId>7945</RateCenterId>
                                    </LocalRateCenters>
                                </CoveredRateCenter>
                404:
                    description: NOT FOUND - the rate center id does not exist in the system
/callbacks: 
    description: |
        The callbacks group of API calls does not reflect API Call signatures of the Bandwidth Dashboard API. <br>The API documentation captured in this group is intended to capture payload and response expectation of callback endpoints provided by our customers.<br><br>
        The API endpoints (like https://customer.com/the\_resource\_that\_bandwidth\_calls\_to\_notify\_my\_app\_of\_something) will be provided by our customers (you), and we will invoke those endpoints with the described payloads, and respond appropriately to the described responses. <br>
        The URLs are provided by you; we call them with the payloads, and process the responses. <br>
        <table style="text-align: left; width: 100%; background-color: rgb(255, 255, 200);" border="1" cellpadding="5" cellspacing="0">
            <tbody>
                <tr>
                    <td>
                        Don't plan on placing a call to "/callbacks /portOutValidationCallbackApi" or
                        "/callbacks /notificationCallbackApi", these are simply here to provide
                        some structure to the documentation. &nbsp; We will place a call to
                        the URL that you provide us, and we will expect a response to that API
                        call as described below.
                    </td>
                </tr>
            </tbody>
        </table>
        <br>
        The Callback APIs documented in this group of API signatures includes...
        <table>
            <tr>
                <th>Name</th>
                <th>Description</th>
            </tr>
            <tr>
                <td>Port-Out Validation</td>
                <td>This Callback API will be used with select pre-qualified customers to confirm the validity of a port-out request when it is submitted by the winning carrier.  The API call will define the end user owner of the Telephone Number in terms of FCC-approved information to aid in assessing the validity of the request</td>
            </tr>
            <tr>
                <td>Order state change notification Callback API</td>
                <td>This Callback API will be used to notify customers of events and changes that occur with various feature and service orders that are being processed by the Bandwidth Dashboard on their behalf.  In general this notification callback will be called whenever an order that is in-scope changes state or has a note added to it.</td>
            </tr>
        </table>
        <br> <br>
        If the customer's endpoint is unavailable, the Bandwidth Dashboard callback service will retry the customer's endpoint 8 times over a period of 40 minutes.
        <br><br>
        The API payloads are described below...
    /portOutValidationCallbackApi: 
        description: |
          The port out validation API is used for portout management purposes and gives the losing side customer the possibility to validate the portout process.
          <h4>Summary</h4>
          <p>Validation of a Port-out request will begin with a submission from Bandwidth to our customer including information used to validate the correctness of the port-out request. The included information<span>&nbsp;</span><em>may</em><span>&nbsp;</span>include:</p>
          <ul>
            <li>a list of telephone numbers to be ported out</li>
            <li>a subscriber name for information purposes</li>
            <li>a zip code associated with the subscriber, presumably relating to a billing or service address</li>
            <li>an account code, presumably related to an account used to reflect&nbsp; the commercial or billing relationship with the subscriber</li>
            <li>a PIN established by the end user that helps to identify that end user / subscriber</li>
          </ul>
          <p>One of two responses are valid:</p>
          <ol>
            <li>a positive validation of the port-out request. In this case no additional information is required</li>
            <li>a negative response indicating that the port-out request is considered to be invalid, based on the information received.
              <ul>
                <li>the response<span>&nbsp;</span><em><b>must</b></em><span>&nbsp;</span>contain error response codes that will support updating of the request with valid data.<br> </li>
                <ul>
                  <li>this information will be passed back to the requesting party to allow them to attempt to improve the request.</li>
                </ul>
                <li>In this case the response<span>&nbsp;</span><em><b>should</b></em><span>&nbsp;</span>contain data that would have allowed to port-out to be considered valid,
                  <ul>
                    <li>this data is intended for dispute resolution, and for review by Bandwidth to see if the port appears to be valid based on the available data.</li>
                    <li>all fields are considered optional.</li>
                    <li>failure to return any data<span>&nbsp;</span><em>may</em>
                    <span>&nbsp;</span>be considered to be equivalent to approving the port-out request.</li>
                    <li>subsequent submission of the data provided in the response should cause acceptance of the port-out request.</li>
                    <li>this information will not be passed directly on to the requesting party</li>
                  </ul>
                </li>
              </ul>
            </li>
          </ol>
          <p>The above exchange of information is intended to support best faith resolution of port-requests within the constraints imposed by the FCC. The objective is consistent achievement of the middle ground between slamming and unjustified blocking of valid requests. &nbsp;Information returned to Bandwidth is to aid in dispute resolution, and is considered to be covered by CPNI limitations and thereby not intended for distribution to any third parties. Note that failure of the winning carrier to match the values exchanged by the API may not prevent porting-out of the number. FCC guidelines must still be followed in dispute resolution.</p>
          <p>This exchange of information is synchronous in nature, and will not permit extensive delays in response, and will not create a series of linked transactions for resolving a dispute, or in attempting the port-out with different information. Updated submissions will be treated as new requests.  Responses to the API call are expected within 30 seconds.</p>
          <div>
          The error codes and error explanation payloads below are the ones that we expect to see in response to the port-out validation callback.  This uniform set of responses allows a consistent and clear dialog with the prospective winning carrier about the nature of the validation failure.<br/>
          <table style="text-align: left; width: 60%;" border="1" cellpadding="2" cellspacing="2">
                <thead>
                    <tr>
                        <th>Code</th>
                        <th>Meaning</th>
                        <th>Disposition</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>7510</td>
                        <td>Required Account Code missing</td>
                        <td>Request placed in Exception</td>
                    </tr>
                    <tr>
                        <td>7511</td>
                        <td>Invalid Account Code</td>
                        <td>Request placed in Exception</td>
                    </tr>
                    <tr>
                        <td>7512</td>
                        <td>Required PIN missing</td>
                        <td>Request placed in Exception</td>
                    </tr>
                    <tr>
                        <td>7513</td>
                        <td>PIN Invalid</td>
                        <td>Request placed in Exception</td>
                    </tr>
                    <tr>
                        <td>7514</td>
                        <td>Required ZIP Code missing</td>
                        <td>Request placed in Exception</td>
                    </tr>
                    <tr>
                        <td>7515</td>
                        <td>Invalid ZIP Code</td>
                        <td>Request placed in Exception</td>
                    </tr>
                    <tr>
                        <td>7516</td>
                        <td>Telephone Number not recognized or invalid for this account <TN></td>
                        <td>Request Cancelled</td>
                    </tr>
                    <tr>
                        <td>7517</td>
                        <td>Too many Telephone numbers in this request</td>
                        <td>Request Cancelled</td>
                    </tr>
                    <tr>
                        <td>7518</td>
                        <td>Telephone Number Not Active <TN></td>
                        <td>Request Cancelled</td>
                    </tr>
                    <tr>
                        <td>7519</td>
                        <td>Customer info does not match <Explanation></td>
                        <td>Request placed in Exception</td>
                    </tr>
                    <tr>
                        <td>7598</td>
                        <td>Invalid Request - <explanatory text></td>
                        <td>Request placed in Exception</td>
                    </tr>
                    <tr>
                        <td>7599</td>
                        <td>Fatal Error in Processing</td>
                        <td>Request succeeds</td>
                    </tr>
                    <tr>
                        <td>nnnn</td>
                        <td>Anything Else</td>
                        <td>Request succeeds</td>
                    </tr>
                </tbody>
                </table>
          </div>
          <h4>Configuration</h4>
          <p>The configuration of the call-back API used for port-out validation is done by Bandwidth development staff. &nbsp;Configuration of this service is performed on the submission of a Ticket, and on completion of the required contract extensions.</p>
          <ul>
            <li>the configured URL provided by the customer that will be invoked by Bandwidth in order to validate a port-out request.</li>
            <li>the suecurity of the exchange can be protected within an https exchange, and can be authenticated with userid / password credentials, or with certificates. The setup of the callback will be covered in the ticketing process.</li>
          </ul>
          <br>
          <h4>Responsibilities</h4>
          Accounts using the Poprt-out verification API will likely be required to extend the contractual relationship with Bandwidth to ensure clarity around the responsibilities of our customers in the use of the API, and the rights of Bandwidth to withhold this capability if we believe that the capability is being used in contravention of FCC best practices, guidelines and recommendations. Please review these requirements with your Bandwidth representative.<br>
        post:
          description: |
            The initial request for validation is a post to the pre-configured URL defined by the customer.
            This request contains optional elements for:
            <ul>
              <li>PIN (optional) ( 10 digits )</li> 
              <li>Account Number (optional) ( 25 digits )</li> 
              <li>zipcode (optional) ( 15 characters )</li>  
              <li>a list of one or more telephone numbers (at least one telephone number must be provided) ( 10 digits )</li> 
              <li>Subscriber name for information purposes. (optional)( 93 characters )</li>
              <li>PON for information and correlation purposes. (optional)( 25 characters )</li>
            </ul>
          body:
            application/xml:
              example: |
                <?xml version="1.0"?>
                <PortOutValidationRequest>
                    <PON>some_pon</PON>
                    <Pin>1111</Pin>
                    <AccountNumber>777</AccountNumber>
                    <ZipCode>62025</ZipCode>
                    <SubscriberName>Subscriber Name</SubscriberName>
                    <TelephoneNumbers>
                        <TelephoneNumber>2223331000</TelephoneNumber>
                        <TelephoneNumber>2223331001</TelephoneNumber>
                    </TelephoneNumbers>
                </PortOutValidationRequest>
          responses:
            200:
                description: |
                  <h3>Validation Passed</h3>
                  If the port-out is considered valid the returned payload contains an indication that the numbers in the request are portable &lt;Portable&gt;true&lt;/Portable&gt; (<b>required</b>), and may play back the PON.<br/>
                  <div style="border: solid 1px black; padding: 0px">
                  Response code - 200 OK - validation of the port out request
                    <pre>
                    &lt;PortOutValidationResponse&gt;
                        &lt;Portable&gt;true&lt;/Portable&gt;
                        &lt;PON&gt;some_pon&lt;/PON&gt;
                    &lt;/PortOutValidationResponse&gt;
                    </pre>
                  </div>
                  <h3>Validation Failed</h3>
                  In the case where the number should not be ported, a response payload is returned that may indicate the values that would allow a port-out request to be validated.<br/>
                  <ul>
                  <li>The &lt;Portable&gt; value <b>must</b> indicate "false"</li>
                  <li>A recognizable error code values <b>must</b> be returned, unrecognized error codes will be ignored and not treated as error codes.  The list of acceptable error codes is provided above.</li>
                  <li>The response payload should contain at least one of the optional fields that could be used to validate the port-out request.</li>
                  <li>If the returned field/fields was/were not provided in the original request then that indicates that the field was missing from the request and should be provided</li>
                  <li>If the returned field/fields was/were different than provided then that indicates an error in the requesting information</li>
                  <li>The list of Telephone Numbers should contain the telephone numbers considered valid.</li>
                  <li>For the port-out to be considered valid all telephone numbers in the request should be returned - If one telephone number is invalid then the request fails.</li>
                  </ul><br/>
                    <div style="border: solid 1px black; padding: 0px 5px">
                    Response code - 200 OK - a valid request, but the port-out request has failed validation
                    <pre>
                    &lt;PortOutValidationResponse&gt;
                        &lt;Portable&gt;false&lt;/Portable&gt;
                        &lt;PON&gt;some_pon&lt;/PON&gt;
                        &lt;Errors&gt;
                            &lt;Error&gt;
                                &lt;Code&gt;75xx&lt;/Code&gt;
                                &lt;Description&gt;Customer api error description&lt;/Description&gt;
                            &lt;/Error&gt;
                            &lt;Error&gt;
                                &lt;Code&gt;75xx&lt;/Code&gt;
                                &lt;Description&gt;Customer api error description&lt;/Description&gt;
                            &lt;/Error&gt;
                        &lt;/Errors&gt;
                        &lt;AcceptableValues&gt;
                            &lt;Pin&gt;2222&lt;/Pin&gt;
                            &lt;AccountNumber&gt;555&lt;/AccountNumber&gt;
                            &lt;ZipCode&gt;02154&lt;/ZipCode&gt;
                            &lt;TelephoneNumbers&gt;
                                &lt;TelephoneNumber&gt;2223331000&lt;/TelephoneNumber&gt;
                            &lt;/TelephoneNumbers&gt;
                        &lt;/AcceptableValues&gt;
                    &lt;/PortOutValidationResponse&gt;
                    </pre>
                    </div>
                  Failure to return a valid response will be considered an <b>approval of the port-out</b> request.<br/>
                  Failure to return any response will be considered an <b>approval of the port-out</b> request.<br/>
            400:
              description: |
                Numbers <b>will be ported out</b> if a 4xx series response is received by Bandwidth
            500:
              description: |
                An error in the customer's server - indicating that the request cannot be serviced by the customer.
                Numbers <b>will be ported out</b> if a 5xx series response is received by Bandwidth
    /notificationCallbackApi: 
        description: |
            The notification callback API is used notify customers of events and changes that occur with various feature and service orders that are being processed by the Bandwidth Dashboard on their behalf.  In general this notification callback will be called whenever an order that is in-scope changes state or has a note added to it.<br><br>
            When an order changes the Bandwidth Dashboard will POST a pre-defined payload to our customer at the URL that they have defined by use of the /accounts/<account-id>/subscriptions API call.  Please see the documentation on that API call to understand how to register the notification callback API with the Bandwidth Dashboard.<br><br>
        post:
            description: |
                The POST to the callback API contains a summary of the order that is independent of the type of the order that caused the event that in turn caused the notification callback.  This requires that the customer's end system place an API call to the Bandwidth Dashboard to gather additional details on the change to the order if that is important.  <br><br>
                This approach was taken for two reasons:
                <ul>
                <li>some (or many) of the notifications might not require action.</li>
                <li>since orders contain different information, providing order-specific information would cause an undesirable tight linkage between notifications and every type of order, mandating API changes whenever the data associated with an order changed. </li>
                </ul><br><br>
                The payload of the POST contains:
                <ul>
                <li> the Subscription ID that the notification is in response to.</li>
                <li> the type of order that the notification applies to.</li>
                <li> the order ID of the order that has changed </li>
                <li> the new state of the order </li>
                <li> a message if one was attached as part of the state change.  This will often be present in error cases.</li>
                <li> the body of any note that was attached to the order, if applicable</li>
                <li> list of the completed telephone numbers for Port-in/Port-out/New Number/Disconnect orders in terminal state</li>
                </ul><br><br>
                The Payload follows
            body:
                application/xml:
                    example: |
                        <?xml version="1.0"?>
                        <Notification>
                            <SubscriptionId>...</SubscriptionId>
                            <OrderType>portins | portouts | orders | disconnects | dldas | lsrorders | e911s | tnoptions</OrderType>
                            <OrderId>...</OrderId>
                            <!-- for order update events -->
                            <Status>COMPLETE | FAILED | PARTIAL | EXCEPTION ... </Status>
                            <!-- for order update events -->
                            <Message>...</Message>
                            <!-- for note events -->
                            <Note>...</Note>
                            <!-- for portins/portouts/orders/disconnects OrderTypes -->
                            <CompletedTelephoneNumbers>
                                <TelephoneNumber> ... </TelephoneNumber>
                                <!-- ... -->
                            </CompletedTelephoneNumbers>
                        </Notification>
            responses:
                200:
                    description: |
                        a 200 OK is presumed to be acceptance of the API call.  In the case of the notification callback API the response code and any returned message is stored in the &lt;Status&gt; element of the &lt;Subscription&gt;
                400:
                    description: |
                        Anything other than a 200 OK is presumed to be a failure of the API call.  In the case of the notification callback API the response code and any returned message is stored in the &lt;Status&gt; element of the &lt;Subscription&gt;.  No subsequent action is taken is based on the error.
/suggestions: 
    description: |
        The suggestions resource returns a limited number of covered LATA, NPA, NPA-NXX, NPA-NXX-X, city, ZIP code, rate center and state abbreviation entries that start with the sequence of symbols, specified in query parameter. 
        Search is case-insensitive and ignores the leading whitespace characters.
    get:
        description:
            Returns the limited number of matching LATA, NPA, NPA-NXX, NPA-NXX-X, city, ZIP code, rate center and state abbreviation entries
        headers:
            Accept:
                type: string
                enum: [application/json, application/xml]
                required: false
        queryParameters:
            q: 
                displayName: q
                type: string
                description: The starting characters of entries to search
                example: LA
                required: true
        responses:
            200:
                description: The matching entries were found
                body:
                    application/json:
                        example: | 
                            {
                                "cities": [
                                    {
                                        "City": "RALEIGH",
                                        "State": "IL"
                                    },
                                    {
                                        "City": "RALEIGH",
                                        "State": "MS"
                                    },
                                    {
                                        "City": "RALEIGH",
                                        "State": "NC"
                                    },
                                    {
                                        "City": "RALPH",
                                        "State": "AL"
                                    },
                                    {
                                        "City": "RALSTON",
                                        "State": "PA"
                                    },
                                    {
                                        "City": "RALSTON",
                                        "State": "WY"
                                    }
                                ],
                                "RateCenters": [
                                    {
                                        "Abbreviation": "RALEIGH",
                                        "State": "MS",
                                        "Name": "RALEIGH"
                                    },
                                    {
                                        "Abbreviation": "RALEIGH",
                                        "State": "NC",
                                        "Name": "RALEIGH"
                                    }
                                ]
                            }
                    application/xml:
                        example: |
                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                            <Suggestions>
                                <Latas>
                                    <Value>248</Value>
                                </Latas>
                                <ZipCodes>
                                    <Value>24801</Value>
                                    <Value>24818</Value>
                                    <Value>24822</Value>
                                    <Value>24827</Value>
                                    <Value>24834</Value>
                                    <Value>24849</Value>
                                    <Value>24854</Value>
                                    <Value>24857</Value>
                                    <Value>24859</Value>
                                    <Value>24860</Value>
                                </ZipCodes>
                                <AreaCodes>
                                    <Value>248</Value>
                                </AreaCodes>
                            </Suggestions>
            204:
                description: | 
                    No entries found for the query 
            400:
                description: | 
                    Query parameter is not specified or blank string
/sipcredentials: 
    description: |
        This resource is used to manage SIP credentials for subscribers provisioning.
    get:
        description: |
            GET is used to retrieve all SIP credentials.
        queryParameters:
                page:
                    description: An ID of the first element in a page.  This value will indicate the first value, not the count, of the initial entry in the page being requested.<br>
                        It can be an index of SIP credential or a combination of the user name and domain in form {userName}@{domain}. The initial page is tagged with the ID '1'.
                    type: string
                    example: 3, user321@bw.com
                    default: 1
                    required: false
                size:
                    description: The number of items to include in a page
                    type: integer
                    example: 5000
                    default: 500
                    required: false
                accountId:
                    description: The internal account id assigned to the customer SIP credentials are associated with
                    type: integer
                    example: 5000125
                    required: false
                usernamefragment:
                    description: The user name fragment. Min length - 3 characters.
                    type: string
                    example: user32
                    required: false
                domainfragment:
                    description: The domain fragment. Min length - 3 characters.
                    type: string
                    example: bw.
                    required: false
        responses:
            200:
                description: |
                    OK - the SIP credentials retrieval request will return a list of all SIP credentials.
                body:
                    application/xml:
                        example: 
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                            <SipCredentialsResponse>
                                <Links>
                                    <first>Link=&lt;http://localhost:8080/iris/sipcredentials?size=4&amp;page=1&gt;;rel="first";</first>
                                    <next>Link=&lt;http://localhost:8080/iris/sipcredentials?size=4&amp;page=4&gt;;rel="next";</next>
                                </Links>
                                <SipCredentials>
                                    <SipCredentialsByAccount>
                                        <Account>9999999</Account>
                                        <SipCredential>
                                            <UserName>John</UserName>
                                            <Domain>bw.com</Domain>
                                            <Hash1>1s32gadgs433dd4</Hash1>
                                            <Hash1b>1g32gadgs433d24</Hash1b>
                                        </SipCredential>
                                    </SipCredentialsByAccount>
                                    <SipCredentialsByAccount>
                                        <Account>101</Account>
                                        <SipCredential>
                                            <UserName>Mathew</UserName>
                                            <Domain>bw.com</Domain>
                                            <Hash1>22543gggs43g324</Hash1>
                                            <Hash1b>4562gadgs433454</Hash1b>
                                        </SipCredential>
                                        <SipCredential>
                                            <UserName>Steve@bw.com</UserName>
                                            <Hash1>32543gggs43g324</Hash1>
                                        </SipCredential>
                                        <SipCredential>
                                            <UserName>William</UserName>
                                            <Domain>bw.com</Domain>
                                            <Hash1>56543gggs43g324</Hash1>
                                            <Hash1b>4562gadgs433454</Hash1b>
                                        </SipCredential>
                                    </SipCredentialsByAccount>
                                </SipCredentials>
                            </SipCredentialsResponse>
            404:
                description: |
                    Not Found - if the account specified does not exist or is locked or there are no SIP credentials for specified search criteria it will result in a not found.
                body:
                    application/xml:
                        example: 
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                            <SipCredentialsResponse>
                                <ResponseStatus>
                                    <ErrorCode>23008</ErrorCode>
                                    <Description>There are no Sip credentials associated with the account with ID = 41</Description>
                                </ResponseStatus>
                            </SipCredentialsResponse>
    /{userName}: 
        description: |
            This resource is used to search for SIP credentials on all accounts by unique combination of user name and domain.
        get:
            description: |
                GET is used to retrieve all SIP credentials by combination of user name and domain.
            responses:
                200:
                    description: |
                        OK - will return full information about SIP credentials on accounts for specified user name and domain.
                    body:
                        application/xml:
                            example: 
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <SipCredentialsResponse>
                                    <SipCredentials>
                                        <SipCredentialsByAccount>
                                            <Account>41</Account>
                                            <SipCredential>
                                                <UserName>John</UserName>
                                                <Domain>bw.com</Domain>
                                                <Hash1>1g32gadgs433dd4</Hash1>
                                                <Hash1b>1g32gadgs433d24</Hash1b>
                                            </SipCredential>
                                        </SipCredentialsByAccount>
                                        <SipCredentialsByAccount>
                                            <Account>14</Account>
                                            <SipCredential>
                                                <UserName>John</UserName>
                                                <Domain>bw.com</Domain>
                                                <Hash1>43d2gadgs433dd4</Hash1>
                                                <Hash1b>gdd2gadgs433d24</Hash1b>
                                            </SipCredential>
                                            <SipCredential>
                                                <UserName>Steve@bw.com</UserName>
                                                <Hash1>42asc3asd2gadgs433dd4</Hash1>
                                            </SipCredential>
                                        </SipCredentialsByAccount>
                                    </SipCredentials>
                                </SipCredentialsResponse>
                404:
                    description: |
                        Not Found - if  there are no any SIP credentials that corresponds to specified combination of user name and domain it will result in a not found.
                    body:
                        application/xml:
                            example: 
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <SipCredentialsResponse>
                                    <ResponseStatus>
                                        <ErrorCode>23011</ErrorCode>
                                        <Description>Sip credentials were not found.</Description>
                                    </ResponseStatus>
                                </SipCredentialsResponse>
/testapi: 
    description: the <b>testapi</b> resource is a hidden resource that is used to create test stubs and similar entities.  All attempts to do anything with directly with this resource will respond with a 404 not found.
    get:
        responses: 
            404:
                description: Not Found - this resource is not seen to exist
    post:
        responses: 
            404:
                description: Not Found - this resource is not seen to exist
    put:
        responses:    
            404:
                description: Not Found - this resource is not seen to exist
    delete:
        responses:   
            404:
                description: Not Found - this resource is not seen to exist
    /notesTest: 
        description: |
            The notesTest resource is used to test the subscription callback mechanism, by allowing a callback URL to terminate on IRIS, and then depositing a payload in the response to the callback that allows the status of the order to be viewed.<br>
            To use this URL in testing, include the path in the callback URL in a subscription:
            <ul>
            <li>place the URL http://&lt;base url&gt;/testapi/notesTest in the callback element of the subscription
            <li>use a null "OrderId" tag in the subscription request - that means that all changes to the subscribed order type will cause the callback URL to be invoked</li>
            <li>use a long Expiry value.</li>
            </ul>
            When the subscription event triggers, the callback URL will be called by the notification handler.  This in turn will cause a response to the callback that fills the &lt;Status&gt; field in the subscription with the status of the order, confirming that the callback URL was triggered, and providing some immediate order status feedback.
            In sequence:
            <ol>
            <li>the above URL is placed in the &lt;URL&gt; element in a subscription</li>
            <li>the event happens that causes the triggering of the notification, and the execution by IRIS of the call-back</li>
            <li>a payload is posted to the callback URL.  That payload is described in the POST description below</li>
            <li>That payload is echoed back as a reply to the POST, and placed in the &lt;Status&gt; field of the Subscription</li>
            <li>examining the subscription by a GET on the subscription resource will allow inspection of the values posted to the URL </li>
            </ol>
            An example of the URL in use in the payload used to create a subscription is...
                <pre>
                POST /{base url}/accounts/{account-id}/subscriptions
                &lt;Subscription&gt;
                    &lt;OrderType&gt;portins&lt;/OrderType&gt;
                    &lt;OrderId&gt;e098acec-459f-4ef8-bb05-cb742d699e8c&lt;/OrderId&gt;
                    &lt;CallbackSubscription&gt;
                        &lt;URL&gt;<b>http://192.168.101.76:8080/iris/testapi/notesTest</b>&lt;/URL&gt;
                        &lt;User&gt;jbm&lt;/User&gt;
                        &lt;Expiry&gt;3600&lt;/Expiry&gt;
                    &lt;/CallbackSubscription&gt;
                &lt;/Subscription&gt;
                </pre>
        post:
            description: |
                The URL can be invoked directly - it is not restricted to the callback described above.  This is the same thing that is done by the notification system on detection of a notifiable event:
            body:
                application/xml:
                    example: |
                        <?xml version="1.0"?>
                        <Notification>
                            <Status>BACKORDERED</Status>
                            <SubscriptionId>2ed4d8ea-5726-428f-82a8-7be219dc261f</SubscriptionId>
                            <OrderId>3716ce64-fc7c-4cf5-a43e-7f29017756ce</OrderId>
                            <OrderType>portins</OrderType>
                            <Message>This is an update</Message>
                        </Notification>
            responses:
                201:
                    description: Created.  This indicates that the payload was successfully received.  The response body contains a reflection of the content, which is stored in the &lt;Status&gt; field of the Subscription.  A GET on the subscription will display the contents of the response in that field.
                    body: 
                        application/xml:
                            example: |
                                <?xml version="1.0"?>
                                <Notification>
                                    <Status>BACKORDERED</Status>
                                    <SubscriptionId>2ed4d8ea-5726-428f-82a8-7be219dc261f</SubscriptionId>
                                    <OrderId>3716ce64-fc7c-4cf5-a43e-7f29017756ce</OrderId>
                                    <OrderType>portins</OrderType>
                                    <Message>This is an update</Message>
                                </Notification>
                400:
                    description: Bad Request.  An empty payload will return a bad request.  Almost any other payload will be accepted.
    /mockpot/portouts: 
        description: This is a stub for the mockpot portouts resource path.  This needs documenting by somebody that knows how the mockpot works
        get:
            responses: 
                405:
                    description: Method Not Allowed - Who knows what it really means ???
        post:
            description: This is the only method that really does anything - but I don't understand the payload, and don't know the purpose.  
            responses: 
                400:
                    description: In this case I submitted a null payload - I suspect that the correct payload would create the desired result
        put:
            responses:    
                405:
                    description: Method Not Allowed - Who knows what it really means ???
/tnoptions: 
    description: |
        TN Option orders track the assignment of TNs to Accounts, and comprise the most common use of the Bandwidth Dashboard API.
        The *+orders+* global search API will search the system for TN Option orders, filtered by a wide range of filter parameters.
    get:
        description: |
            Retrieve information about one or more TN Option Orders (tnoptions), where the orders are chosen based on the search parameters provided in the API Call.
            Not all search parameters are compatible with all other search parameters, due to the complexity of searching for historical records using highly parameterized or complex searches.  As a result:
            <ul>
                        <li>all query parameters are compatible with the exception of...</li>
                        <li>if modifiedFromDate or modifiedToDate are specified, then the only other valid search parameters are accountId, sippeerId or siteId</li>
            </ul>
        queryParameters:
            accountId:
                description: This is the account that the searched-for order will be contributing to.  Specifying this parameter will restrict the search to TN Option orders within the specified account.
                type: integer
                example: 9900012
                repeat: true
            status:
                description: The status of the TN Option order being searched for.
                type: string
                example: PROCESSING
                enum: [RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED]
                repeat: true
            tn:
                description: A Telephone Number (TN) that is referenced in the order
                type: string
                example: 9199918388
            customerOrderId:
                description: The Customer Order ID is an ID assigned by the account owner to provide a reference number for the TN Option order.
                type: string
                example: ABCCorp12345
            modifiedDateFrom:
                description: For Date-based searches, the starting date of a date range that will be used to find TN Option Orders that were modified within the date range.  It is in the form yyyy-MM-dd.
                type: string
                example: 2013-10-22
            modifiedDateTo:
                description: For Date-based searches, the ending date of a date range that will be used to find TN Option Orders that were modified within the date range.  It is in the form yyyy-MM-dd.
                type: string
                example: 2013-10-25
            createdDateFrom: 
                description: Checks the order's creation date against this value. Orders that have a creation date after this date will be included. Format is yyyy-MM-dd 
                type: string
                example: 2013-10-22
            createdDateTo:
                description: Checks the order's creation date against this value. Orders that have a creation date before this date will be included. Format is yyyy-MM-dd 
                type: string
                example: 2013-10-25
            lastModifiedAfter:
                description: Checks the order's last modified date against this value. Orders that have a modification date after this date will be included. Format is yyyy-MM-dd 
                type: string
                example: 2013-10-25
            lastModifiedBy:
                description: This is the user-name of the user that last modified the TN Option Order.
                type: string
                example: smckinnon
            orderIdFragment:
                description: This search parameter represents the internal Bandwidth Dashboard ID that has been assigned to the TN Option Order.  This parameter is the first few characters of the internal ID - the entire ID does not need to be specified.
                type: string
                example: ed1c0bed-e2
            orderDetails:
                description: If set to true, a list of order details will be displayed instead the summary information.
                type: boolean
                default: false
        responses:    
            200:
                description: |
                    The descriptive payload for the TN Option Orders query provides a broad range of information about the TN Option Orders found by the query, including the data associated with the order, the state of the order, and details about the order if it was successful.
                body: 
                    application/xml:
                        example: 
                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                            <TnOptionOrders>
                                <TotalCount>2</TotalCount>
                                <TnOptionOrderSummary>
                                    <accountId>1</accountId>
                                    <CountOfTNs>1</CountOfTNs>
                                    <userId>jbm</userId>
                                    <lastModifiedDate>2016-01-15T11:36:52.853Z</lastModifiedDate>
                                    <OrderDate>2016-01-15T11:36:52.727Z</OrderDate>
                                    <OrderType>tn_option</OrderType>
                                    <OrderStatus>COMPLETE</OrderStatus>
                                    <OrderId>65e03a35-6b97-48a5-8126-f47bad02df2a</OrderId>
                                </TnOptionOrderSummary>
                                <TnOptionOrderSummary>
                                    <accountId>1</accountId>
                                    <CountOfTNs>1</CountOfTNs>
                                    <userId>jbm</userId>
                                    <lastModifiedDate>2016-01-15T11:36:26.735Z</lastModifiedDate>
                                    <OrderDate>2016-01-15T11:36:26.633Z</OrderDate>
                                    <OrderType>tn_option</OrderType>
                                    <OrderStatus>COMPLETE</OrderStatus>
                                    <OrderId>d8f5abc0-1a4c-4c36-b387-93fb5b430784</OrderId>
                                </TnOptionOrderSummary>
                            </TnOptionOrders>
                            OR
                            <TnOptionOrders>
                                <TotalCount>2</TotalCount>
                                <TnOptionOrder>
                                    <OrderCreateDate>2016-01-15T11:36:52.727Z</OrderCreateDate>
                                    <AccountId>1</AccountId>
                                    <CreatedByUser>jbm</CreatedByUser>
                                    <OrderId>65e03a35-6b97-48a5-8126-f47bad02df2a</OrderId>
                                    <LastModifiedDate>2016-01-15T11:36:52.853Z</LastModifiedDate>
                                    <ProcessingStatus>COMPLETE</ProcessingStatus>
                                    <TnOptionGroups>
                                        <TnOptionGroup>
                                            <NumberFormat>10digit</NumberFormat>
                                            <RPIDFormat>10digit</RPIDFormat>
                                            <RewriteUser>testUser1</RewriteUser>
                                            <CallForward>6042661720</CallForward>
                                            <CallingNameDisplay>on</CallingNameDisplay>
                                            <Protected>true</Protected>
                                            <Sms>on</Sms>
                                            <TelephoneNumbers>
                                                <TelephoneNumber>2018551025</TelephoneNumber>
                                            </TelephoneNumbers>
                                        </TnOptionGroup>
                                    </TnOptionGroups>
                                    <ErrorList/>
                                </TnOptionOrder>
                                <TnOptionOrder>
                                    <OrderCreateDate>2016-01-15T11:36:26.633Z</OrderCreateDate>
                                    <AccountId>1</AccountId>
                                    <CreatedByUser>jbm</CreatedByUser>
                                    <OrderId>d8f5abc0-1a4c-4c36-b387-93fb5b430784</OrderId>
                                    <LastModifiedDate>2016-01-15T11:36:26.735Z</LastModifiedDate>
                                    <ProcessingStatus>COMPLETE</ProcessingStatus>
                                    <TnOptionGroups>
                                        <TnOptionGroup>
                                            <NumberFormat>10digit</NumberFormat>
                                            <RPIDFormat>10digit</RPIDFormat>
                                            <RewriteUser>testUser1</RewriteUser>
                                            <CallForward>6042661720</CallForward>
                                            <CallingNameDisplay>on</CallingNameDisplay>
                                            <Protected>true</Protected>
                                            <Sms>on</Sms>
                                            <TelephoneNumbers>
                                                <TelephoneNumber>2018551020</TelephoneNumber>
                                            </TelephoneNumbers>
                                        </TnOptionGroup>
                                    </TnOptionGroups>
                                    <ErrorList/>
                                </TnOptionOrder>
                            </TnOptionOrders>
            404:
                description: Not Found.  If any errors are found in the processing of the query string a 404 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored. 
    /{orderId}: 
        description: |
            The "orderId" resource refers to a specific element of the orders collection.  Examining that resource provides detailed information on the specific identified order.
        get:
            description: |
                Retrieve information about a specific TN Option Order identified as the resource.
            responses:
                200:
                    description: |
                        The descriptive payload for the TN Option Orders query provides a broad range of information about the TN Option Order identified in the URL.  Included amongst the information is:
                        <ul>
                        <li>ErrorList - the errors discovered with codes and explanations</li>
                        <li>ProcessingStatus(RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED) - the overall status of the order</li>
                        </ul>
                    body:
                        application/xml:
                            example: 
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <TnOptionOrder>
                                    <OrderCreateDate>2016-01-15T11:36:52.727Z</OrderCreateDate>
                                    <AccountId>1</AccountId>
                                    <CreatedByUser>jbm</CreatedByUser>
                                    <OrderId>65e03a35-6b97-48a5-8126-f47bad02df2a</OrderId>
                                    <LastModifiedDate>2016-01-15T11:36:52.853Z</LastModifiedDate>
                                    <ProcessingStatus>COMPLETE</ProcessingStatus>
                                    <TnOptionGroups>
                                        <TnOptionGroup>
                                            <NumberFormat>10digit</NumberFormat>
                                            <RPIDFormat>10digit</RPIDFormat>
                                            <RewriteUser>testUser1</RewriteUser>
                                            <CallForward>6042661720</CallForward>
                                            <CallingNameDisplay>on</CallingNameDisplay>
                                            <Protected>true</Protected>
                                            <Sms>on</Sms>
                                            <TelephoneNumbers>
                                                <TelephoneNumber>2018551025</TelephoneNumber>
                                            </TelephoneNumbers>
                                        </TnOptionGroup>
                                    </TnOptionGroups>
                                    <ErrorList/>
                                </TnOptionOrder>
                404:
                    description: NOT FOUND - the order id does not exist in the system
                    body:
                        application/xml:
                            example: 
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <TnOptionOrderReportResponse>
                                    <ResponseStatus>
                                        <Description>The resource does not exist</Description>
                                    </ResponseStatus>
                                </TnOptionOrderReportResponse>
        /history: 
            description: |
                History information is available on orders that have gone through multiple transitions.  In this case the order will have one or more OrderHistory records associated with it, detailing the set of events that have affected the order.
            get:
                description: |
                    Retrieve the history information associated with an order
                responses:    
                    200:
                        description: |
                            The history payload is a set of history records, each of which contains:
                                <table style="text-align: left; width: 80%;" border="1" cellpadding="2" cellspacing="2">
                                    <tbody>
                                        <tr>
                                            <td>OrderDate</td>
                                            <td>The date that the order history event happened</td>
                                        </tr>
                                        <tr>
                                            <td>Note</td>
                                            <td>A Note or additional information included with the state change</td>
                                        </tr>
                                        <tr>
                                            <td>Author</td>
                                            <td>The user id that implemented the state change</td>
                                        </tr>
                                        <tr>
                                            <td>Status</td>
                                            <td>The new state of the TN Option order - RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED</td>
                                        </tr>
                                    </tbody>
                                </table>
                        body: 
                            application/xml:
                                example: 
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <OrderHistoryWrapper>
                                        <OrderHistory>
                                            <OrderDate>2016-01-15T11:36:52.728Z</OrderDate>
                                            <Note>Tn Option order has been received by the system</Note>
                                            <Author>jbm</Author>
                                            <Status>RECEIVED</Status>
                                        </OrderHistory>
                                        <OrderHistory>
                                            <OrderDate>2016-01-15T11:36:52.759Z</OrderDate>
                                            <Note>Tn Option order processing has started</Note>
                                            <Author>jbm</Author>
                                            <Status>PROCESSING</Status>
                                        </OrderHistory>
                                        <OrderHistory>
                                            <OrderDate>2016-01-15T11:36:52.853Z</OrderDate>
                                            <Note>Tn Option order is complete</Note>
                                            <Author>jbm</Author>
                                            <Status>COMPLETE</Status>
                                        </OrderHistory>
                                    </OrderHistoryWrapper>
/usermanagement: 
    description: |
        the <b>User Management API</b> resource is a hidden resource that is used to work with domains and users.
    get:
        responses: 
            200:
                description: |
                    Return all existed domains
                body:
                    application/xml:
                        example: |
                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                            <DomainsResponse>
                                <DomainList>
                                    <Domain>
                                        <DomainName>Iris</DomainName>
                                        <DomainDescription>Bandwidth Dashboard API and Portal Users</DomainDescription>
                                        <DomainSettings />
                                    </Domain>
                                </DomainList>
                            </DomainsResponse>
    /userPreferences: 
        description: This resource retrieves information about available user preferences in system.
        get:
            description: Retrieves all user preferences available in system.
            responses:
                200:
                    description: The information has been successfully retrieved and displayed in the payload.
                    body:
                        application/xml:
                            example: |
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <UserPreferencesResponse>
                                    <UserPreferences>
                                        <UserPreference>
                                            <PreferenceName>tnFormat</PreferenceName>
                                            <OptionalValues>
                                                <OptionalValue>E.164</OptionalValue>
                                                <OptionalValue>10D</OptionalValue>
                                                <OptionalValue>11D</OptionalValue>
                                            </OptionalValues>
                                        </UserPreference>
                                        <UserPreference>
                                            <PreferenceName>preferredPortal</PreferenceName>
                                            <OptionalValues>
                                                <OptionalValue>NEW</OptionalValue>
                                                <OptionalValue>OLD</OptionalValue>
                                            </OptionalValues>
                                        </UserPreference>
                                    </UserPreferences>
                                </UserPreferencesResponse>
    /{domainName}: 
        description: This resource retrieves information about domain.
        get:
            description: Retrieves the information about domain with some name.
            responses:
                200:
                    description: The information has been successfully retrieved and displayed in the payload.
                    body:
                        application/xml:
                            example: |
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <DomainResponse>
                                    <Domain>
                                        <DomainName>Iris</DomainName>
                                        <DomainDescription>Bandwidth Dashboard API and Portal Users</DomainDescription>
                                        <DomainSettings />
                                    </Domain>
                                </DomainResponse>
                404:
                    description: Domain name not found.
                    body:
                        application/xml:
                            example: |
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <DomainResponse>
                                    <ResponseStatus>
                                        <ErrorCode>12068</ErrorCode>
                                        <Description>Domain 'iris' does not exist</Description>
                                    </ResponseStatus>
                                </DomainResponse>
        /permissions: 
            description: |
                This resource retrieves information about permissions.
            get:
                responses: 
                    200:
                        description: |
                            Return all existed permissions
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <LdapPermissionsResponse>
                                        <PermissionList>
                                            <Permission>
                                                <PermissionId>report-list-instances</PermissionId>
                                                <Internal>false</Internal>
                                            </Permission>
                                            <Permission>
                                                <PermissionId>report-create-definition</PermissionId>
                                                <Internal>false</Internal>
                                            </Permission>
                                            <Permission>
                                                <PermissionId>report-delete-definition</PermissionId>
                                                <PermissionDescription>Report-retrieve-file description-DEL</PermissionDescription>
                                                <Internal>true</Internal>
                                            </Permission>
                                            <Permission>
                                                <PermissionId>report-create-instance</PermissionId>
                                                <PermissionDescription>Lets user to create report instances</PermissionDescription>
                                                <Internal>true</Internal>
                                            </Permission>
                                        </PermissionList>
                                    </LdapPermissionsResponse>
            /{permissionId}: 
                description: This resource retrieves information about permission.
                get:
                    description: Retrieves the information about permission by unique permission name.
                    responses:
                        200:
                            description: The information has been successfully retrieved and displayed in the payload.
                            body:
                                application/xml:
                                    example:
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <LdapPermissionResponse>
                                            <Permission>
                                                <PermissionId>report-create-instance</PermissionId>
                                                <PermissionDescription>Lets user to create report instances</PermissionDescription>
                                                <Internal>false</Internal>
                                            </Permission>
                                        </LdapPermissionResponse>
                        404:
                            description: The permission does not exist.
                            body:
                                application/xml:
                                    example:
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <LdapPermissionResponse>
                                            <ResponseStatus>
                                                <ErrorCode>12069</ErrorCode>
                                                <Description>Permission 'report-create-instance123' does not exist</Description>
                                            </ResponseStatus>
                                        </LdapPermissionResponse>
                put:
                    description: Updates the information for permission by unique permission name or creates permission, if it doesn't exist.
                    body:
                        application/xml:
                            example:
                                <Permission>
                                    <Internal>false</Internal>
                                    <PermissionDescription>Lets user to create report instances</PermissionDescription>
                                </Permission>
                    responses:
                        200:
                             description: The permission has been successfully updated or created and displayed in the payload.
                             body:
                                 application/xml:
                                     example:
                                         <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                         <LdapPermissionResponse>
                                             <Permission>
                                                 <PermissionId>report-create-instance</PermissionId>
                                                 <PermissionDescription>Lets user to create report instances</PermissionDescription>
                                                 <Internal>false</Internal>
                                             </Permission>
                                         </LdapPermissionResponse>
                delete:
                    description: Removes specified permission.
                    responses:
                        200:
                            description: The permission has been successfully removed.
                        404:
                            description:
                                The permission does not exist.
                            body:
                                application/xml:
                                    example:
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <LdapPermissionResponse>
                                            <ResponseStatus>
                                                <ErrorCode>12069</ErrorCode>
                                                <Description>Permission 'test-permission2' does not exist</Description>
                                            </ResponseStatus>
                                        </LdapPermissionResponse>
        /users: 
            description: This resource retrieves information about users.
            get:
                description: Retrieves the information about  all users.
                queryParameters:
                    suggestions:
                        description: The text on which to search
                        type: string
                        example: name
                        required: false
                    page:
                        description: The number of page
                        type: integer
                        example: 2
                        required: false
                    size:
                        description: The number of items to include in a page.
                        type: integer
                        example: 100
                        required: false
                    scope:
                        description: The scope typification - internal (System, All) or external (AccountAdmin, Account).
                        type: string
                        example: external
                        required: false
                    isActive:
                        description: Filtering active and inactive users.
                        type: boolean
                        example: true
                        required: false
                responses:
                    200:
                        description: The information has been successfully retrieved and displayed in the payload.
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <LdapUsersResponse>
                                        <UserList>
                                        <totalCount>4030</totalCount>
                                        <User>
                                            <FirstName>Addindg</FirstName>
                                            <LastName>User 1</LastName>
                                            <UserId>addinguser1</UserId>
                                            <Email>addinguser1@gmail.com</Email>
                                            <Scope>All</Scope>
                                            <EmailValidated>false</EmailValidated>
                                            <Active>true</Active>
                                        </User>
                                        <User>
                                            <FirstName>Adding</FirstName>
                                            <LastName>User 2</LastName>
                                            <UserId>addinguser2</UserId>
                                            <Email>addinguser2@gmail.com</Email>
                                            <Scope>All</Scope>
                                            <EmailValidated>false</EmailValidated>
                                            <Active>true</Active>
                                        </User>
                                    </LdapUsersResponse>
            /permittedaccess:
              description:  Indicates whether or not the user invoking the call has the named permission.
              get:
                  description: Determine whether the current user has named permission
                  queryParameters:
                          permission:
                              description: This is the permissionId that should be checked for user invoking the call
                              type: string
                              example: user-users-rd
                  responses:
                      200:
                          description: The user does have the named permission
                          body:
                              application/xml:
                                  example: empty body
                      404:
                          description: User does not have the named permission in their set of named permissions
                          body:
                              application/xml:
                                  example: empty body
            /{userId}: 
                description: This resource retrieves information about user.
                get:
                    description: Retrieves the information about user.
                    responses:
                        200:
                            description: The information has been successfully retrieved and displayed in the payload.
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <LdapUserResponse>
                                            <User>
                                                <UserId>user</UserId>
                                                <Email>user@gmail.com</Email>
                                                <EmailValidated>true</EmailValidated>
                                                <UserSettings>
                                                    <Scope>Account</Scope>
                                                    <Active>true</Active>
                                                    <AllowedApiOrigin>API</AllowedApiOrigin>
                                                </UserSettings>
                                                <UserProfile>
                                                    <FirstName>J</FirstName>
                                                    <LastName>M</LastName>
                                                </UserProfile>
                                                <RoleList>
                                                    <Role>
                                                        <RoleId>Test</RoleId>
                                                        <RoleSimpleName>Simple Name</RoleSimpleName>
                                                        <RoleDescription>Desc</RoleDescription>
                                                    </Role>
                                                </RoleList>
                                                <AccountList>
                                                    <Account>
                                                        <AccountId>123</AccountId>
                                                        <AccountName>Neustar</AccountName>
                                                    </Account>
                                                </AccountList>
                                            </User>
                                        </LdapUserResponse>
                        404:
                            description: User not found.
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <LdapUserResponse>
                                            <ResponseStatus>
                                                <ErrorCode>12000</ErrorCode>
                                                <Description>User 'testing' does not exist</Description>
                                            </ResponseStatus>
                                            <User>
                                                <UserId>testing</UserId>
                                            </User>
                                        </LdapUserResponse>
                        400:
                            description: User ID is not correct.
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <LdapUserResponse>
                                            <ResponseStatus>
                                                <ErrorCode>1012</ErrorCode>
                                                <Description>userId is too short. Min length 4 characters</Description>
                                            </ResponseStatus>
                                            <User>
                                                <UserId>tst</UserId>
                                            </User>
                                        </LdapUserResponse>
                post:
                    description: Allows to create a new user.
                    body:
                        application/xml:
                            example: |
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <User>
                                    <UserId>test</UserId>
                                    <Email>test@gmail.com</Email>
                                    <Password>123456</Password>
                                        <UserProfile>
                                            <FirstName>J</FirstName>
                                            <LastName>M</LastName>
                                            <StreetAddress>
                                                <HouseNumber>123</HouseNumber>
                                                <StreetName>Street</StreetName>
                                                <City>Raleigh</City>
                                                <State>NC</State>
                                                <PostalCode>12345</PostalCode>
                                            </StreetAddress>
                                            <TelephoneNumbers>
                                                <HomePhone>2027445566</HomePhone>
                                                <CellPhone>2027445577</CellPhone>
                                                <WorkPhone>2027445588</WorkPhone>
                                                <OtherPhone>2027445599</OtherPhone>
                                            </TelephoneNumbers>
                                            <CompanyName>MyCompany</CompanyName>
                                        </UserProfile>
                                </User>
                    responses:
                        201:
                            description: User successfully created.
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <LdapUserResponse>
                                            <User>
                                                <UserId>test</UserId>
                                                <Email>test@gmail.com</Email>
                                                <EmailValidated>true</EmailValidated>
                                                <UserSettings>
                                                    <Active>false</Active>
                                                    <AllowedApiOrigin>GUI</AllowedApiOrigin>
                                                </UserSettings>
                                                <UserProfile>
                                                    <FirstName>J</FirstName>
                                                    <LastName>M</LastName>
                                                    <StreetAddress>
                                                        <HouseNumber>123</HouseNumber>
                                                        <StreetName>Street</StreetName>
                                                        <City>Raleigh</City>
                                                        <State>NC</State>
                                                        <PostalCode>12345</PostalCode>
                                                    </StreetAddress>
                                                    <TelephoneNumbers>
                                                        <HomePhone>2027445566</HomePhone>
                                                        <CellPhone>2027445577</CellPhone>
                                                        <WorkPhone>2027445588</WorkPhone>
                                                        <OtherPhone>2027445599</OtherPhone>
                                                    </TelephoneNumbers>
                                                    <CompanyName>MyCompany</CompanyName>
                                                </UserProfile>
                                            </User>
                                        </LdapUserResponse>
                        400:
                            description: Some information is not correct.
                            body:
                                application/xml:
                                    example: |
                                        <LdapUserResponse>
                                            <ResponseStatus>
                                                <ErrorCode>12688</ErrorCode>
                                                <Description>User ID in request body must match with user ID in URL</Description>
                                            </ResponseStatus>
                                            <User>
                                                <UserId>test</UserId>
                                                <Email>test@gmail.com</Email>
                                                <Password>123456</Password>
                                                <UserProfile>
                                                    <FirstName>J</FirstName>
                                                    <LastName>M</LastName>
                                                    <StreetAddress>
                                                        <HouseNumber>123</HouseNumber>
                                                        <StreetName>Street</StreetName>
                                                        <City>Raleigh</City>
                                                        <State>NC</State>
                                                        <PostalCode>12345</PostalCode>
                                                    </StreetAddress>
                                                    <TelephoneNumbers>
                                                        <HomePhone>2027445566</HomePhone>
                                                        <CellPhone>2027445577</CellPhone>
                                                        <WorkPhone>2027445588</WorkPhone>
                                                        <OtherPhone>2027445599</OtherPhone>
                                                    </TelephoneNumbers>
                                                    <CompanyName>MyCompany</CompanyName>
                                                </UserProfile>
                                            </User>
                                        </LdapUserResponse>
                put:
                    description: Allows the user update.
                    body:
                        application/xml:
                            example: |
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <User>
                                    <UserId>test</UserId>
                                    <Email>test@gmail.com</Email>
                                    <Password>123456</Password>
                                        <UserProfile>
                                            <FirstName>J</FirstName>
                                            <LastName>M</LastName>
                                            <StreetAddress>
                                                <HouseNumber>123</HouseNumber>
                                                <StreetName>Street</StreetName>
                                                <City>Raleigh</City>
                                                <State>NC</State>
                                                <PostalCode>12345</PostalCode>
                                            </StreetAddress>
                                            <TelephoneNumbers>
                                                <HomePhone>2027445566</HomePhone>
                                                <CellPhone>2027445577</CellPhone>
                                                <WorkPhone>2027445588</WorkPhone>
                                                <OtherPhone>2027445599</OtherPhone>
                                            </TelephoneNumbers>
                                            <CompanyName>MyCompany</CompanyName>
                                        </UserProfile>
                                </User>
                    responses:
                        200:
                            description: User updated.
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <LdapUserResponse>
                                            <User>
                                                <UserId>test3</UserId>
                                                <Email>test3@gmail.com</Email>
                                                <EmailValidated>true</EmailValidated>
                                                <UserSettings>
                                                    <Active>false</Active>
                                                    <AllowedApiOrigin>API</AllowedApiOrigin>
                                                </UserSettings>
                                                <UserProfile>
                                                    <FirstName>J</FirstName>
                                                    <LastName>M</LastName>
                                                    <StreetAddress>
                                                        <HouseNumber>123</HouseNumber>
                                                        <StreetName>Street</StreetName>
                                                        <City>Raleigh</City>
                                                        <State>NC</State>
                                                        <PostalCode>12345</PostalCode>
                                                    </StreetAddress>
                                                    <TelephoneNumbers>
                                                        <HomePhone>2027445566</HomePhone>
                                                        <CellPhone>2027445577</CellPhone>
                                                        <WorkPhone>2027445588</WorkPhone>
                                                        <OtherPhone>2027445599</OtherPhone>
                                                    </TelephoneNumbers>
                                                    <CompanyName>MyCompany</CompanyName>
                                                </UserProfile>
                                            </User>
                                        </LdapUserResponse>
                        404:
                            description: User not found.
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <LdapUserResponse>
                                            <ResponseStatus>
                                                <ErrorCode>12000</ErrorCode>
                                                <Description>User 'testing' does not exist</Description>
                                            </ResponseStatus>
                                            <User>
                                                <UserId>testing</UserId>
                                                <Email>testing@gmail.com</Email>
                                                <Password>123456</Password>
                                                <UserProfile>
                                                    <FirstName>J</FirstName>
                                                    <LastName>M</LastName>
                                                    <StreetAddress>
                                                        <HouseNumber>123</HouseNumber>
                                                        <StreetName>Street</StreetName>
                                                        <City>Raleigh</City>
                                                        <State>NC</State>
                                                        <PostalCode>12345</PostalCode>
                                                    </StreetAddress>
                                                    <TelephoneNumbers>
                                                        <HomePhone>2027445566</HomePhone>
                                                        <CellPhone>2027445577</CellPhone>
                                                        <WorkPhone>2027445588</WorkPhone>
                                                        <OtherPhone>2027445599</OtherPhone>
                                                    </TelephoneNumbers>
                                                    <CompanyName>MyCompany</CompanyName>
                                                </UserProfile>
                                            </User>
                                        </LdapUserResponse>
                        400:
                            description: Some information is not correct.
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <LdapUserResponse>
                                            <ResponseStatus>
                                                <ErrorCode>12071</ErrorCode>
                                                <Description>A user with email 'test@gmail.com' already exists</Description>
                                            </ResponseStatus>
                                            <User>
                                                <UserId>test</UserId>
                                                <Email>test@gmail.com</Email>
                                                <Password>123456</Password>
                                                <UserProfile>
                                                    <FirstName>J</FirstName>
                                                    <LastName>M</LastName>
                                                    <StreetAddress>
                                                        <HouseNumber>123</HouseNumber>
                                                        <StreetName>Street</StreetName>
                                                        <City>Raleigh</City>
                                                        <State>NC</State>
                                                        <PostalCode>12345</PostalCode>
                                                    </StreetAddress>
                                                    <TelephoneNumbers>
                                                        <HomePhone>2027445566</HomePhone>
                                                        <CellPhone>2027445577</CellPhone>
                                                        <WorkPhone>2027445588</WorkPhone>
                                                        <OtherPhone>2027445599</OtherPhone>
                                                    </TelephoneNumbers>
                                                    <CompanyName>MyCompany</CompanyName>
                                                </UserProfile>
                                            </User>
                                        </LdapUserResponse>
                        403:
                            description: User has access for users in accounts that they control.
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <LdapUserResponse>
                                            <ResponseStatus>
                                                <ErrorCode>12697</ErrorCode>
                                                <Description>This user can only manage users in accounts that they control</Description>
                                            </ResponseStatus>
                                            <User>
                                                <UserId>test1Uid</UserId>
                                                <Email>yyy@gmail.com</Email>
                                                <EmailValidated>true</EmailValidated>
                                                <UserSettings>
                                                    <Scope>Account</Scope>
                                                    <Active>true</Active>
                                                    <AllowedApiOrigin>API</AllowedApiOrigin>
                                                </UserSettings>
                                                <UserProfile>
                                                    <FirstName>test2FN</FirstName>
                                                    <LastName>test2LN</LastName>
                                                    <TelephoneNumbers>
                                                        <HomePhone>2022345678</HomePhone>
                                                    </TelephoneNumbers>
                                                </UserProfile>
                                                <RoleList>
                                                    <Role>
                                                        <RoleId>default</RoleId>
                                                        <RoleSimpleName>default role</RoleSimpleName>
                                                        <RoleDescription>default</RoleDescription>
                                                    </Role>
                                                </RoleList>
                                            </User>
                                        </LdapUserResponse>
                delete:
                    description: Removing migrated user and all related information from LDAP.
                    responses:
                        200:
                            description: User has been successfully removed.
                        404:
                            description: User was not found.
                /password:
                  description: Allows to change the user's password.
                  put:
                      description: Update user's password. Only logged user can change your password.
                      body:
                          application/xml:
                              example: |
                                  <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                  <Password>123456</Password>
                      responses:
                          200:
                              description: Password updated.
                              body:
                                  application/xml:
                                      example: |
                                          <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                          <LdapUserPasswordResponse>
                                               <User>
                                                   <UserId>testCreateUserQ</UserId>
                                                   <Password>testCreateUserQ</Password>
                                               </User>
                                           </LdapUserPasswordResponse>
                          400:
                              description: Password is not correct.
                              body:
                                  application/xml:
                                      example: |
                                          <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                          <LdapUserPasswordResponse>
                                              <ResponseStatus>
                                                  <ErrorCode>1012</ErrorCode>
                                                  <Description>Password is too short. Min length 6 characters</Description>
                                              </ResponseStatus>
                                              <User>
                                                  <UserId>testCreateUserQ</UserId>
                                                  <Password>test</Password>
                                              </User>
                                          </LdapUserPasswordResponse>
                          403:
                              description: Access Denied
                              body:
                                  application/xml:
                                      example: |
                                          <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                          <LdapUserPasswordResponse>
                                              <ResponseStatus>
                                                  <ErrorCode>12618</ErrorCode>
                                                  <Description>Provided username 'testCreateUserQ1' doesn't match login username 'systemUser'</Description>
                                              </ResponseStatus>
                                              <User>
                                                  <UserId>testCreateUserQ1</UserId>
                                                  <Password>testCreateUserQ</Password>
                                              </User>
                                          </LdapUserPasswordResponse>
                /settings: 
                    description: This resource retrieves information about users settings.
                    get:
                        description: Retrieves the information about scope and active status by unique user name.
                        responses:
                            200:
                                description: The information has been successfully retrieved and displayed in the payload.
                                body:
                                    application/xml:
                                        example:
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <UserSettingsResponse>
                                                <User>
                                                    <UserSettings>
                                                        <Scope>Account</Scope>
                                                        <Active>true</Active>
                                                        <AllowedApiOrigin>GUI</AllowedApiOrigin>
                                                    </UserSettings>
                                                </User>
                                            </UserSettingsResponse>
                            404:
                                description: The user does not exist.
                                body:
                                    application/xml:
                                        example:
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <UserSettingsResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12000</ErrorCode>
                                                    <Description>User 'jbm' does not exist</Description>
                                                </ResponseStatus>
                                                <User/>
                                            </UserSettingsResponse>
                            400:
                                description: The user has more then one scope.
                                body:
                                    application/xml:
                                        example:
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <UserSettingsResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12070</ErrorCode>
                                                    <Description>User 'jbm' has more than one scope. Will automatically reset to lowest users scope.</Description>
                                                </ResponseStatus>
                                                <User>
                                                    <UserSettings>
                                                        <Scope>All</Scope>
                                                        <Active>true</Active>
                                                        <AllowedApiOrigin>GUI</AllowedApiOrigin>
                                                    </UserSettings>
                                                </User>
                                            </UserSettingsResponse>
                    put:
                        description: Updates the information about scope and active by unique user name.
                        body:
                            application/xml:
                                example:
                                    <UserSettings>
                                        <Scope>All</Scope>
                                        <Active>true</Active>
                                        <AllowedApiOrigin>API</AllowedApiOrigin>
                                    </UserSettings>
                        responses:
                            200:
                                 description: The user settings has been successfully updated and displayed in the payload.
                                 body:
                                     application/xml:
                                          example:
                                              <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                              <UserSettingsResponse>
                                                  <User>
                                                      <UserId>testCreatingUser1</UserId>
                                                      <UserSettings>
                                                          <Scope>All</Scope>
                                                          <Active>true</Active>
                                                          <AllowedApiOrigin>API</AllowedApiOrigin>
                                                      </UserSettings>
                                                  </User>
                                              </UserSettingsResponse>
                            400:
                                description: The user try setup scope that higher than his own.
                                body:
                                    application/xml:
                                        example:
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <UserSettingsResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12676</ErrorCode>
                                                    <Description>Scope priority can't be higher than your own.</Description>
                                                </ResponseStatus>
                                                <User>
                                                    <UserId>testCreatingUser1</UserId>
                                                    <UserSettings>
                                                        <Scope>All</Scope>
                                                        <Active>true</Active>
                                                        <AllowedApiOrigin>API</AllowedApiOrigin>
                                                    </UserSettings>
                                                </User>
                                            </UserSettingsResponse>
                            403:
                                description: The user try activate another user having no accoounts assigned to it.
                                body:
                                    application/xml:
                                        example:
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <UserSettingsResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12102</ErrorCode>
                                                    <Description>Forbidden action. User 'testCreatingUser1' should have at least one account assigned to it.</Description>
                                                </ResponseStatus>
                                                <User>
                                                    <UserId>testCreatingUser1</UserId>
                                                    <UserSettings>
                                                        <Scope>All</Scope>
                                                        <Active>true</Active>
                                                        <AllowedApiOrigin>API</AllowedApiOrigin>
                                                    </UserSettings>
                                                </User>
                                            </UserSettingsResponse>
                /profile: 
                    description: This resource retrieves information about users profile.
                    get:
                        description: Retrieves the information about first name, last name, company name, contact telephone numbers and address by unique user name.
                        responses:
                            200:
                                description: The information has been successfully retrieved and displayed in the payload.
                                body:
                                    application/xml:
                                        example:
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <UserProfileResponse>
                                                <User>
                                                    <UserProfile>
                                                        <FirstName>J</FirstName>
                                                        <LastName>M</LastName>
                                                        <StreetAddress>
                                                            <HouseNumber>123</HouseNumber>
                                                            <StreetName>Street</StreetName>
                                                            <City>Raleigh</City>
                                                            <State>NC</State>
                                                            <PostalCode>12345</PostalCode>
                                                        </StreetAddress>
                                                        <TelephoneNumbers>
                                                            <HomePhone>2027445566</HomePhone>
                                                            <CellPhone>2027445577</CellPhone>
                                                            <WorkPhone>2027445588</WorkPhone>
                                                            <OtherPhone>2027445599</OtherPhone>
                                                        </TelephoneNumbers>
                                                        <CompanyName>MyCompany</CompanyName>
                                                    </UserProfile>
                                                </User>
                                            </UserProfileResponse>
                            404:
                                description: The user does not exist.
                                body:
                                    application/xml:
                                        example:
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <UserProfileResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12000</ErrorCode>
                                                    <Description>User 'jbm' does not exist</Description>
                                                </ResponseStatus>
                                                <User>
                                                    <UserProfile>
                                                        <FirstName>J</FirstName>
                                                        <LastName>M</LastName>
                                                        <StreetAddress>
                                                            <HouseNumber>123</HouseNumber>
                                                            <StreetName>Street</StreetName>
                                                            <City>Raleigh</City>
                                                            <State>NC</State>
                                                            <PostalCode>12345</PostalCode>
                                                        </StreetAddress>
                                                        <TelephoneNumbers>
                                                            <HomePhone>2027445566</HomePhone>
                                                            <CellPhone>2027445577</CellPhone>
                                                            <WorkPhone>2027445588</WorkPhone>
                                                            <OtherPhone>2027445599</OtherPhone>
                                                        </TelephoneNumbers>
                                                        <CompanyName>MyCompany</CompanyName>
                                                    </UserProfile>
                                                </User>
                                            </UserProfileResponse>
                    put:
                        description: Updates the information about user profile by unique user name. Note, that empty fields will work like delete.
                        body:
                            application/xml:
                                example:
                                    <UserProfile>
                                        <FirstName>J</FirstName>
                                        <LastName>M</LastName>
                                        <StreetAddress>
                                            <HouseNumber>345</HouseNumber>
                                        </StreetAddress>
                                        <TelephoneNumbers>
                                            <HomePhone>2027445599</HomePhone>
                                        </TelephoneNumbers>
                                        <CompanyName>MyCompany</CompanyName>
                                    </UserProfile>
                        responses:
                            200:
                                 description: The user profile has been successfully updated and displayed in the payload.
                                 body:
                                     application/xml:
                                          example:
                                              <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                              <UserProfileResponse>
                                                  <User>
                                                      <UserId>jbm</UserId>
                                                      <UserProfile>
                                                          <FirstName>J</FirstName>
                                                          <LastName>M</LastName>
                                                          <StreetAddress>
                                                              <HouseNumber>345</HouseNumber>
                                                          </StreetAddress>
                                                          <TelephoneNumbers>
                                                              <HomePhone>2027445599</HomePhone>
                                                          </TelephoneNumbers>
                                                          <CompanyName>MyCompany</CompanyName>
                                                      </UserProfile>
                                                  </User>
                                              </UserProfileResponse>
                            400:
                                description: The user don't put telephone number.
                                body:
                                    application/xml:
                                        example:
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <UserProfileResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12686</ErrorCode>
                                                    <Description>At least one telephone number must be provided.</Description>
                                                </ResponseStatus>
                                                <User>
                                                    <UserId>jbm</UserId>
                                                    <UserProfile>
                                                        <FirstName>J</FirstName>
                                                        <LastName>M</LastName>
                                                        <StreetAddress>
                                                            <HouseNumber>345</HouseNumber>
                                                        </StreetAddress>
                                                        <CompanyName>MyCompany</CompanyName>
                                                    </UserProfile>
                                                </User>
                                            </UserProfileResponse>
                /accounts: 
                    description: This resource retrieves information about accounts associated with user.
                    get:
                        description: Retrieves the information about accounts associated with user.
                        responses:
                            200:
                                description: The information has been successfully retrieved and displayed in the payload.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <UserAccountsResponse>
                                                <User>
                                                    <AccountList>
                                                        <Account>
                                                            <AccountId>123</AccountId>
                                                            <AccountName>Neustar</AccountName>
                                                        </Account>
                                                        <Account>
                                                            <AccountId>2</AccountId>
                                                            <AccountName>Google</AccountName>
                                                        </Account>
                                                    </AccountList>
                                                </User>
                                            </UserAccountsResponse>
                            404:
                                description: User not found.
                                body:
                                    application/xml:
                                        example: |
                                            <UserAccountsResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12000</ErrorCode>
                                                    <Description>User 'testing' does not exist</Description>
                                                </ResponseStatus>
                                                <User/>
                                            </UserAccountsResponse>
                            403:
                                description: User has system-wide scope.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <UserAccountsResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12079</ErrorCode>
                                                    <Description>Accounts cannot be associated with user that have system-wide scope</Description>
                                                </ResponseStatus>
                                                <User/>
                                            </UserAccountsResponse>
                    put:
                        description: Allows the user replace associated accounts.
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <AccountList>
                                        <Account>
                                            <AccountId>123</AccountId>
                                        </Account>
                                        <Account>
                                            <AccountId>1</AccountId>
                                        </Account>
                                    </AccountList>
                        responses:
                            200:
                                description: Replaced user accounts association.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <UserAccountsResponse>
                                                <User>
                                                    <UserId>testCreatingUser1</UserId>
                                                    <AccountList>
                                                        <Account>
                                                            <AccountId>123</AccountId>
                                                            <AccountName>Neustar</AccountName>
                                                        </Account>
                                                        <Account>
                                                            <AccountId>1</AccountId>
                                                            <AccountName>test1</AccountName>
                                                        </Account>
                                                    </AccountList>
                                                </User>
                                            </UserAccountsResponse>
                            404:
                                description: User not found.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <UserAccountsResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12000</ErrorCode>
                                                    <Description>User 'testing' does not exist</Description>
                                                </ResponseStatus>
                                                <User>
                                                    <UserId>testCreatingUser1</UserId>
                                                    <AccountList>
                                                        <Account>
                                                            <AccountId>123</AccountId>
                                                        </Account>
                                                        <Account>
                                                            <AccountId>2</AccountId>
                                                        </Account>
                                                    </AccountList>
                                                </User>
                                            </UserAccountsResponse>
                            422:
                                description: Some information is not correct.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <UserAccountsResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12020</ErrorCode>
                                                    <Description>Account '1' does not exist</Description>
                                                </ResponseStatus>
                                                <User>
                                                    <UserId>testCreatingUser1</UserId>
                                                    <AccountList>
                                                        <Account>
                                                            <AccountId>123</AccountId>
                                                        </Account>
                                                        <Account>
                                                            <AccountId>1</AccountId>
                                                        </Account>
                                                    </AccountList>
                                                </User>
                                            </UserAccountsResponse>
                            403:
                                description: Account scope user can add just own accounts.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <UserAccountsResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12689</ErrorCode>
                                                    <Description>Account(s) assigned to this user must be managed by the assigning user</Description>
                                                </ResponseStatus>
                                                <User>
                                                    <UserId>testCreatingUser1</UserId>
                                                    <AccountList>
                                                        <Account>
                                                            <AccountId>123</AccountId>
                                                        </Account>
                                                        <Account>
                                                            <AccountId>2</AccountId>
                                                        </Account>
                                                    </AccountList>
                                                </User>
                                            </UserAccountsResponse>
                    /accountid: 
                        description: This resource retrieves information about  account associated with user.
                        get:
                            description: Retrieves the information about user.
                            responses:
                                200:
                                    description: The information has been successfully retrieved and displayed in the payload.
                                    body:
                                        application/xml:
                                            example: |
                                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                <UserAccountResponse>
                                                    <User>
                                                        <AccountList>
                                                            <Account>
                                                                <AccountId>123</AccountId>
                                                                <AccountName>Neustar</AccountName>
                                                            </Account>
                                                        </AccountList>
                                                    </User>
                                                </UserAccountResponse>
                                404:
                                    description: User not found.
                                    body:
                                        application/xml:
                                            example: |
                                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                <UserAccountResponse>
                                                    <ResponseStatus>
                                                        <ErrorCode>12000</ErrorCode>
                                                        <Description>User 'testing' does not exist</Description>
                                                    </ResponseStatus>
                                                    <User>
                                                        <AccountList>
                                                            <Account>
                                                                <AccountId>123</AccountId>
                                                            </Account>
                                                        </AccountList>
                                                    </User>
                                                </UserAccountResponse>
                                403:
                                    description: User is not associated with account.
                                    body:
                                        application/xml:
                                            example: |
                                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                <UserAccountResponse>
                                                    <ResponseStatus>
                                                        <ErrorCode>12006</ErrorCode>
                                                        <Description>User 'testing' is not associated with account '1'</Description>
                                                    </ResponseStatus>
                                                    <User>
                                                        <AccountList>
                                                            <Account>
                                                                <AccountId>1</AccountId>
                                                            </Account>
                                                        </AccountList>
                                                    </User>
                                                </UserAccountResponse>
                        post:
                            description: Allows to add account to user.
                            body:
                                application/xml:
                                    example: empty body
                            responses:
                                201:
                                    description: Successfully added account to user.
                                    body:
                                        application/xml:
                                            example: |
                                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                <UserAccountResponse>
                                                    <User>
                                                        <AccountList>
                                                            <Account>
                                                                <AccountId>123</AccountId>
                                                                <AccountName>Neustar</AccountName>
                                                            </Account>
                                                        </AccountList>
                                                    </User>
                                                </UserAccountResponse>
                                200:
                                    description: Account already added to user.
                                    body:
                                        application/xml:
                                            example: |
                                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                <UserAccountResponse>
                                                    <User>
                                                        <AccountList>
                                                            <Account>
                                                                <AccountId>123</AccountId>
                                                                <AccountName>Neustar</AccountName>
                                                            </Account>
                                                        </AccountList>
                                                    </User>
                                                </UserAccountResponse>
                                403:
                                    description: Account scope user can add just own accounts.
                                    body:
                                        application/xml:
                                            example: |
                                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                <UserAccountResponse>
                                                    <ResponseStatus>
                                                        <ErrorCode>12689</ErrorCode>
                                                        <Description>Account(s) assigned to this user must be managed by the assigning user</Description>
                                                    </ResponseStatus>
                                                    <User>
                                                        <AccountList>
                                                            <Account>
                                                                <AccountId>1</AccountId>
                                                            </Account>
                                                        </AccountList>
                                                    </User>
                                                </UserAccountResponse>
                                404:
                                    description: Account not found.
                                    body:
                                        application/xml:
                                            example: |
                                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                <UserAccountResponse>
                                                    <ResponseStatus>
                                                        <ErrorCode>12020</ErrorCode>
                                                        <Description>Account '111' does not exist</Description>
                                                    </ResponseStatus>
                                                    <User>
                                                        <AccountList>
                                                            <Account>
                                                                <AccountId>111</AccountId>
                                                            </Account>
                                                        </AccountList>
                                                    </User>
                                                </UserAccountResponse>
                        delete:
                            description: Remove user account association.
                            body:
                                application/xml:
                                    example: empty body
                            responses:
                                200:
                                    description: User account association deleted.
                                    body:
                                        application/xml:
                                            example: empty body
                                404:
                                    description: Account not found.
                                    body:
                                        application/xml:
                                            example: |
                                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                <UserAccountResponse>
                                                    <ResponseStatus>
                                                        <ErrorCode>12020</ErrorCode>
                                                        <Description>Account '3' does not exist</Description>
                                                    </ResponseStatus>
                                                    <User>
                                                        <AccountList>
                                                            <Account>
                                                                <AccountId>3</AccountId>
                                                            </Account>
                                                        </AccountList>
                                                    </User>
                                                </UserAccountResponse>
                                403:
                                    description: User is not associated with account.
                                    body:
                                        application/xml:
                                            example: |
                                               <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                               <UserAccountResponse>
                                                   <ResponseStatus>
                                                       <ErrorCode>12006</ErrorCode>
                                                       <Description>User 'testing' is not associated with account '2'</Description>
                                                   </ResponseStatus>
                                                   <User>
                                                       <AccountList>
                                                           <Account>
                                                               <AccountId>2</AccountId>
                                                           </Account>
                                                       </AccountList>
                                                   </User>
                                               </UserAccountResponse>
                /roles: 
                    description: |
                        This resource retrieves information about roles to user relationship.
                    get:
                        responses:
                            200:
                                description: |
                                    Return all existing roles for user
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <LdapUserRolesResponse>
                                                <User>
                                                    <RoleList>
                                                        <Role>
                                                            <RoleId>test-role</RoleId>
                                                            <RoleSimpleName>Simple Name</RoleSimpleName>
                                                            <RoleDescription>555</RoleDescription>
                                                        </Role>
                                                        <Role>
                                                            <RoleId>test-1234</RoleId>
                                                            <RoleSimpleName>Simple Name</RoleSimpleName>
                                                            <RoleDescription>1234567</RoleDescription>
                                                        </Role>
                                                    </RoleList>
                                                </User>
                                            </LdapUserRolesResponse>
                    put:
                        description: Rewrites all existing roles, related to user.
                        body:
                            application/xml:
                                example:
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <RoleList>
                                            <Role>
                                                <RoleId>test-role</RoleId>
                                            </Role>
                                            <Role>
                                                <RoleId>test-1234</RoleId>
                                            </Role>
                                            <Role>
                                                <RoleId>report-editor</RoleId>
                                            </Role>
                                    </RoleList>
                        responses:
                            200:
                                 description: The user-roles relations has been successfully updated or created and displayed in the payload.
                                 body:
                                     application/xml:
                                         example:
                                              <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                              <LdapUserRolesResponse>
                                                    <User>
                                                        <UserId>vboginskiy</UserId>
                                                        <RoleList>
                                                            <Role>
                                                                <RoleId>test-role</RoleId>
                                                                <RoleSimpleName>Simple Name</RoleSimpleName>
                                                                <RoleDescription>555</RoleDescription>
                                                                <Internal>false</Internal>
                                                            </Role>
                                                            <Role>
                                                                <RoleId>test-1234</RoleId>
                                                                <RoleSimpleName>Simple Name</RoleSimpleName>
                                                                <RoleDescription>1234567</RoleDescription>
                                                                <Internal>false</Internal>
                                                            </Role>
                                                            <Role>
                                                                <RoleId>report-editor</RoleId>
                                                                <RoleSimpleName>Simple Name</RoleSimpleName>
                                                                <RoleDescription>123</RoleDescription>
                                                                <Internal>false</Internal>
                                                            </Role>
                                                        </RoleList>
                                                    </User>
                                              </LdapUserRolesResponse>
                            400:
                                 description: Data in body formed in wrong way, validation error appears.
                                 body:
                                     application/xml:
                                         example:
                                             <LdapUserRolesResponse>
                                                  <ResponseStatus>
                                                      <ErrorCode>1012</ErrorCode>
                                                      <Description>RoleId is too short. Min length 4 characters</Description>
                                                  </ResponseStatus>
                                                  <User>
                                                      <UserId>vboginskiy</UserId>
                                                      <RoleList>
                                                          <Role>
                                                              <RoleId>tes</RoleId>
                                                          </Role>
                                                          <Role>
                                                              <RoleId>test-1234</RoleId>
                                                          </Role>
                                                          <Role>
                                                              <RoleId>report-editor</RoleId>
                                                          </Role>
                                                      </RoleList>
                                                  </User>
                                             </LdapUserRolesResponse>
                            403:
                                 description: Update failed, some of roles cannot be associated with user.
                                 body:
                                     application/xml:
                                         example:
                                             <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                             <LdapUserRolesResponse>
                                                  <ResponseStatus>
                                                      <ErrorCode>12085</ErrorCode>
                                                      <Description>Some of role(s) '[test]' defined as internal. Internal roles cannot be associated to user 'vboginskiy' with scope 'Account'</Description>
                                                  </ResponseStatus>
                                                  <User>
                                                      <UserId>vboginskiy</UserId>
                                                      <RoleList>
                                                          <Role>
                                                              <RoleId>test</RoleId>
                                                              <RoleSimpleName>Simple Name</RoleSimpleName>
                                                              <RoleDescription>1234567</RoleDescription>
                                                              <Internal>true</Internal>
                                                          </Role>
                                                          <Role>
                                                              <RoleId>test-1234</RoleId>
                                                              <RoleSimpleName>Simple Name</RoleSimpleName>
                                                              <RoleDescription>1234567</RoleDescription>
                                                              <Internal>false</Internal>
                                                          </Role>
                                                          <Role>
                                                              <RoleId>report-editor</RoleId>
                                                              <RoleSimpleName>Simple Name</RoleSimpleName>
                                                              <RoleDescription>123</RoleDescription>
                                                              <Internal>false</Internal>
                                                          </Role>
                                                      </RoleList>
                                                  </User>
                                             </LdapUserRolesResponse>
                            422:
                                 description: Some of roles cannot be found.
                                 body:
                                     application/xml:
                                         example:
                                             <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                             <LdapUserRolesResponse>
                                                  <ResponseStatus>
                                                      <ErrorCode>12084</ErrorCode>
                                                      <Description>Some of your role(s) '[test1234]' do not exist</Description>
                                                  </ResponseStatus>
                                                  <User>
                                                      <UserId>vboginskiy</UserId>
                                                      <RoleList>
                                                          <Role>
                                                              <RoleId>test1234</RoleId>
                                                          </Role>
                                                          <Role>
                                                              <RoleId>test-1234</RoleId>
                                                          </Role>
                                                          <Role>
                                                              <RoleId>report-editor</RoleId>
                                                          </Role>
                                                      </RoleList>
                                                  </User>
                                             </LdapUserRolesResponse>
                    /{roleId}: 
                        description: This resource retrieves information about role to user relationship.
                        get:
                            description: Retrieves the information about permission by unique name, related to specific user.
                            responses:
                                200:
                                    description: The information has been successfully retrieved and displayed in the payload.
                                    body:
                                        application/xml:
                                            example:
                                                <LdapUserRoleResponse>
                                                    <User>
                                                        <RoleList>
                                                            <Role>
                                                                <RoleId>test-1234</RoleId>
                                                                <RoleDescription>1234567</RoleDescription>
                                                            </Role>
                                                        </RoleList>
                                                    </User>
                                                </LdapUserRoleResponse>
                                404:
                                    description: The user, role or user-to-role association does not exist.
                                    body:
                                        application/xml:
                                            example:
                                                <LdapUserRoleResponse>
                                                     <ResponseStatus>
                                                         <ErrorCode>12073</ErrorCode>
                                                         <Description>Role 'test-12345' does not exist</Description>
                                                     </ResponseStatus>
                                                     <User>
                                                         <UserId>vboginskiy</UserId>
                                                         <RoleList>
                                                             <Role>
                                                                 <RoleId>test-12345</RoleId>
                                                             </Role>
                                                         </RoleList>
                                                     </User>
                                                </LdapUserRoleResponse>
                                               <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                               <LdapUserRoleResponse>
                                                   <ResponseStatus>
                                                       <ErrorCode>12000</ErrorCode>
                                                       <Description>User 'vboginskiy1' does not exist</Description>
                                                   </ResponseStatus>
                                                   <User>
                                                       <UserId>vboginskiy1</UserId>
                                                       <RoleList>
                                                           <Role>
                                                               <RoleId>test-1234</RoleId>
                                                           </Role>
                                                       </RoleList>
                                                   </User>
                                               </LdapUserRoleResponse>
                                               <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                               <LdapUserRoleResponse>
                                                   <ResponseStatus>
                                                       <ErrorCode>12083</ErrorCode>
                                                       <Description>Role 'test-role-put-3' is not associated with user 'vboginskiy'</Description>
                                                   </ResponseStatus>
                                                   <User>
                                                       <UserId>vboginskiy</UserId>
                                                       <RoleList>
                                                           <Role>
                                                               <RoleId>test-role-put-3</RoleId>
                                                           </Role>
                                                       </RoleList>
                                                   </User>
                                               </LdapUserRoleResponse>
                        post:
                            description: Adds role to user.
                            responses:
                                201:
                                     description: The role has been successfully added to user.
                                     body:
                                         application/xml:
                                             example:
                                                 <LdapUserRoleResponse>
                                                     <User>
                                                         <UserId>suser</UserId>
                                                         <RoleList>
                                                             <Role>
                                                                 <RoleId>report-editor</RoleId>
                                                                 <RoleSimpleName>Simple Name</RoleSimpleName>
                                                                 <RoleDescription>123</RoleDescription>
                                                             </Role>
                                                             <Role>
                                                                 <RoleId>test-role</RoleId>
                                                                 <RoleSimpleName>Simple Name</RoleSimpleName>
                                                                 <RoleDescription>555</RoleDescription>
                                                             </Role>
                                                             <Role>
                                                                 <RoleId>test-role-put-3</RoleId>
                                                                 <RoleSimpleName>Simple Name</RoleSimpleName>
                                                                 <RoleDescription>1234567</RoleDescription>
                                                             </Role>
                                                             <Role>
                                                                 <RoleId>test-1234</RoleId>
                                                                 <RoleSimpleName>Simple Name</RoleSimpleName>
                                                                 <RoleDescription>1234567</RoleDescription>
                                                             </Role>
                                                         </RoleList>
                                                     </User>
                                                 </LdapUserRoleResponse>
                                200:
                                     description: The existing role-user relation is updated.
                                     body:
                                         application/xml:
                                             example:
                                                 <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                 <LdapUserRoleResponse>
                                                     <User>
                                                         <UserId>suser</UserId>
                                                         <RoleList>
                                                             <Role>
                                                                 <RoleId>report-editor</RoleId>
                                                                 <RoleSimpleName>Simple Name</RoleSimpleName>
                                                                 <RoleDescription>123</RoleDescription>
                                                             </Role>
                                                             <Role>
                                                                 <RoleId>test-role</RoleId>
                                                                 <RoleSimpleName>Simple Name</RoleSimpleName>
                                                                 <RoleDescription>555</RoleDescription>
                                                             </Role>
                                                             <Role>
                                                                 <RoleId>test-role-put-3</RoleId>
                                                                 <RoleSimpleName>Simple Name</RoleSimpleName>
                                                                 <RoleDescription>1234567</RoleDescription>
                                                             </Role>
                                                             <Role>
                                                                 <RoleId>test-1234</RoleId>
                                                                 <RoleSimpleName>Simple Name</RoleSimpleName>
                                                                 <RoleDescription>1234567</RoleDescription>
                                                             </Role>
                                                         </RoleList>
                                                     </User>
                                                 </LdapUserRoleResponse>
                                403:
                                     description: Create failed, role cannot be associated to certain user.
                                     body:
                                         application/xml:
                                             example:
                                                 <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                 <LdapUserRoleResponse>
                                                     <ResponseStatus>
                                                         <ErrorCode>12085</ErrorCode>
                                                         <Description>Some of role(s) '[admin-role]' defined as internal. Internal roles cannot be associated to user 'accountUser' with scope 'AccountAdmin' or 'Account'</Description>
                                                     </ResponseStatus>
                                                     <User>
                                                         <UserId>accountUser</UserId>
                                                         <RoleList>
                                                             <Role>
                                                                 <RoleId>admin-role</RoleId>
                                                             </Role>
                                                         </RoleList>
                                                     </User>
                                                 </LdapUserRoleResponse>
                        delete:
                            description: Removes specified role from user.
                            responses:
                                200:
                                    description: The role has been successfully removed from user.
                                404:
                                    description:
                                        The role is not related to certain user.
                                    body:
                                        application/xml:
                                            example:
                                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                <LdapUserRoleResponse>
                                                    <ResponseStatus>
                                                        <ErrorCode>12083</ErrorCode>
                                                        <Description>Role 'test' is not associated with user 'vboginskiy'</Description>
                                                    </ResponseStatus>
                                                    <User>
                                                        <UserId>vboginskiy</UserId>
                                                        <RoleList>
                                                            <Role>
                                                                <RoleId>test</RoleId>
                                                            </Role>
                                                        </RoleList>
                                                    </User>
                                                </LdapUserRoleResponse>
                /preferences: 
                    description: This resource retrieves information about preferences for single user.
                    get:
                        description: Retrieves all user preferences.
                        responses:
                            200:
                                description: The information has been successfully retrieved and displayed in the payload.
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <UserPreferencesResponse>
                                                <UserPreferences>
                                                    <UserPreference>
                                                        <PreferenceName>tnFormat</PreferenceName>
                                                        <PreferenceValue>E.164</PreferenceValue>
                                                    </UserPreference>
                                                    <UserPreference>
                                                        <PreferenceName>preferredPortal</PreferenceName>
                                                        <PreferenceValue>NEW</PreferenceValue>
                                                    </UserPreference>
                                                </UserPreferences>
                                            </UserPreferencesResponse>
                    put:
                        description: Updates preference list for single user.
                        body:
                                application/xml:
                                    example:
                                        <UserPreferences>
                                                <UserPreference>
                                                    <PreferenceName>tnFormat</PreferenceName>
                                                    <PreferenceValue>E.164</PreferenceValue>
                                                </UserPreference>
                                                <UserPreference>
                                                    <PreferenceName>preferredPortal</PreferenceName>
                                                    <PreferenceValue>NEW</PreferenceValue>
                                                </UserPreference>
                                        </UserPreferences>
                        responses:
                            200:
                                description: The information has been successfully updated and displayed in the payload.
                                body:
                                     application/xml:
                                        example:
                                            <LdapUserPreferencesResponse>
                                                <User>
                                                    <UserId>user</UserId>
                                                    <UserPreferences>
                                                        <UserPreference>
                                                            <PreferenceName>tnFormat</PreferenceName>
                                                            <PreferenceValue>E.164</PreferenceValue>
                                                        </UserPreference>
                                                        <UserPreference>
                                                            <PreferenceName>preferredPortal</PreferenceName>
                                                            <PreferenceValue>NEW</PreferenceValue>
                                                        </UserPreference>
                                                    </UserPreferences>
                                                </User>
                                            </LdapUserPreferencesResponse>
                            422:
                                description: The information was not processed and error appeared.
                                body:
                                    application/xml:
                                        example: |
                                            <LdapUserPreferencesResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12091</ErrorCode>
                                                    <Description>User preference 'tnFormat' value 'E.1641' is invalid. Valid values : '[E.164, 10D, 11D]'</Description>
                                                </ResponseStatus>
                                                <User>
                                                    <UserId>user</UserId>
                                                    <UserPreferences>
                                                        <UserPreference>
                                                            <PreferenceName>tnFormat</PreferenceName>
                                                            <PreferenceValue>E.1641</PreferenceValue>
                                                        </UserPreference>
                                                        <UserPreference>
                                                            <PreferenceName>preferredPortal</PreferenceName>
                                                            <PreferenceValue>NEW</PreferenceValue>
                                                        </UserPreference>
                                                    </UserPreferences>
                                                </User>
                                            </LdapUserPreferencesResponse>
                    post:
                        description: Creates user-preference relation if it doesn't exist.
                        body:
                            application/xml:
                                example: |
                                    <UserPreference>
                                        <PreferenceName>preferredPortal</PreferenceName>
                                        <PreferenceValue>OLD</PreferenceValue>
                                    </UserPreference>
                        responses:
                            201:
                                description: The relation has been successfully created and displayed in the payload.
                                body:
                                    application/xml:
                                        example: |
                                            <LdapUserPreferencesResponse>
                                                <User>
                                                    <UserId>user</UserId>
                                                    <UserPreferences>
                                                        <UserPreference>
                                                            <PreferenceName>tnFormat</PreferenceName>
                                                            <PreferenceValue>E.164</PreferenceValue>
                                                        </UserPreference>
                                                        <UserPreference>
                                                            <PreferenceName>preferredPortal</PreferenceName>
                                                            <PreferenceValue>NEW</PreferenceValue>
                                                        </UserPreference>
                                                    </UserPreferences>
                                                </User>
                                            </LdapUserPreferencesResponse>
                            409:
                                description: User preference already exists.
                                body:
                                    application/xml:
                                        example: |
                                            <LdapUserPreferenceResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12090</ErrorCode>
                                                    <Description>User 'user' already has preference 'preferredPortal'</Description>
                                                </ResponseStatus>
                                                <User>
                                                    <UserId>user</UserId>
                                                    <UserPreferences>
                                                        <UserPreference>
                                                            <PreferenceName>preferredPortal</PreferenceName>
                                                            <PreferenceValue>OLD</PreferenceValue>
                                                        </UserPreference>
                                                    </UserPreferences>
                                                </User>
                                            </LdapUserPreferenceResponse>
                            422:
                                description: Provided data in payload is incorrect.
                                body:
                                    application/xml:
                                        example: |
                                            <LdapUserPreferenceResponse>
                                                <ResponseStatus>
                                                    <ErrorCode>12092</ErrorCode>
                                                    <Description>User Preference 'preferredPortal1' does not exist</Description>
                                                </ResponseStatus>
                                                <User>
                                                    <UserId>user</UserId>
                                                    <UserPreferences>
                                                        <UserPreference>
                                                            <PreferenceName>preferredPortal1</PreferenceName>
                                                            <PreferenceValue>OLD</PreferenceValue>
                                                        </UserPreference>
                                                    </UserPreferences>
                                                </User>
                                            </LdapUserPreferenceResponse>
                    /{preferenceName}: 
                        description: This resource retrieves information about preference for single user.
                        get:
                            description: Retrieves user preference by name if it exists.
                            responses:
                                200:
                                    description: The information has been successfully retrieved and displayed in the payload.
                                    body:
                                        application/xml:
                                            example: |
                                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                <UserPreference>
                                                    <PreferenceName>tnFormat</PreferenceName>
                                                    <PreferenceValue>E.164</PreferenceValue>
                                                </UserPreference>
                                404:
                                     description: The preference does not exist.
                                     body:
                                         application/xml:
                                             example: |
                                                 <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                 <LdapUserPreferenceResponse>
                                                     <ResponseStatus>
                                                         <ErrorCode>12089</ErrorCode>
                                                         <Description>User 'user' does not have preference 'preferredPortal'</Description>
                                                     </ResponseStatus>
                                                     <User>
                                                         <UserId>user</UserId>
                                                         <UserPreferences>
                                                             <UserPreference>
                                                                 <PreferenceName>preferredPortal</PreferenceName>
                                                             </UserPreference>
                                                         </UserPreferences>
                                                     </User>
                                                 </LdapUserPreferenceResponse>
                        put:
                            description: Updates user-preference relation.
                            body:
                                application/xml:
                                    example: |
                                        <UserPreference>
                                            <PreferenceValue>OLD</PreferenceValue>
                                        </UserPreference>
                            responses:
                                200:
                                    description: The information has been successfully updated and displayed in the payload.
                                    body:
                                        application/xml:
                                            example: |
                                                <LdapUserPreferenceResponse>
                                                    <User>
                                                        <UserId>user</UserId>
                                                        <UserPreferences>
                                                            <UserPreference>
                                                                <PreferenceName>preferredPortal1</PreferenceName>
                                                                <PreferenceValue>OLD</PreferenceValue>
                                                            </UserPreference>
                                                        </UserPreferences>
                                                    </User>
                                                </LdapUserPreferenceResponse>
                                422:
                                    description: Provided data in payload is incorrect.
                                    body:
                                        application/xml:
                                            example: |
                                                <LdapUserPreferenceResponse>
                                                    <ResponseStatus>
                                                        <ErrorCode>12092</ErrorCode>
                                                        <Description>User Preference 'preferredPortal1' does not exist</Description>
                                                    </ResponseStatus>
                                                    <User>
                                                        <UserId>user</UserId>
                                                        <UserPreferences>
                                                            <UserPreference>
                                                                <PreferenceName>preferredPortal1</PreferenceName>
                                                                <PreferenceValue>OLD</PreferenceValue>
                                                            </UserPreference>
                                                        </UserPreferences>
                                                    </User>
                                                </LdapUserPreferenceResponse>
                        delete:
                            description: Removes user-preference relation.
                            responses:
                                200:
                                    description: The information has been successfully deleted.
                                404:
                                    description: User preference does not exist.
                                    body:
                                        application/xml:
                                            example: |
                                                <LdapUserPreferenceResponse>
                                                    <ResponseStatus>
                                                        <ErrorCode>12089</ErrorCode>
                                                        <Description>User 'user' does not have preference 'preferredPortal'</Description>
                                                    </ResponseStatus>
                                                    <User>
                                                        <UserId>user</UserId>
                                                        <UserPreferences>
                                                            <UserPreference>
                                                                <PreferenceName>preferredPortal</PreferenceName>
                                                            </UserPreference>
                                                        </UserPreferences>
                                                    </User>
                                                </LdapUserPreferenceResponse>
                /logs: 
                    description: This resource retrieves information about user access activity.
                    get:
                        description: Retrieves the information about user access activity in date range.
                        queryParameters:
                            page:
                                description: The number of page
                                type: integer
                                example: 2
                                required: false
                            size:
                                description: The number of items to include in a page.
                                type: integer
                                example: 100
                                required: false
                            startDate:
                                description: For Date-based searches, the starting date of a date range that will be used to find events that were created within the date range.  It is in the form yyyy-MM-dd.
                                type: string
                                example: 2013-10-22
                                required: true
                            endDate:
                                description: For Date-based searches, the ending date of a date range that will be used to find events that were created within the date range.  It is in the form yyyy-MM-dd.
                                type: string
                                example: 2013-10-25
                                required: true
                        responses:
                            200:
                                description: The information has been successfully retrieved and displayed in the payload.
                                body:
                                    application/xml:
                                        example:
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <UserEventLog>
                                                <Links>
                                                    <first>Link=&lt;http://admin.localhost:8080/iris/usermanagement/dashboard/users/testUser1/logs?startDate=2016-05-04&amp;endDate=2016-05-06&amp;page=1&amp;size=2&gt;;rel="first";</first>
                                                    <next>Link=&lt;http://admin.localhost:8080/iris/usermanagement/dashboard/users/testUser1/logs?startDate=2016-05-04&amp;endDate=2016-05-06&amp;page=2&amp;size=2&gt;;rel="next";</next>
                                                </Links>
                                                <UserEvents>
                                                    <UserEvent>
                                                        <EventId>23</EventId>
                                                        <EventDate>2016-05-06T18:18:44.473Z</EventDate>
                                                        <InvokingUser>systemUser</InvokingUser>
                                                        <Event>USER_SETTINGS_UPDATE</Event>
                                                        <Success>false</Success>
                                                    </UserEvent>
                                                    <UserEvent>
                                                        <EventId>19</EventId>
                                                        <EventDate>2016-05-06T18:18:02.586Z</EventDate>
                                                        <InvokingUser>systemUser</InvokingUser>
                                                        <Event>USER_SETTINGS_UPDATE</Event>
                                                        <Success>true</Success>
                                                        <ContainDetails>true</ContainDetails>
                                                    </UserEvent>
                                                </UserEvents>
                                            </UserEventLog>
                            400:
                                description: Incorrect date range.
                                body:
                                    application/xml:
                                        example:
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <UserEventLog>
                                                <ResponseStatus>
                                                    <ErrorCode>15509</ErrorCode>
                                                    <Description>'startDate' must not be after 'endDate'</Description>
                                                </ResponseStatus>
                                            </UserEventLog>
                    /{eventId}: 
                        description: This resource retrieves information about user detail event.
                        get:
                            description: Retrieves the details of a change, with prior and new values as appropriate.
                            responses:
                                200:
                                    description: The information has been successfully retrieved and displayed in the payload.
                                    body:
                                        application/xml:
                                            example:
                                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                <UserActivityEventDetailsResponse>
                                                    <UserActivityEventDetails>
                                                        <UserEvent/>
                                                        <BeforeChanges>
                                                            <UserId>testUser1</UserId>
                                                            <RoleList/>
                                                        </BeforeChanges>
                                                        <AfterChanges>
                                                            <UserId>testUser1</UserId>
                                                            <RoleList>
                                                                <Role>
                                                                    <RoleId>default</RoleId>
                                                                </Role>
                                                                <Role>
                                                                    <RoleId>LsrManagement</RoleId>
                                                                </Role>
                                                            </RoleList>
                                                        </AfterChanges>
                                                    </UserActivityEventDetails>
                                                </UserActivityEventDetailsResponse>
                                404:
                                    description: Event is not associated with impacted user or does not exist.
                                    body:
                                        application/xml:
                                            example:
                                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                <UserActivityEventDetailsResponse>
                                                    <ResponseStatus>
                                                        <ErrorCode>12095</ErrorCode>
                                                        <Description>User event with id '315' is not associated with user 'testUser1'</Description>
                                                    </ResponseStatus>
                                                    <UserActivityEventDetails>
                                                        <UserEvent>
                                                            <EventId>315</EventId>
                                                        </UserEvent>
                                                    </UserActivityEventDetails>
                                                </UserActivityEventDetailsResponse>
                                204:
                                    description: A 204 No Content response indicates that no changes of user have been exist in event.  There is no body associated with this response.
        /roles: 
            description: |
                This resource retrieves information about roles.
            get:
                responses:
                    200:
                        description: |
                            Return all existed roles
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <LdapRolesResponse>
                                        <RoleList>
                                            <Role>
                                                <RoleId>report-editor</RoleId>
                                                <RoleSimpleName>Simple Name</RoleSimpleName>
                                                <RoleDescription>report editor role</RoleDescription>
                                                <Internal>false</Internal>
                                            </Role>
                                            <Role>
                                                <RoleId>admin-role</RoleId>
                                                <RoleSimpleName>Simple Name</RoleSimpleName>
                                                <RoleDescription>Admin role</RoleDescription>
                                                <Internal>true</Internal>
                                            </Role>
                                        </RoleList>
                                    </LdapRolesResponse>
            /{roleId}: 
                description: This resource retrieves information about role.
                get:
                    description: Retrieves the information about role by unique role name.
                    responses:
                        200:
                            description: The information has been successfully retrieved and displayed in the payload.
                            body:
                                application/xml:
                                    example:
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <LdapRoleResponse>
                                            <Role>
                                                <RoleId>report-editor</RoleId>
                                                <RoleSimpleName>Simple Name</RoleSimpleName>
                                                <RoleDescription>123</RoleDescription>
                                                <Internal>false</Internal>
                                            </Role>
                                        </LdapRoleResponse>
                        404:
                            description: The role does not exist.
                            body:
                                application/xml:
                                    example:
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <LdapRoleResponse>
                                            <ResponseStatus>
                                                <ErrorCode>12070</ErrorCode>
                                                <Description>Role 'report-editor1' does not exist</Description>
                                            </ResponseStatus>
                                        </LdapRoleResponse>
                put:
                    description: Updates the information for role by unique role name or creates role, if it doesn't exist.
                    body:
                        application/xml:
                            example:
                                <Role>
                                    <Internal>true</Internal>
                                    <RoleSimpleName>Simple Name</RoleSimpleName>
                                    <RoleDescription>Some role description, that describes role nature</RoleDescription>
                                </Role>
                    responses:
                        200:
                             description: The role has been successfully updated or created and displayed in the payload.
                             body:
                                 application/xml:
                                     example:
                                         <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                         <LdapRoleResponse>
                                             <Role>
                                                 <RoleId>admin-role</RoleId>
                                                 <RoleSimpleName>Simple Name</RoleSimpleName>
                                                 <RoleDescription>admin role</RoleDescription>
                                                 <Internal>true</Internal>
                                             </Role>
                                         </LdapRoleResponse>
                delete:
                    description: Removes specified role.
                    responses:
                        200:
                            description: The role has been successfully removed.
                        404:
                            description:
                                The role does not exist.
                            body:
                                application/xml:
                                    example:
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <LdapRoleResponse>
                                            <ResponseStatus>
                                                <ErrorCode>12070</ErrorCode>
                                                <Description>Role 'admin-role' does not exist</Description>
                                            </ResponseStatus>
                                        </LdapRoleResponse>
                /permissions: 
                    description: |
                        This resource retrieves information about permissions to role relationship.
                    get:
                        responses:
                            200:
                                description: |
                                    Return all existing permissions for role
                                body:
                                    application/xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                            <LdapRolePermissionsResponse>
                                                <Role>
                                                    <PermissionList>
                                                        <Permission>
                                                            <PermissionId>report-list-reports</PermissionId>
                                                            <PermissionDescription>Default Description</PermissionDescription>
                                                            <Internal>false</Internal>
                                                        </Permission>
                                                        <Permission>
                                                            <PermissionId>report-retrieve-file-9</PermissionId>
                                                            <Internal>true</Internal>
                                                        </Permission>
                                                        <Permission>
                                                            <PermissionId>report-retrieve-file-8</PermissionId>
                                                            <PermissionDescription>123</PermissionDescription>
                                                            <Internal>true</Internal>
                                                        </Permission>
                                                        <Permission>
                                                            <PermissionId>test-permission-put-1</PermissionId>
                                                            <PermissionDescription>123</PermissionDescription>
                                                            <Internal>true</Internal>
                                                        </Permission>
                                                    </PermissionList>
                                                </Role>
                                            </LdapRolePermissionsResponse>
                    put:
                        description: Rewrites all existing permissions, related to role.
                        body:
                            application/xml:
                                example:
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <PermissionList>
                                                <Permission>
                                                    <PermissionId>report-retrieve-file-9</PermissionId>
                                                </Permission>
                                                <Permission>
                                                    <PermissionId>report-retrieve-file-8</PermissionId>
                                                </Permission>
                                    </PermissionList>
                        responses:
                            200:
                                 description: The role has been successfully updated or created and displayed in the payload.
                                 body:
                                     application/xml:
                                         example:
                                              <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                              <LdapRolePermissionsResponse>
                                                  <Role>
                                                      <RoleId>test-role</RoleId>
                                                      <PermissionList>
                                                          <Permission>
                                                              <PermissionId>report-retrieve-file-9</PermissionId>
                                                          </Permission>
                                                          <Permission>
                                                              <PermissionId>report-retrieve-file-8</PermissionId>
                                                          </Permission>
                                                      </PermissionList>
                                                  </Role>
                                              </LdapRolePermissionsResponse>
                            400:
                                 description: Data in body formed in wrong way, validation error appears.
                                 body:
                                     application/xml:
                                         example:
                                             <LdapRolePermissionsResponse>
                                                 <ResponseStatus>
                                                     <ErrorCode>1012</ErrorCode>
                                                     <Description>PermissionId is too short. Min length 4 characters</Description>
                                                 </ResponseStatus>
                                                 <Role>
                                                     <RoleId>test-role</RoleId>
                                                     <PermissionList>
                                                         <Permission>
                                                             <PermissionId>rep</PermissionId>
                                                         </Permission>
                                                         <Permission>
                                                             <PermissionId>report-retrieve-file-9</PermissionId>
                                                         </Permission>
                                                         <Permission>
                                                             <PermissionId>report-retrieve-file-8</PermissionId>
                                                         </Permission>
                                                     </PermissionList>
                                                 </Role>
                                             </LdapRolePermissionsResponse>
                            403:
                                 description: Update failed, some of permissions cannot be associated with role.
                                 body:
                                     application/xml:
                                         example:
                                             <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                             <LdapRolePermissionsResponse>
                                                 <ResponseStatus>
                                                     <ErrorCode>12082</ErrorCode>
                                                     <Description>Some of permission(s) '[report-retrieve-file-8]' defined as internal. Internal permissions cannot be associated to external 'test-role' role</Description>
                                                 </ResponseStatus>
                                                 <Role>
                                                     <RoleId>test-role</RoleId>
                                                     <PermissionList>
                                                         <Permission>
                                                             <PermissionId>report-create-definition</PermissionId>
                                                             <Internal>false</Internal>
                                                         </Permission>
                                                         <Permission>
                                                             <PermissionId>report-retrieve-file-8</PermissionId>
                                                             <PermissionDescription>123</PermissionDescription>
                                                             <Internal>true</Internal>
                                                         </Permission>
                                                     </PermissionList>
                                                 </Role>
                                             </LdapRolePermissionsResponse>
                            422:
                                 description: Some of permissions cannot be found.
                                 body:
                                     application/xml:
                                         example:
                                             <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                             <LdapRolePermissionsResponse>
                                                 <ResponseStatus>
                                                     <ErrorCode>12076</ErrorCode>
                                                     <Description>Some of your permission(s) '[report-retrieve-file-81]' do not exist</Description>
                                                 </ResponseStatus>
                                                 <Role>
                                                     <RoleId>test-role</RoleId>
                                                     <PermissionList>
                                                         <Permission>
                                                             <PermissionId>report-retrieve-file-81</PermissionId>
                                                         </Permission>
                                                     </PermissionList>
                                                 </Role>
                                             </LdapRolePermissionsResponse>
                    /{permissionId}: 
                        description: This resource retrieves information about permission to role relationship.
                        get:
                            description: Retrieves the information about permission by unique name, related to specific role.
                            responses:
                                200:
                                    description: The information has been successfully retrieved and displayed in the payload.
                                    body:
                                        application/xml:
                                            example:
                                                <LdapRolePermissionResponse>
                                                    <Role>
                                                        <RoleId>test-role</RoleId>
                                                        <PermissionList>
                                                            <Permission>
                                                                <PermissionId>report-retrieve-file-9</PermissionId>
                                                                <Internal>true</Internal>
                                                            </Permission>
                                                        </PermissionList>
                                                    </Role>
                                                </LdapRolePermissionResponse>
                                404:
                                    description: The role or permission does not exist.
                                    body:
                                        application/xml:
                                            example:
                                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                <LdapRolePermissionResponse>
                                                    <ResponseStatus>
                                                        <ErrorCode>12069</ErrorCode>
                                                        <Description>Permission 'report-create-definition1' does not exist in role 'test-role'</Description>
                                                    </ResponseStatus>
                                                    <Role>
                                                        <RoleId>test-role</RoleId>
                                                        <PermissionList>
                                                            <Permission>
                                                                <PermissionId>report-create-definition1</PermissionId>
                                                            </Permission>
                                                        </PermissionList>
                                                    </Role>
                                                </LdapRolePermissionResponse>
                                               <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                               <LdapRolePermissionResponse>
                                                   <ResponseStatus>
                                                       <ErrorCode>12073</ErrorCode>
                                                       <Description>Role 'test-role1' does not exist</Description>
                                                   </ResponseStatus>
                                                   <Role>
                                                       <RoleId>test-role1</RoleId>
                                                       <PermissionList>
                                                           <Permission>
                                                               <PermissionId>report-create-definition1</PermissionId>
                                                           </Permission>
                                                       </PermissionList>
                                                   </Role>
                                               </LdapRolePermissionResponse>
                        post:
                            description: Adds permission to role.
                            responses:
                                201:
                                     description: The permission has been successfully added to role.
                                     body:
                                         application/xml:
                                             example:
                                                 <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                 <LdapRolePermissionResponse>
                                                     <Role>
                                                         <RoleId>test-role</RoleId>
                                                         <PermissionList>
                                                             <Permission>
                                                                 <PermissionId>report-retrieve-file-9</PermissionId>
                                                             </Permission>
                                                             <Permission>
                                                                 <PermissionId>report-retrieve-file-8</PermissionId>
                                                             </Permission>
                                                             <Permission>
                                                                 <PermissionId>test-permission-post</PermissionId>
                                                             </Permission>
                                                         </PermissionList>
                                                     </Role>
                                                 </LdapRolePermissionResponse>
                                200:
                                     description: The existing permission-role relation was updated.
                                     body:
                                         application/xml:
                                             example:
                                                 <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                 <LdapRolePermissionResponse>
                                                      <Role>
                                                          <RoleId>test-role</RoleId>
                                                          <PermissionList>
                                                              <Permission>
                                                                  <PermissionId>report-retrieve-file-9</PermissionId>
                                                              </Permission>
                                                              <Permission>
                                                                  <PermissionId>report-retrieve-file-8</PermissionId>
                                                              </Permission>
                                                              <Permission>
                                                                  <PermissionId>test-permission-post</PermissionId>
                                                              </Permission>
                                                          </PermissionList>
                                                      </Role>
                                                  </LdapRolePermissionResponse>
                                403:
                                     description: Create failed, permission cannot be associated to certain role.
                                     body:
                                         application/xml:
                                             example:
                                                 <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                 <LdapRolePermissionResponse>
                                                     <ResponseStatus>
                                                         <ErrorCode>12082</ErrorCode>
                                                         <Description>Some of permission(s) '[report-retrieve-file-5]' defined as internal. Internal permissions cannot be associated to external 'test-role' role</Description>
                                                     </ResponseStatus>
                                                     <Role>
                                                         <RoleId>test-role</RoleId>
                                                         <PermissionList>
                                                             <Permission>
                                                                 <PermissionId>report-retrieve-file-5</PermissionId>
                                                                 <PermissionDescription>123</PermissionDescription>
                                                                 <Internal>true</Internal>
                                                             </Permission>
                                                         </PermissionList>
                                                     </Role>
                                                 </LdapRolePermissionResponse>
                        delete:
                            description: Removes specified permission from role.
                            responses:
                                200:
                                    description: The permission has been successfully removed from role.
                                404:
                                    description:
                                        The permission does not exist in certain role.
                                    body:
                                        application/xml:
                                            example:
                                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                                <LdapRolePermissionResponse>
                                                    <ResponseStatus>
                                                        <ErrorCode>12069</ErrorCode>
                                                        <Description>Permission 'report-list-report-details' does not exist in role 'test-role'</Description>
                                                    </ResponseStatus>
                                                    <Role>
                                                        <RoleId>test-role</RoleId>
                                                        <PermissionList>
                                                            <Permission>
                                                                <PermissionId>report-list-report-details</PermissionId>
                                                            </Permission>
                                                        </PermissionList>
                                                    </Role>
                                                </LdapRolePermissionResponse>
        /accounts: 
            description: |
                This resource retrieves information about accounts.
            get:
                queryParameters:
                    suggestions:
                        description: The text on which to search
                        type: string
                        example: name
                        required: false
                    page:
                        description: The number of page
                        type: integer
                        example: 2
                        required: false
                    size:
                        description: The number of items to include in a page.
                        type: integer
                        example: 100
                        required: false
                responses:
                    200:
                        description: |
                            Return all existed accounts
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <LdapAccountsResponse>
                                        <AccountList>
                                            <totalCount>10</totalCount>
                                            <Account>
                                                <AccountId>1</AccountId>
                                                <AccountName>OneCompany</AccountName>
                                            </Account>
                                            <Account>
                                                <AccountId>2</AccountId>
                                                <AccountName>Test Republic Wireless</AccountName>
                                            </Account>
                                            <Account>
                                                <AccountId>753</AccountId>
                                                <AccountName>Bandwidth CLEC</AccountName>
                                            </Account>
                                        </AccountList>
                                    </LdapAccountsResponse>
            /{accountId}: 
                description: This resource retrieves information about account.
                get:
                    description: Retrieves the information about account by unique account id.
                    responses:
                        200:
                            description: The information has been successfully retrieved and displayed in the payload.
                            body:
                                application/xml:
                                    example:
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <LdapAccountResponse>
                                            <Account>
                                                <AccountId>5000056</AccountId>
                                                <AccountName>Comtel Connect LLC</AccountName>
                                            </Account>
                                        </LdapAccountResponse>
                        404:
                            description: The account does not exist.
                            body:
                                application/xml:
                                    example:
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <LdapAccountResponse>
                                            <ResponseStatus>
                                                <ErrorCode>12020</ErrorCode>
                                                <Description>Account '500005' does not exist</Description>
                                            </ResponseStatus>
                                            <Account>
                                                <AccountId>500005</AccountId>
                                            </Account>
                                        </LdapAccountResponse>
        /validation: 
            description: |
                This resource provides capability to validate that an email address is owned by the intended party. Email validation is required for newly created user and after already validated user updated an email, or to communicate to user the password reset link. This resource and its subresources don't need authentication.
            get:
                description: Determines whether a key associated with specified userId exists in the system. Searches only among keys created in scope of new user creation or email validation processes. Unlike all other requests under current resource, you need to authenticate to make this one.
                queryParameters:
                    userId:
                        type: string
                        example: testUser
                        required: true
                responses:
                    200:
                        description: The key exists.
                    404:
                        description: The key is not present.
            post:
                description: Initiates a validation action by creating a key, and indicating the validation work-flow that should be initiated. Created key is associated either with userId or email depending on validation action.
                body:
                    application/xml:
                        example: |
                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                            <ValidationRequest>
                                <!-- used to declare what the key is used for -->
                                <Trigger>[passwordreset|emailvalidation]</Trigger>
                                <!-- userid for emailvalidation, email for passwordreset -->
                                <Email>test@bandwidth.com</Email>
                                <Userid>testUser</Userid>
                            </ValidationRequest>
                responses:
                    200:
                        description: Always (except for syntactically invalid payloads). Any attempt to breach the security model will not be able to tell success from failure.
            /{key}: 
                description: This resource is used to check key presence in the system and to initiate a validation action that the key was created for.
                get:
                    description: Determines whether the key exists in the system.
                    responses:
                        200:
                            description: The key exists.
                        404:
                            description: The key is not present.
                put:
                    description: Validates the key providing user secrets if needed.
                    body:
                        application/xml:
                            example: |
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <ValidationRequest>
                                    <FirstName>John</FirstName>
                                    <LastName>Does</LastName>
                                    <PhoneNumber>2315342323</PhoneNumber>
                                    <!-- used in conjunction with password reset -->
                                    <!-- not used in validation of the email -->
                                    <Password>qwerty</Password>
                                </ValidationRequest>
                    responses:
                        200:
                            description: Key has been validated. Response body is empty for password recovery, but contains additional information after successful email validation.
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <ValidationResponse>
                                            <!-- an email validated with this request -->
                                            <Email>test@bandwidth.com</Email>
                                            <!-- indicates whether current user has password -->
                                            <PasswordState>[none|current]</PasswordState>
                                        </ValidationResponse>
                        404:
                            description: The key is not present in the system.
                        400:
                            description: |
                                The key is present but validation failed because of one of reasons:
                                <ul>
                                    <li>the key is associated with userId that doesn't exist in the system at the moment (no payload)</li>
                                    <li>the key is associated with email but there is no user with such email in the system at the moment (no payload)</li>
                                    <li>you have exceeded maximum number of validation attempts</li>
                                    <li>some required user secret is missing in payload</li>
                                    <li>some provided user secret doesn't match</li>
                                </ul>
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <ValidationError>
                                            <Error>
                                                <ErrorCode>12714</ErrorCode>
                                                <Description>User information does not match</Description>
                                            </Error>
                                        </ValidationError>
    /migration: 
        description: This resource manage migration process
        get:
            description: Retrieve data about the migration.
            queryParameters:
                    accountId:
                        description: This is the account about which we found migration information
                        type: integer
                        example: 9900012
                        repeat: true
                        required: true
            responses:
                200:
                    description: The information has been successfully retrieved and displayed in the payload.
                    body:
                        application/xml:
                            example: |
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <LdapUserMigrationResponse>
                                    <MigrationStatus>
                                        <MigratedAccount>
                                            <AccountId>9900012</AccountId>
                                            <MigratedUsers>
                                                <UserId>wandedemo_user</UserId>
                                                <UserId>bwc_user</UserId>
                                                <UserId>customer2</UserId>
                                            </MigratedUsers>
                                            <UnMigratedUsers/>
                                        </MigratedAccount>
                                        <MigratedAccount>
                                            <AccountId>9900040</AccountId>
                                            <MigratedUsers>
                                                <UserId>ipc_test</UserId>
                                                <UserId>customer2</UserId>
                                                <UserId>broldan</UserId>
                                            </MigratedUsers>
                                            <UnMigratedUsers/>
                                        </MigratedAccount>
                                    </MigrationStatus>
                                </LdapUserMigrationResponse>
                400:
                    description: AccountId is required and should be valid.
                    body:
                        application/xml:
                            example: |
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <LdapUserMigrationResponse>
                                    <ResponseStatus>
                                        <ErrorCode>1002</ErrorCode>
                                        <Description>accountId must be a non-negative number</Description>
                                    </ResponseStatus>
                                </LdapUserMigrationResponse>
        post:
            description: Run migration of users from MySQL to LDAP.
            queryParameters:
                    accountId:
                        description: This is the account on which users will be migrated
                        type: integer
                        example: 9900012
                        repeat: true
                        required: true
            responses:
                201:
                    description: migration was successfully
                400:
                    description: AccountId is required and should be valid.
                    body:
                        application/xml:
                            example: |
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <LdapUserMigrationResponse>
                                    <ResponseStatus>
                                        <ErrorCode>1002</ErrorCode>
                                        <Description>accountId must be a non-negative number</Description>
                                    </ResponseStatus>
                                </LdapUserMigrationResponse>
    /adminmigration: 
        description: This resource manage admin migration process
        get:
            description: Retrieve data about the migration status of the user or users specified in the queryParameters.
            queryParameters:
                    userId:
                        description: This is the users about which we found migration information
                        type: string
                        example: jbm
                        repeat: true
                        required: true
            responses:
                200:
                    description: The information has been successfully retrieved and displayed in the payload.
                    body:
                        application/xml:
                            example: |
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <LdapAdminUserMigrationResponse>
                                    <AdminUserMigrationStatus>
                                        <MigratedUsers>
                                            <UserId>customer2</UserId>
                                        </MigratedUsers>
                                        <UnMigratedAdminUsers>
                                            <UserId>jbm</UserId>
                                        </UnMigratedAdminUsers>
                                        <UnMigratedAccountUsers>
                                            <UserId>jbmNonAdmin</UserId>
                                        </UnMigratedAccountUsers>
                                        <InvalidUsers>
                                            <UserId>team_ua</UserId>
                                        </InvalidUsers>
                                    </AdminUserMigrationStatus>
                                </LdapAdminUserMigrationResponse>
                400:
                    description: userId is required.
                    body:
                        application/xml:
                            example: |
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <LdapAdminUserMigrationResponse>
                                    <ResponseStatus>
                                        <ErrorCode>1003</ErrorCode>
                                        <Description>userId is required</Description>
                                    </ResponseStatus>
                                </LdapAdminUserMigrationResponse>
        post:
            description: Run migration of admin users from MySQL to LDAP.
            queryParameters:
                    userId:
                        description: This is the users that will be migrated
                        type: string
                        example: jbm
                        repeat: true
                        required: true
            responses:
                201:
                    description: migration was successfully
                400:
                    description: userId is required and the migration request will fail unless all of the requested users are valid un-migrated admin users
                    body:
                        application/xml:
                            example: |
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <LdapAdminUserMigrationResponse>
                                    <ResponseStatus>
                                        <Description>Please check your input parameters.</Description>
                                    </ResponseStatus>
                                    <AdminUserMigrationStatus>
                                        <MigratedUsers>
                                            <UserId>customer2</UserId>
                                        </MigratedUsers>
                                        <UnMigratedAdminUsers>
                                            <UserId>jbm</UserId>
                                        </UnMigratedAdminUsers>
                                        <UnMigratedAccountUsers>
                                            <UserId>jbmNonAdmin</UserId>
                                        </UnMigratedAccountUsers>
                                    </AdminUserMigrationStatus>
                                </LdapAdminUserMigrationResponse>
/endpoints: 
    description: |
        Straightforward API to retrieve information about JAX-RS service endpoints.
    get:
        description: |
            Retrieve information about one or more API endpoints with related server name, server path and resources.
            All search parameters are compatible with all other search parameters.
        queryParameters:
            httpMethod:
                description: Parameter will restrict the search result to the specific http method.
                type: string
                example: POST
                enum: [GET, POST, PUT, DELETE]
            authorized:
                description: Flag allows to find all authorized or non-authorized endpoints.
                type: boolean
                example: true
            userScope:
                description: Parameter was used during authorization setup.
                type: string
                example: ACCOUNT
                enum: [SYSTEM, ALL, ACCOUNT_ADMIN, ACCOUNT]
            ignoreAccountId:
                description: Flag was used during authorization setup.
                type: boolean
                example: true
            externalAccess:
                description: Flag was used during authorization setup.
                type: boolean
                example: false
        responses:
            200:
                body:
                    application/xml:
                        example: |
                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                            <EndpointResponse>
                                <ResourceCount>482</ResourceCount>
                                <Endpoints>
                                    <Endpoint>
                                        <ServerName>AccountAssociatedTnOrderHistoryRestApi</ServerName>
                                        <ServerPath>/accounts</ServerPath>
                                        <Resources>
                                            <Resource>
                                                <Method>GET</Method>
                                                <Path>//{accountId}/orders/{orderId}/history</Path>
                                            </Resource>
                                            <Resource>
                                                <Method>GET</Method>
                                                <Path>//{accountId}/orders/totals</Path>
                                            </Resource>
                                            <Resource>
                                                <Method>GET</Method>
                                                <Path>//{accountId}/orders/{orderId}</Path>
                                            </Resource>
                                            <Resource>
                                                <Method>GET</Method>
                                                <Path>//{accountId}/orders</Path>
                                            </Resource>
                                            <Resource>
                                                <Method>GET</Method>
                                                <Path>//{accountId}/sites/{siteId}/orders/{orderId}/tns</Path>
                                            </Resource>
                                            <Resource>
                                                <Method>GET</Method>
                                                <Path>//{accountId}/orders/{orderId}/tns</Path>
                                            </Resource>
                                            <Resource>
                                                <Method>GET</Method>
                                                <Path>//{accountId}/orders/{orderId}/areaCodes</Path>
                                            </Resource>
                                            <Resource>
                                                <Method>GET</Method>
                                                <Path>//{accountId}/orders/{orderId}/npaNxx</Path>
                                            </Resource>
                                            <Resource>
                                                <Method>GET</Method>
                                                <Path>//{accountId}/sites/{siteId}/orders</Path>
                                            </Resource>
                                            <Resource>
                                                <Method>GET</Method>
                                                <Path>//{accountId}/sites/{siteId}/orders/{orderId}</Path>
                                            </Resource>
                                            <Resource>
                                                <Method>GET</Method>
                                                <Path>//{accountId}/orders/{orderId}/totals</Path>
                                            </Resource>
                                        </Resources>
                                    </Endpoint>
                                    <Endpoint>
                                        <ServerName>AccountProductRestApi</ServerName>
                                        <ServerPath>/admin/accounts/products</ServerPath>
                                        <Resources>
                                            <Resource>
                                                <Method>GET</Method>
                                                <Path>/accounts/{accountId}/products</Path>
                                            </Resource>
                                            <Resource>
                                                <Method>GET</Method>
                                                <Path>/accounts/{accountId}/products/{productName}</Path>
                                            </Resource>
                                            <Resource>
                                                <Method>POST</Method>
                                                <Path>/accounts/{accountId}/products</Path>
                                            </Resource>
                                            <Resource>
                                                <Method>PUT</Method>
                                                <Path>/accounts/{accountId}/products/{productName}</Path>
                                            </Resource>
                                        </Resources>
                                    </Endpoint>
                                    ...SNIP...
                                    <Endpoint>
                                        <ServerName>VirtualTelephoneNumberRestApi</ServerName>
                                        <ServerPath>/virtualinventory/numbers</ServerPath>
                                        <Resources>
                                            <Resource>
                                                <Method>GET</Method>
                                                <Path>/accounts/{accountId}/products/vi/numbers/</Path>
                                            </Resource>
                                        </Resources>
                                    </Endpoint>
                                </Endpoints>
                            </EndpointResponse>
/externalTns: 
    description: |
        The information below captures the REST endpoint URL and Payloads that are used to install or remove customer provided external telephone numbers from the Bandwidth Dashboard.
        <br>
        This API has been developed based on similar existing functionality available in the Bandwidth Dashboard, but has been refined to focus purely on the task of managing numbers that have been provided to Bandwidth by our customers, allowing the Dashboard business logic to be specific and focused with respect to managing these telephone numbers.
        <br>
        The API follows the Bandwidth Dashboard “order” model, where an order-id is created to track the interaction and refer back to it as needed.  This record will also be persisted to enable examination of past events.  
        <br>
        This single API controls both the installation and removal of telephone numbers.  The action is controlled by the use of an element in the payload, allowing a simple model for managing both addition and removal of telephone numbers.  Additionally, if the status of an existing telephone number needs to be reset within the Bandwidth Dashboard, possibly as the result of an ownership change (port) of the telephone number, the API can be called to “re-add” the number to the Bandwidth Dashboard, which will perform a reset on that number without removing it from service first.
        <br>
        The externalTns order tracks the orders related to customer-provided numbers into the customer's account. <br><br>
        This Import/Delete request reflects a customer-executed import or removal of numbers that they own and/or control.  The telephone numbers in question cannot be Bandwidth CLEC numbers, and are not subject to the normal telephone number life-cycle.<br><br>
        This Global Search API call is used for internal / admin staff to find and view any customer's externalTns orders, to assist our customers in the management of those orders.
    get:
        description: |
            Retrieve information about one or more externalTns orders, where the orders are chosen based on the search parameters provided in the API Call.
        queryParameters:
            accountId:
                description: This is the account that the searched-for order will be customer provided telephone numbers ordered to.  Specifying this parameter will restrict the search to externalTns orders within the specified account.
                type: integer
                example: 9900012
                repeat: false
            status:
                description: The status of the ExternalTnsOrder being searched for.  The PARTIAL status indicates that some of the Telephone Numbers were not successfully processed.
                type: string
                example: COMPLETE
                enum: [RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED]
                repeat: true
            tn:
                description: A Telephone Number (TN) that is referenced in the order
                type: string
                example: 9199918388
            customerOrderId:
                description: The Customer Order ID is an ID assigned by the account owner to provide a reference number for the ExternalTnsOrder.
                type: string
                example: ABCCorp12345
            createdDateFrom: 
                description: Checks the order's creation date against this value. Orders that have a creation date after this date will be included. Format is yyyy-mm-dd 
                type: string
                example: 2013-10-22
            createdDateTo:
                description: Checks the order's creation date against this value. Orders that have a creation date before this date will be included. Format is yyyy-mm-dd 
                type: string
                example: 2013-10-25
            orderIdFragment:
                description: This search parameter represents the internal Bandwidth Dashboard ID that has been assigned to the ExternalTnsOrder.  This parameter is the first few characters of the internal ID - the entire ID does not need to be specified.
                type: string
                example: ed1c0bed-e2
            action:
                description: whether or not the results should be restricted to IMPORT or REMOVE orders.  The Default value is "ALL"
                type: string
                example: REMOVE
                enum: [IMPORT, REMOVE, ALL]
                repeat: false
        responses:    
            200:
                description: |
                    200 OK indicates that the one or more externalTns orders have been found, and a response payload has been generated.
                body: 
                    application/xml:
                        example: 
                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                            <ExternalTnsOrders>
                                <TotalCount>2</TotalCount>
                                <ExternalTnsOrderSummary>
                                    <!-- Account ID preserved for uniformity with global list -->
                                    <accountId>1</accountId>
                                    <CompletedQuantity>3</CompletedQuantity>
                                    <userId>jbm</userId>
                                    <OrderDate>2016-01-15T11:36:52.727Z</OrderDate>
                                    <OrderType>ExternalTnsOrder</OrderType>
                                    <OrderStatus>COMPLETE</OrderStatus>
                                    <OrderId>65e03a35-6b97-48a5-8126-f47bad02df2a</OrderId>
                                </ExternalTnsOrderSummary>
                                <ExternalTnsOrderSummary>
                                    <accountId>9900012</accountId>
                                    <CompletedQuantity>5</CompletedQuantity>
                                    <userId>jbm</userId>
                                    <OrderDate>2016-01-15T11:36:26.633Z</OrderDate>
                                    <OrderType>ExternalTnsOrder</OrderType>
                                    <OrderStatus>PARTIAL</OrderStatus>
                                    <OrderId>d8f5abc0-1a4c-4c36-b387-93fb5b430784</OrderId>
                                </ExternalTnsOrderSummary>
                            </ExternalTnsOrders>
            404:
                description: Not Found.  If any errors are found in the processing of the query string a 404 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored. 
    /{orderId}: 
        description: |
            The "orderId" resource refers to a specific element of the externalTns orders collection.  Examining that resource provides detailed information on the specific identified externalTns order.
        get:
            description: |
                Retrieve information about a specific externalTns order identified as the resource.
            responses:
                200:
                    description: |
                        The descriptive payload for the externalTns orders query provides a broad range of information about the externalTns order identified in the URL.  Included amongst the information is...
                        <ul>
                        <li>ErrorList - the errors discovered with codes and explanations</li>
                        <li>ProcessingStatus(RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED) - the overall status of the order</li>
                        </ul>
                    body:
                        application/xml:
                            example: 
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <ExternalTnsOrder>
                                    <OrderCreateDate>2016-01-15T11:36:52.727Z</OrderCreateDate>
                                    <AccountId>1</AccountId>
                                    <CreatedByUser>jbm</CreatedByUser>
                                    <OrderId>65e03a35-6b97-48a5-8126-f47bad02df2a</OrderId>
                                    <ProcessingStatus>PARTIAL</ProcessingStatus>
                                    <Order>
                                        <CustomerOrderID>ICPA123ABC</CustomerOrderID>
                                        <SiteId>743</SiteId>
                                        <SipPeerId>303716</SipPeerId>
                                        <Action>[ IMPORT | REMOVE ]</Action>
                                        <TelephoneNumbers>
                                            <TelephoneNumber>9199918388</TelephoneNumber>
                                            <TelephoneNumber>4158714245</TelephoneNumber>
                                            <TelephoneNumber>4352154439</TelephoneNumber>
                                            <TelephoneNumber>4352154466</TelephoneNumber>
                                        </TelephoneNumbers>
                                    </Order>
                                    <Errors>
                                        <Error>
                                            <Code>[int]</Code>
                                            <Description>[string]</Description>
                                            <TelephoneNumbers>
                                                <TelephoneNumber>9199918388</TelephoneNumber>
                                            </TelephoneNumbers>
                                        </Error>
                                    </Errors>
                                </ExternalTnsOrder>
                404:
                    description: NOT FOUND - the identified externalTns order id does not exist in the system
                    body:
                        application/xml:
                            example: 
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <ExternalTnsOrderResponse>
                                    <ResponseStatus>
                                        <Description>The resource does not exist</Description>
                                    </ResponseStatus>
                                </ExternalTnsOrderResponse>
        /history: 
            description: |
                History information is available on orders that have gone through multiple transitions.  In this case the order will have one or more OrderHistory records associated with it, detailing the set of events that have affected the order.
            get:
                description: |
                    Retrieve the history information associated with an order
                responses:    
                    200:
                        description: |
                            The history payload is a set of history records, each of which contains:
                                <table style="text-align: left; width: 80%;" border="1" cellpadding="2" cellspacing="2">
                                    <tbody>
                                        <tr>
                                            <td>OrderDate</td>
                                            <td>The date that the order history event happened</td>
                                        </tr>
                                        <tr>
                                            <td>Note</td>
                                            <td>A Note or additional information included with the state change</td>
                                        </tr>
                                        <tr>
                                            <td>Author</td>
                                            <td>The user id that implemented the state change</td>
                                        </tr>
                                        <tr>
                                            <td>Status</td>
                                            <td>The new state of the E911order - RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED</td>
                                        </tr>
                                    </tbody>
                                </table>
                        body: 
                            application/xml:
                                example: 
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <OrderHistoryWrapper>
                                        <OrderHistory>
                                            <OrderDate>2015-06-16T13:30:08.623Z</OrderDate>
                                            <Author>admin</Author>
                                            <Status>RECEIVED</Status>
                                        </OrderHistory>
                                        <OrderHistory>
                                            <OrderDate>2015-06-16T13:30:09.041Z</OrderDate>
                                            <Author>admin</Author>
                                            <Status>FAILED</Status>
                                        </OrderHistory>
                                    </OrderHistoryWrapper>
/numbersAssignment: 
    description: |
        The TelephoneNumbersAssignment order resource represents the requests made to the Bandwidth Dashboard API to declare whether telephone numbers associated with the customer's account are assigned to end users or not.  This declaration of assignment is used in preparing NRUF Federal and PUC telephone number utilizatoin filings, and in providing justification for the acquisition and allocation of additional telephone numbers to the overall inventory
        <br>
        The API follows the Bandwidth Dashboard “order” model, where an order-id is created to track the interaction and refer back to it as needed.  This record will also be persisted to enable examination of past events.
        <br>
        This API allows our customers to designate the assignment status of the numbers on their account by providing a list of telephone numbers, and a designated assignment status.
        <br>
        This Global Search API call is used for internal / admin staff to find and view any customer's TelephoneNumbersAssignment orders, to assist our customers in the management of those orders.
    get:
        description: |
            Retrieve information about one or more TelephoneNumbersAssignment orders, where the orders are chosen based on the search parameters provided in the API Call.
        queryParameters:
            accountId:
                description: This is the account in which the telephone numbers reside.  Specifying this parameter will restrict the search to numbersAssignment orders within the specified account.
                type: integer
                example: 9900012
                repeat: false
            status:
                description: The status of the numbersAssignment Order being searched for.  The PARTIAL status indicates that some of the Telephone Numbers were not successfully processed.
                type: string
                example: COMPLETE
                enum: [RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED]
                repeat: true
            tn:
                description: A Telephone Number (TN) that is referenced in the order
                type: string
                example: 9199918388
            customerOrderId:
                description: The Customer Order ID is an ID assigned by the account owner to provide a reference number for the TelephoneNumbersAssignmentOrder.
                type: string
                example: ABCCorp12345
            createdDateFrom: 
                description: Checks the order's creation date against this value. Orders that have a creation date after this date will be included. Format is yyyy-mm-dd 
                type: string
                example: 2013-10-22
            createdDateTo:
                description: Checks the order's creation date against this value. Orders that have a creation date before this date will be included. Format is yyyy-mm-dd 
                type: string
                example: 2013-10-25
            orderIdFragment:
                description: This search parameter represents the internal Bandwidth Dashboard ID that has been assigned to the TelephoneNumbersAssignmentOrder.  This parameter is the first few characters of the internal ID - the entire ID does not need to be specified.
                type: string
                example: ed1c0bed-e2
            action:
                description: whether or not the results should be restricted to ASSIGNED or UNASSIGNED assignment actions."
                type: string
                example: ASSIGNED
                enum: [ASSIGNED, UNASSIGNED]
                repeat: false
        responses:    
            200:
                description: |
                    200 OK indicates that the one or more TelephoneNumbersAssignment orders have been found, and a response payload has been generated.
                body: 
                    application/xml:
                        example: 
                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                            <TelephoneNumbersAssignmentOrders>
                                <TotalCount>3</TotalCount>
                                <TelephoneNumbersAssignmentOrderSummary>
                                    <!-- Account ID preserved for uniformity with global list -->
                                    <accountId>1</accountId>
                                    <CustomerOrderId>ICPA123ABD</CustomerOrderId>
                                    <userId>jbm</userId>
                                    <OrderDate>2016-01-15T11:36:52.727Z</OrderDate>
                                    <TotalQuantity>4</TotalQuantity>
                                    <OrderType>NUMBERS_ASSIGNMENT_ORDER</OrderType>
                                    <OrderStatus>COMPLETE</OrderStatus>
                                    <Action>ASSIGN</Action>
                                    <OrderId>65e03a35-6b97-48a5-8126-f47bad02df2a</OrderId>
                                </TelephoneNumbersAssignmentOrderSummary>
                                <TelephoneNumbersAssignmentOrderSummary>
                                    <accountId>753</accountId>
                                    <CustomerOrderId>ICPA123ABC</CustomerOrderId>
                                    <userId>systemUser</userId>
                                    <OrderDate>2016-11-02T13:00:52.824Z</OrderDate>
                                    <OrderType>NUMBERS_ASSIGNMENT_ORDER</OrderType>
                                    <OrderStatus>PARTIAL</OrderStatus>
                                    <Action>ASSIGN</Action>
                                    <FailedQuantity>1</FailedQuantity>
                                    <OrderId>8f78dbc5-5c01-4b55-af15-2829fe8cf73f</OrderId>
                                    <TotalQuantity>4</TotalQuantity>
                                </TelephoneNumbersAssignmentOrderSummary>
                                <TelephoneNumbersAssignmentOrderSummary>
                                    <accountId>9900012</accountId>
                                    <TotalQuantity>4</TotalQuantity>
                                    <FailedQuantity>1</FailedQuantity>
                                    <userId>not_jbm</userId>
                                    <OrderDate>2016-01-15T11:36:26.633Z</OrderDate>
                                    <OrderType>NUMBERS_ASSIGNMENT_ORDER</OrderType>
                                    <OrderStatus>PARTIAL</OrderStatus>
                                    <Action>UNASSIGN</Action>
                                    <OrderId>d8f5abc0-1a4c-4c36-b387-93fb5b430784</OrderId>
                                </TelephoneNumbersAssignmentOrderSummary>
                            </TelephoneNumbersAssignmentOrders>
            400:
                description: Bad Request.  If any errors are found in the processing of the query string a 400 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored.
    /{orderId}: 
        description: |
            The "orderId" resource refers to a specific element of the TelephoneNumbersAssignment orders collection.  Examining that resource provides detailed information on the specific identified TelephoneNumbersAssignment order.
        get:
            description: |
                Retrieve information about a specific assignedTns order identified as the resource.
            responses:
                200:
                    description: |
                        The descriptive payload for the TelephoneNumbersAssignment orders query provides a broad range of information about the TelephoneNumbersAssignment order identified in the URL.  Included amongst the information is...
                        <ul>
                        <li>ErrorList - the errors discovered with codes and explanations</li>
                        <li>ProcessingStatus(RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED) - the overall status of the order</li>
                        </ul>
                    body:
                        application/xml:
                            example: 
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <TelephoneNumbersAssignmentOrderResponse>
                                    <OrderCreateDate>2016-01-15T11:36:52.727Z</OrderCreateDate>
                                    <AccountId>1</AccountId>
                                    <CreatedByUser>jbm</CreatedByUser>
                                    <OrderId>65e03a35-6b97-48a5-8126-f47bad02df2a</OrderId>
                                    <ProcessingStatus>PARTIAL</ProcessingStatus>
                                    <TotalQuantity>4</TotalQuantity>
                                    <FailedQuantity>1</FailedQuantity>
                                    <TelephoneNumbersAssignmentOrder>
                                        <CustomerOrderId>ICPA123ABC</CustomerOrderId>
                                        <Action>ASSIGN</Action>
                                        <TelephoneNumbers>
                                            <TelephoneNumber>9172000103</TelephoneNumber>
                                            <TelephoneNumber>4158714245</TelephoneNumber>
                                            <TelephoneNumber>4352154439</TelephoneNumber>
                                            <TelephoneNumber>4352154466</TelephoneNumber>
                                        </TelephoneNumbers>
                                    </TelephoneNumbersAssignmentOrder>
                                    <Errors>
                                        <Error>
                                            <Code>5076</Code>
                                            <Description>Number does not belong to this account.</Description>
                                            <TelephoneNumbers>
                                                <TelephoneNumber>9172000103</TelephoneNumber>
                                            </TelephoneNumbers>
                                        </Error>
                                    </Errors>
                                </TelephoneNumbersAssignmentOrderResponse>
                404:
                    description: NOT FOUND - the identified TelephoneNumbersAssignment order id does not exist in the system
                    body:
                        application/xml:
                            example: 
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <TelephoneNumbersAssignmentOrderResponse>
                                    <ResponseStatus>
                                        <Description>The resource does not exist</Description>
                                    </ResponseStatus>
                                </TelephoneNumbersAssignmentOrderResponse>
        #history is not required.
/reprovisionTns: 
    description: This resource allowes to reprovision up to 5000 tns from Iris to Core2 database.
    post:
        description: Re-provision a set of telephone numbers.
        body:
            application/xml:
                example: |
                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                    <ReprovisionTns>
                        <TelephoneNumberList>
                                <TelephoneNumber>2012001665</TelephoneNumber>
                                <TelephoneNumber>2012009183</TelephoneNumber>
                                <TelephoneNumber>3473528385</TelephoneNumber>
                                <TelephoneNumber>4158714245</TelephoneNumber>
                        </TelephoneNumberList>
                    </ReprovisionTns>
        responses:
            200:
                description: Reprovision was fired, results collected in response.
                body:
                    application/xml:
                        example: |
                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                            <ReprovisionTnsResponse>
                                <CompletedQuantity>2</CompletedQuantity>
                                <CreatedByUser>systemUser</CreatedByUser>
                                <ErrorList>
                                    <Error>
                                        <Code>5070</Code>
                                        <Description>Telephone number is invalid.</Description>
                                        <TelephoneNumber>4158714245</TelephoneNumber>
                                    </Error>
                                    <Error>
                                        <Code>5074</Code>
                                        <Description>Telephone number is not available.</Description>
                                        <TelephoneNumber>3473528385</TelephoneNumber>
                                    </Error>
                                </ErrorList>
                                <CompletedNumbers>
                                    <TelephoneNumberList>
                                        <TelephoneNumber>2012001665</TelephoneNumber>
                                        <TelephoneNumber>2012009183</TelephoneNumber>
                                    </TelephoneNumberList>
                                </CompletedNumbers>
                            </ReprovisionTnsResponse>
/admin: 
    description: |
        the <b>Admin API</b> resource is a hidden resource that is used to work with admin information.
    /data: 
        description: This resource retrieves admin data information according to data type.
        get:
            responses:
                200:
                    description: |
                        Return all admin date types
                    body:
                        application/xml:
                            example: |
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <AdminDataResponse>
                                    <DataTypes>
                                        <Type>tpa</Type>
                                        <Type>vendors</Type>
                                        <Type>bwspids</Type>
                                        <Type>sbcnodegroups</Type>
                                    </DataTypes>
                                </AdminDataResponse>
        /tpa: 
            description: This resource retrieves information about TPA.
            get:
                responses:
                    200:
                        description: |
                            Return all existed TPA
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <AdminDataResponse>
                                        <Tpas>
                                            <Tpa>
                                                <Spid>5123</Spid>
                                                <Name>ATT</Name>
                                                <NeustarTradingPartner>true</NeustarTradingPartner>
                                                <Ebonded>true</Ebonded>
                                                <Wireless>false</Wireless>
                                                <AccountNumberRequired>false</AccountNumberRequired>
                                                <StateMatchRequired>true</StateMatchRequired>
                                                <PortOutMinDays>3</PortOutMinDays>
                                            </Tpa>
                                            <Tpa>
                                                <Spid>5200</Spid>
                                                <Name>ATT</Name>
                                                <NeustarTradingPartner>true</NeustarTradingPartner>
                                                <Ebonded>true</Ebonded>
                                                <Wireless>false</Wireless>
                                                <AccountNumberRequired>false</AccountNumberRequired>
                                                <StateMatchRequired>true</StateMatchRequired>
                                                <PortOutMinDays>3</PortOutMinDays>
                                            </Tpa>
                                        </Tpas>
                                    </AdminDataResponse>
            /{spid}: 
                description: This resource allow manage TPA information.
                get:
                    description: Get TPA.
                    responses:
                        200:
                            description: |
                                Return TPA
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <AdminDataResponse>
                                            <Tpa>
                                                <Spid>5123</Spid>
                                                <Name>ATT</Name>
                                                <NeustarTradingPartner>true</NeustarTradingPartner>
                                                <Ebonded>true</Ebonded>
                                                <Wireless>false</Wireless>
                                                <AccountNumberRequired>false</AccountNumberRequired>
                                                <StateMatchRequired>true</StateMatchRequired>
                                                <PortOutMinDays>3</PortOutMinDays>
                                            </Tpa>
                                        </AdminDataResponse>
                        404:
                            description: |
                                TPA not found
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <AdminDataResponse>
                                            <ResponseStatus>
                                                <Description>The resource does not exist</Description>
                                            </ResponseStatus>
                                        </AdminDataResponse>
                put:
                    description: Allows to create or update TPA.
                    body:
                        application/xml:
                            example: |
                                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                <Tpa>
                                   <Spid>5123</Spid>
                                   <Name>ATT</Name>
                                   <NeustarTradingPartner>true</NeustarTradingPartner>
                                   <Ebonded>true</Ebonded>
                                   <Wireless>false</Wireless>
                                   <AccountNumberRequired>false</AccountNumberRequired>
                                   <StateMatchRequired>true</StateMatchRequired>
                                   <PortOutMinDays>3</PortOutMinDays>
                                </Tpa>
                    responses:
                        200:
                            description: |
                                TPA updated
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <AdminDataResponse>
                                            <Tpa>
                                                <Spid>5123</Spid>
                                                <Name>ATT</Name>
                                                <NeustarTradingPartner>true</NeustarTradingPartner>
                                                <Ebonded>true</Ebonded>
                                                <Wireless>false</Wireless>
                                                <AccountNumberRequired>false</AccountNumberRequired>
                                                <StateMatchRequired>true</StateMatchRequired>
                                                <PortOutMinDays>3</PortOutMinDays>
                                            </Tpa>
                                        </AdminDataResponse>
                        201:
                            description: |
                                TPA created
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <AdminDataResponse>
                                            <Tpa>
                                                <Spid>5123</Spid>
                                                <Name>ATT</Name>
                                                <NeustarTradingPartner>true</NeustarTradingPartner>
                                                <Ebonded>true</Ebonded>
                                                <Wireless>false</Wireless>
                                                <AccountNumberRequired>false</AccountNumberRequired>
                                                <StateMatchRequired>true</StateMatchRequired>
                                                <PortOutMinDays>3</PortOutMinDays>
                                            </Tpa>
                                        </AdminDataResponse>
                        400:
                            description: |
                                Validation error
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <AdminDataResponse>
                                            <ResponseStatus>
                                                <ErrorCode>1003</ErrorCode>
                                                <Description>Spid is required</Description>
                                            </ResponseStatus>
                                        </AdminDataResponse>
                delete:
                    description: Delete TPA.
                    responses:
                        200:
                            description: |
                                TPA deleted
        /vendors: 
            description: This resource retrieves information about vendors
            get:
                description: |
                        Get all vendors and filter by name
                queryParameters:
                    nameFragment:
                        description: Fragment of vendor name
                        type: string
                        example: Old
                        repeat: false
                responses:
                    200:
                        description: |
                            Return existed Vendors
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <AdminDataResponse>
                                        <VendorList>
                                            <Vendor>
                                                <VendorId>47</VendorId>
                                                <VendorName> Broadwing</VendorName>
                                            </Vendor>
                                            <Vendor>
                                                <VendorId>32</VendorId>
                                                <VendorName> Connexstar</VendorName>
                                            </Vendor>
                                        </VendorList>
                                    </AdminDataResponse>
            /{id}: 
                description: This resource retrieves admin data information according to data type.
                get:
                    description: Get Vendor.
                    responses:
                        200:
                            description: |
                                Return Vendor
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <AdminDataResponse>
                                            <Vendor>
                                                <VendorId>32</VendorId>
                                                <LegacyId>12280865-a1c5-4293-aae8-10c3291e3a06</LegacyId>
                                                <ManualPortEnabled>false</ManualPortEnabled>
                                                <VendorName> Connexstar</VendorName>
                                                <TollfreeManualPortEnabled>false</TollfreeManualPortEnabled>
                                            </Vendor>
                                        </AdminDataResponse>
                        404:
                            description: |
                                Vendor not found
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <AdminDataResponse>
                                            <ResponseStatus>
                                                <Description>The resource does not exist</Description>
                                            </ResponseStatus>
                                        </AdminDataResponse>
                put:
                    description: Allows to create or update Vendor.
                    body:
                        application/xml:
                            example: |
                                <Vendor>
                                    <VendorId>32</VendorId>
                                    <LegacyId>12280865-a1c5-4293-aae8-10c3291e3a06</LegacyId>
                                    <ManualPortEnabled>false</ManualPortEnabled>
                                    <VendorName> Connexstar</VendorName>
                                    <TollfreeManualPortEnabled>false</TollfreeManualPortEnabled>
                                </Vendor>
                    responses:
                        200:
                            description: |
                                Vendor updated
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <AdminDataResponse>
                                            <Vendor>
                                                <VendorId>32</VendorId>
                                                <LegacyId>12280865-a1c5-4293-aae8-10c3291e3a06</LegacyId>
                                                <ManualPortEnabled>false</ManualPortEnabled>
                                                <VendorName> Connexstar</VendorName>
                                                <TollfreeManualPortEnabled>false</TollfreeManualPortEnabled>
                                            </Vendor>
                                        </AdminDataResponse>
                        201:
                            description: |
                                Vendor created
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <AdminDataResponse>
                                            <Vendor>
                                                <VendorId>32</VendorId>
                                                <LegacyId>12280865-a1c5-4293-aae8-10c3291e3a06</LegacyId>
                                                <ManualPortEnabled>false</ManualPortEnabled>
                                                <VendorName> Connexstar</VendorName>
                                                <TollfreeManualPortEnabled>false</TollfreeManualPortEnabled>
                                            </Vendor>
                                        </AdminDataResponse>
                        400:
                            description: |
                                Validation error
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <AdminDataResponse>
                                            <ResponseStatus>
                                                <ErrorCode>12734</ErrorCode>
                                                <Description>Vendor ID in the link and in the body is not the same.</Description>
                                            </ResponseStatus>
                                        </AdminDataResponse>
                delete:
                    description: Detele Vendor.
                    responses:
                        200:
                            description: |
                                Vendor deleted
        /bwspids: 
            description: This resource retrieves information about bwspids
            get:
                description: |
                        Get all bwspids
                responses:
                    200:
                        description: |
                            Return existed Bwspids
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <AdminDataResponse>
                                        <BwspidSystemValues>
                                            <BwspidSystemValue>
                                                <Id>2</Id>
                                                <RouteType>onNet</RouteType>
                                                <Priority>1</Priority>
                                                <Spid>E830</Spid>
                                                <Type>NNID</Type>
                                                <Alias>BW ESPID E830 Route</Alias>
                                            </BwspidSystemValue>
                                            <BwspidSystemValue>
                                                <Id>4</Id>
                                                <RouteType>onNet</RouteType>
                                                <Priority>2</Priority>
                                                <Spid>X641</Spid>
                                                <Type>NPAC</Type>
                                                <Alias>Bandwidth ALT-SPID</Alias>
                                            </BwspidSystemValue>
                                        </BwspidSystemValues>
                                    </AdminDataResponse>
            /{id}: 
                description: This resource retrieves information about Bwspids.
                get:
                    description: Get Bwspid
                    responses:
                        200:
                            description: |
                                Return Bwspid
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <AdminDataResponse>
                                            <BwspidSystemValue>
                                                <Id>2</Id>
                                                <RouteType>onNet</RouteType>
                                                <Priority>1</Priority>
                                                <Spid>E830</Spid>
                                                <Type>NNID</Type>
                                                <Alias>BW ESPID E830 Route</Alias>
                                            </BwspidSystemValue>
                                        </AdminDataResponse>
                        404:
                            description: |
                                Bwspid not found
                            body:
                                application/xml:
                                    example: |
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <AdminDataResponse>
                                            <ResponseStatus>
                                                <ErrorCode>12098</ErrorCode>
                                                <Description>Bwspid value Id '1111' does not exist</Description>
                                            </ResponseStatus>
                                        </AdminDataResponse>
        /sbcnodegroups: 
            description: This resource retrieves information about SBC Node Groups.
            get:
                responses:
                    200:
                        description: |
                            Return all existing SBC Node Groups
                        body:
                            application/xml:
                                example: |
                                    <AdminDataResponse>
                                        <SbcNodeGroups>
                                                 <SbcNodeGroup>
                                                     <Id>1</Id>
                                                     <Name>East Coast 01</Name>
                                                 </SbcNodeGroup>
                                                 <SbcNodeGroup>
                                                     <Id>2</Id>
                                                     <Name>West Coast 01</Name>
                                                 </SbcNodeGroup>
                                             </SbcNodeGroups>
                                    </AdminDataResponse>
    /settings: 
        description: |
            the <b>Admin Settings API</b> resource is a hidden resource that is used to work with admin settings information.
        /{id}: 
            description: |
                This resource allow manage admin settings.
            get:
                description: Get Property
                responses:
                    200:
                        description: |
                            Return Property
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <SettingResponse>
                                        <Setting>
                                            <SettingName>MAX_NUMBER_OF_TNS_IN_AN_AUTOMATED_PORT</SettingName>
                                            <Value>12</Value>
                                        </Setting>
                                    </SettingResponse>
                    404:
                        description: |
                            Property not found
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <SettingResponse>
                                        <ResponseStatus>
                                            <ErrorCode>12648</ErrorCode>
                                            <Description>Property does not exist for provided property name test</Description>
                                        </ResponseStatus>
                                    </SettingResponse>
            put:
                description: Allows to update Property.
                body:
                    application/xml:
                        example: |
                            <Setting>
                                <SettingName>MAX_NUMBER_OF_TNS_IN_AN_AUTOMATED_PORT</SettingName>
                                <Value>12</Value>
                            </Setting>
                responses:
                    200:
                        description: |
                            Property updated
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <SettingResponse>
                                        <Setting>
                                            <SettingName>MAX_NUMBER_OF_TNS_IN_AN_AUTOMATED_PORT</SettingName>
                                            <Value>15</Value>
                                        </Setting>
                                    </SettingResponse>
                    400:
                        description: |
                            Validation error
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <SettingResponse>
                                        <ResponseStatus>
                                            <ErrorCode>12808</ErrorCode>
                                            <Description>Max number of tns should be greater or equal to '10' and less than or equal to '999'.</Description>
                                        </ResponseStatus>
                                    </SettingResponse>
                    404:
                        description: |
                            Property not found
                        body:
                            application/xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <SettingResponse>
                                        <ResponseStatus>
                                            <Description>Can't find property with name test</Description>
                                        </ResponseStatus>
                                    </SettingResponse>
/audit: 
    description:
        This API allows to trigger tn integrity audit with default (admin settings) and custom parameters.
    post:
        description:
            Allows admin user to trigger integrity audit. There are 3 possible combinations of parameters.
            1. Without parameters - triggers next portion of nightly audit immediately after last nightly left off, using default parameters from admin settings.
            2. With chunkSize + chunksNumber - triggers next portion of nightly audit immediately after last nightly left off, using custom parameters.
            3. RangeStart + chunkSize + chunksNumber - triggers custom audit which will not considered as a part of nightly flow.
        queryParameters:
                rangeStart:
                    displayName: Range start
                    type: integer
                    description: From which point to start an audit.
                    required: false
                chunkSize:
                    displayName: Chunk size
                    type: integer
                    description: Defines how wide is a range of tns which will be retrieved and validated at once.
                    required: false
                chunksNumber:
                    displayName: Chunks number
                    type: integer
                    description: Defines how many chunks should be processed.
                    required: false
        responses:
            202:
                description:
                    Accepted.
            400:
                description:
                    Bad request.
                    Returned in case of passing malformed or invalid query params.
/batches: 
    description:
        This API allows to see the list of all batch jobs which are ran by the system and forcefully trigger them.
    get:
        responses:
            200:
                description: |
                    Ok.
                body:
                    application/xml:
                        example: |
                            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                            <BatchNames>
                                <BatchName>dldaFinalizationTask</BatchName>
                                <BatchName>manualPortInActivationTask</BatchName>
                                <BatchName>billingReportCleanUpTask</BatchName>
                                <BatchName>internalPortOutPotTask</BatchName>
                            </BatchNames>
    /{batchName}: 
        description:
            This API allows to forcefully trigger specific batch job.
        post:
            responses:
                201:
                    description: |
                        Created. Means that specific batch job was triggered.
                    body:
                        application/xml:
                            example: |
                                integrityAuditTask was sent
                400:
                    description: |
                        Bad request. Returned in case of passing non existent batch job name.
                    body:
                        application/xml:
                            example: |
                                No bean named 'someNonexistentTask' is defined
